//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reports.CommonSearchServiceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
    [System.SerializableAttribute()]
    public partial class NextGenCustomException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorStackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorSource {
            get {
                return this.ErrorSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorSourceField, value) != true)) {
                    this.ErrorSourceField = value;
                    this.RaisePropertyChanged("ErrorSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorStackTrace {
            get {
                return this.ErrorStackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorStackTraceField, value) != true)) {
                    this.ErrorStackTraceField = value;
                    this.RaisePropertyChanged("ErrorStackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Wipro.NxG.HIS", ConfigurationName="CommonSearchServiceClient.CommonSearchServiceContract")]
    public interface CommonSearchServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsResponse")]
        System.Data.DataSet GetSearchResults(string searchName, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsAsync(string searchName, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsTuned", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsWardIdResponse")]
        System.Data.DataSet GetSearchResultsWardId(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsTuned", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsWardIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsWardIdAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsPageWiseTuned", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsPageWiseWardIdRe" +
            "sponse")]
        System.Data.DataSet GetSearchResultsPageWiseWardId(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsPageWiseTuned", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsPageWiseWardIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsPageWiseWardIdAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsPageWise", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsPageWiseResponse" +
            "")]
        System.Data.DataSet GetSearchResultsPageWise(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsPageWise", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsPageWiseResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsPageWiseAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsTagIdForPHC", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsTagIdForPHCRespo" +
            "nse")]
        System.Data.DataSet GetSearchResultsTagIdForPHC(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, string HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsTagIdForPHC", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsTagIdForPHCRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsTagIdForPHCAsync(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, string HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsTagId", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsTagIdResponse")]
        System.Data.DataSet GetSearchResultsTagId(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsTagId", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsTagIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsTagIdAsync(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetDetailsResponse")]
        System.Data.DataSet GetDetails(string strSQL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDetailsAsync(string strSQL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchInvestigationandProcedures", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchInvestigationandProceduresR" +
            "esponse")]
        System.Data.DataSet FetchInvestigationandProcedures(string strFilter, int intServiceId, int hospitalId, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchInvestigationandProcedures", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchInvestigationandProceduresR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchInvestigationandProceduresAsync(string strFilter, int intServiceId, int hospitalId, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsResponse")]
        System.Data.DataSet GetSearchDetails(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchDetails_ICD", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetails_ICDResponse")]
        System.Data.DataSet GetSearchDetails_ICD(string StoredProcedureName, string TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchDetails_ICD", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetails_ICDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetails_ICDAsync(string StoredProcedureName, string TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoaded", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedRespon" +
            "se")]
        System.Data.DataSet GetSearchDetailsOverLoaded(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoaded", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsOverLoadedAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedEx", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedExResp" +
            "onse")]
        System.Data.DataSet GetSearchDetailsOverLoadedEx(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedEx", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedExResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsOverLoadedExAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedMultiE" +
            "x", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedMultiE" +
            "xResponse")]
        System.Data.DataSet GetSearchDetailsOverLoadedMultiEx(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedMultiE" +
            "x", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchDetailsOverLoadedMultiE" +
            "xResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsOverLoadedMultiExAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveSingleMaster", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveSingleMasterResponse")]
        bool SaveSingleMaster(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l, int langid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveSingleMaster", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveSingleMasterResponse")]
        System.Threading.Tasks.Task<bool> SaveSingleMasterAsync(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l, int langid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetails1", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetails1Response")]
        System.Data.DataSet GetWorkListDetails1(string workListName, string FilterCondition, int Patientid, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetails1", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetails1Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetails1Async(string workListName, string FilterCondition, int Patientid, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsResponse")]
        System.Data.DataSet GetWorkListDetails(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetails2", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetails2Response")]
        System.Data.DataSet GetWorkListDetails2(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, System.DateTime dtFromDate, System.DateTime dtToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetails2", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetails2Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetails2Async(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, System.DateTime dtFromDate, System.DateTime dtToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListUHID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListUHIDResponse")]
        System.Data.DataSet GetWorkListUHID(string workListName, string UHID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListUHID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListUHIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListUHIDAsync(string workListName, string UHID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetFoodOrderWorkList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetFoodOrderWorkListResponse")]
        System.Data.DataSet GetFoodOrderWorkList(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strStartTime, string strEndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetFoodOrderWorkList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetFoodOrderWorkListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFoodOrderWorkListAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strStartTime, string strEndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsstrOrderBy", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsstrOrderByResp" +
            "onse")]
        System.Data.DataSet GetWorkListDetailsstrOrderBy(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsstrOrderBy", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsstrOrderByResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsstrOrderByAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListHospitalDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListHospitalDetailsRespon" +
            "se")]
        System.Data.DataSet GetWorkListHospitalDetails(string workListName, int HospitalID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListHospitalDetails", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListHospitalDetailsRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListHospitalDetailsAsync(string workListName, int HospitalID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsByOrder", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsByOrderRespons" +
            "e")]
        System.Data.DataSet GetWorkListDetailsByOrder(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsByOrder", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsByOrderRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsByOrderAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsByFilter", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsByFilterRespon" +
            "se")]
        System.Data.DataSet GetWorkListDetailsByFilter(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy, string strFilterBy, string Specimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsByFilter", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsByFilterRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsByFilterAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy, string strFilterBy, string Specimen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartSearchresults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartSearchResultsResponse")]
        System.Data.DataSet GetSmartSearchResults(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartSearchresults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartSearchResultsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSmartSearchResultsAsync(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetItemMasterSmartSearchResults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetItemMasterSmartSearchResultsR" +
            "esponse")]
        System.Data.DataSet GetItemMasterSmartSearchResults(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetItemMasterSmartSearchResults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetItemMasterSmartSearchResultsR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetItemMasterSmartSearchResultsAsync(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartSearchResultsparam", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartSearchResultsparamRespon" +
            "se")]
        System.Data.DataSet GetSmartSearchResultsparam(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartSearchResultsparam", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartSearchResultsparamRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSmartSearchResultsparamAsync(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetCompletionListResponse")]
        System.Data.DataSet GetCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetCompletionListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetItemMasterCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetItemMasterCompletionListRespo" +
            "nse")]
        System.Data.DataSet GetItemMasterCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetItemMasterCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetItemMasterCompletionListRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetItemMasterCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetInvestigationCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetInvestigationCompletionListRe" +
            "sponse")]
        System.Data.DataSet GetInvestigationCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetInvestigationCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetInvestigationCompletionListRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInvestigationCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetCompletionListparam", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetCompletionListparamResponse")]
        System.Data.DataSet GetCompletionListparam(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetCompletionListparam", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetCompletionListparamResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompletionListparamAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHospitalCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHospitalCompletionListRespons" +
            "e")]
        System.Data.DataSet GetHospitalCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHospitalCompletionList", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHospitalCompletionListRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartConResults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartConResultsResponse")]
        System.Data.DataSet GetSmartConResults(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartConResults", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartConResultsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSmartConResultsAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSSResult", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSSResultResponse")]
        string GetSSResult(string XmlFileName, string FilterCondition, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSSResult", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSSResultResponse")]
        System.Threading.Tasks.Task<string> GetSSResultAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHospitalSSResult", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHospitalSSResultResponse")]
        string GetHospitalSSResult(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHospitalSSResult", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHospitalSSResultResponse")]
        System.Threading.Tasks.Task<string> GetHospitalSSResultAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSSResultDataset", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSSResultDatasetResponse")]
        System.Data.DataSet GetSSResultDataset(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSSResultDataset", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSSResultDatasetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSSResultDatasetAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetDOCResult", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetDOCResultResponse")]
        System.Data.DataSet GetDOCResult(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetDOCResult", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetDOCResultResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDOCResultAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartConsultation", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartConsultationResponse")]
        System.Data.DataSet GetSmartConsultation(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3, int Param4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSmartConsultation", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSmartConsultationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSmartConsultationAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3, int Param4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHospitalSmartConsultation", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHospitalSmartConsultationResp" +
            "onse")]
        System.Data.DataSet GetHospitalSmartConsultation(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int HospitalID, int Param3, int Param4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHospitalSmartConsultation", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHospitalSmartConsultationResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalSmartConsultationAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int HospitalID, int Param3, int Param4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchUserPermissions", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchUserPermissions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.CommonSearchServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchUserPermissionsNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchUserPermissions(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchUserPermissions", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchUserPermissions")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchUserPermissionsAsync(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/SearchServiceContrac/SaveMasterLocations", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveMasterLocationsResponse")]
        string SaveMasterLocations(int intID, int intHospitalID, string strType, System.Data.DataSet dsItemHospitalDetails, int intUSERID, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/SearchServiceContrac/SaveMasterLocations", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveMasterLocationsResponse")]
        System.Threading.Tasks.Task<string> SaveMasterLocationsAsync(int intID, int intHospitalID, string strType, System.Data.DataSet dsItemHospitalDetails, int intUSERID, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/SearchServiceContrac/FetchMasterLocations", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchMasterLocationsResponse")]
        System.Data.DataSet FetchMasterLocations(int intTableID, string strType, int intID, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/SearchServiceContrac/FetchMasterLocations", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchMasterLocationsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchMasterLocationsAsync(int intTableID, string strType, int intID, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsHospitalWise", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsHospitalWiseResp" +
            "onse")]
        System.Data.DataSet GetSearchResultsHospitalWise(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsHospitalWise", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsHospitalWiseResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsHospitalWiseAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsHospitalTestWise", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsHospitalTestWise" +
            "Response")]
        System.Data.DataSet GetSearchResultsHospitalTestWise(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID, int TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsHospitalTestWise", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsHospitalTestWise" +
            "Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsHospitalTestWiseAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID, int TestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG/SubStoresServiceContract/FetchDataForDashBoard", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchDataForDashBoardResponse")]
        System.Data.DataSet FetchDataForDashBoard(int SID, int HospitalID, int FacilityID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG/SubStoresServiceContract/FetchDataForDashBoard", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchDataForDashBoardResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDataForDashBoardAsync(int SID, int HospitalID, int FacilityID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchOrderLevelStatus", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchOrderLevelStatusResponse")]
        System.Data.DataSet FetchOrderLevelStatus(int TaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchOrderLevelStatus", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchOrderLevelStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchOrderLevelStatusAsync(int TaskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsPerfByDates", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsPerfByDatesRes" +
            "ponse")]
        System.Data.DataSet GetWorkListDetailsPerfByDates(string workListName, int startRow, int EndRow, string FilterCondition, string strStartDate, string strEndDate, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetWorkListDetailsPerfByDates", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetWorkListDetailsPerfByDatesRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsPerfByDatesAsync(string workListName, int startRow, int EndRow, string FilterCondition, string strStartDate, string strEndDate, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SavePatientUploadFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SavePatientUploadFileResponse")]
        bool SavePatientUploadFile(int PatientID, int IPID, int HospitalID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SavePatientUploadFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SavePatientUploadFileResponse")]
        System.Threading.Tasks.Task<bool> SavePatientUploadFileAsync(int PatientID, int IPID, int HospitalID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveCompanyUploadFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveCompanyUploadFileResponse")]
        bool SaveCompanyUploadFile(int AgreementID, int CompanyID, int LetterID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveCompanyUploadFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveCompanyUploadFileResponse")]
        System.Threading.Tasks.Task<bool> SaveCompanyUploadFileAsync(int AgreementID, int CompanyID, int LetterID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchPatientUploadedFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchPatientUploadedFileResponse" +
            "")]
        System.Data.DataSet FetchPatientUploadedFile(int PatientID, int IPID, int FeatureID, int WorkStationID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchPatientUploadedFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchPatientUploadedFileResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientUploadedFileAsync(int PatientID, int IPID, int FeatureID, int WorkStationID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchCompanyUploadedFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchCompanyUploadedFileResponse" +
            "")]
        System.Data.DataSet FetchCompanyUploadedFile(int AgreementID, int CompanyID, int LetterID, int FeatureID, int WorkStationID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/FetchCompanyUploadedFile", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/FetchCompanyUploadedFileResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyUploadedFileAsync(int AgreementID, int CompanyID, int LetterID, int FeatureID, int WorkStationID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveSMS", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveSMSResponse")]
        string SaveSMS(System.Data.DataSet dsSMS, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveSMS", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveSMSResponse")]
        System.Threading.Tasks.Task<string> SaveSMSAsync(System.Data.DataSet dsSMS, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveEmail", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveEmailResponse")]
        string SaveEmail(System.Data.DataSet dsEmail, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveEmail", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveEmailResponse")]
        System.Threading.Tasks.Task<string> SaveEmailAsync(System.Data.DataSet dsEmail, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiers", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersResponse")]
        System.Data.DataSet GetIdentifiers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiers", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiersById", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersByIdResponse")]
        System.Data.DataSet GetIdentifiersById(int intIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiersById", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersByIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersByIdAsync(int intIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiersByName", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersByNameResponse")]
        System.Data.DataSet GetIdentifiersByName(string strIdentiferName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiersByName", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersByNameResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersByNameAsync(string strIdentiferName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiersByType", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersByTypeResponse")]
        System.Data.DataSet GetIdentifiersByType(byte byteIdentifierType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetIdentifiersByType", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetIdentifiersByTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersByTypeAsync(byte byteIdentifierType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction1ByIPID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction1ByIPI" +
            "DResponse")]
        System.Data.DataSet GetHTMLTemplateTransaction1ByIPID(int IPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction1ByIPID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction1ByIPI" +
            "DResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction1ByIPIDAsync(int IPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction1ByIPIDMonito" +
            "rID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction1ByIPI" +
            "DMonitorIDResponse")]
        System.Data.DataSet GetHTMLTemplateTransaction1ByIPIDMonitorID(int intIPID, int intMonitorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction1ByIPIDMonito" +
            "rID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction1ByIPI" +
            "DMonitorIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction1ByIPIDMonitorIDAsync(int intIPID, int intMonitorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction2ByIPID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction2ByIPI" +
            "DResponse")]
        System.Data.DataSet GetHTMLTemplateTransaction2ByIPID(int intIPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction2ByIPID", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction2ByIPI" +
            "DResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction2ByIPIDAsync(int intIPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction2ByIPIDIdenti" +
            "fierId", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction2ByIPI" +
            "DIdentifierIdResponse")]
        System.Data.DataSet GetHTMLTemplateTransaction2ByIPIDIdentifierId(int intIPID, int intIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction2ByIPIDIdenti" +
            "fierId", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction2ByIPI" +
            "DIdentifierIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction2ByIPIDIdentifierIdAsync(int intIPID, int intIdentifierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction2ByIPIDIdenti" +
            "fierIdMonitorId", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction2ByIPI" +
            "DIdentifierIdMonitorIdResponse")]
        System.Data.DataSet GetHTMLTemplateTransaction2ByIPIDIdentifierIdMonitorId(int intIPID, int intIdentifierId, int intMonitorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetHTMLTemplateTransaction2ByIPIDIdenti" +
            "fierIdMonitorId", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetHTMLTemplateTransaction2ByIPI" +
            "DIdentifierIdMonitorIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction2ByIPIDIdentifierIdMonitorIdAsync(int intIPID, int intIdentifierId, int intMonitorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveHTMLTemplateTransaction1", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveHTMLTemplateTransaction1Resp" +
            "onse")]
        int SaveHTMLTemplateTransaction1(int intIPID, int intMonitorId, int intTemplateId, string strKeyValueCollection, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveHTMLTemplateTransaction1", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveHTMLTemplateTransaction1Resp" +
            "onse")]
        System.Threading.Tasks.Task<int> SaveHTMLTemplateTransaction1Async(int intIPID, int intMonitorId, int intTemplateId, string strKeyValueCollection, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveHTMLTemplateTransaction2", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveHTMLTemplateTransaction2Resp" +
            "onse")]
        int SaveHTMLTemplateTransaction2(int intIPID, int intMonitorId, int intTemplateId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/SaveHTMLTemplateTransaction2", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/SaveHTMLTemplateTransaction2Resp" +
            "onse")]
        System.Threading.Tasks.Task<int> SaveHTMLTemplateTransaction2Async(int intIPID, int intMonitorId, int intTemplateId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetTemplateData", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetTemplateDataResponse")]
        System.Data.DataSet GetTemplateData(int intIPID, int intMonitorId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetTemplateData", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetTemplateDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTemplateDataAsync(int intIPID, int intMonitorId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/NationalityIDSearch", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/NationalityIDSearchResponse")]
        System.Data.DataSet NationalityIDSearch(string strNationalityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/NationalityIDSearch", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/NationalityIDSearchResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> NationalityIDSearchAsync(string strNationalityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsPageWiseMedicationError" +
            "", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsPageWiseMedicati" +
            "onErrorResponse")]
        System.Data.DataSet GetSearchResultsPageWiseMedicationError(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int IPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG.HIS/SearchServiceContrac/GetSearchResultsPageWiseMedicationError" +
            "", ReplyAction="http://Wipro.NxG.HIS/CommonSearchServiceContract/GetSearchResultsPageWiseMedicati" +
            "onErrorResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsPageWiseMedicationErrorAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int IPID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CommonSearchServiceContractChannel : Reports.CommonSearchServiceClient.CommonSearchServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonSearchServiceContractClient : System.ServiceModel.ClientBase<Reports.CommonSearchServiceClient.CommonSearchServiceContract>, Reports.CommonSearchServiceClient.CommonSearchServiceContract {
        
        public CommonSearchServiceContractClient() {
        }
        
        public CommonSearchServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonSearchServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonSearchServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonSearchServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetSearchResults(string searchName, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchResults(searchName, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsAsync(string searchName, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchResultsAsync(searchName, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Data.DataSet GetSearchResultsWardId(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype) {
            return base.Channel.GetSearchResultsWardId(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, patienttype);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsWardIdAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype) {
            return base.Channel.GetSearchResultsWardIdAsync(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, patienttype);
        }
        
        public System.Data.DataSet GetSearchResultsPageWiseWardId(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype) {
            return base.Channel.GetSearchResultsPageWiseWardId(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, patienttype);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsPageWiseWardIdAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int patienttype) {
            return base.Channel.GetSearchResultsPageWiseWardIdAsync(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, patienttype);
        }
        
        public System.Data.DataSet GetSearchResultsPageWise(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchResultsPageWise(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsPageWiseAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchResultsPageWiseAsync(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Data.DataSet GetSearchResultsTagIdForPHC(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, string HospitalId) {
            return base.Channel.GetSearchResultsTagIdForPHC(StoredProcedureName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, HospitalId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsTagIdForPHCAsync(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, string HospitalId) {
            return base.Channel.GetSearchResultsTagIdForPHCAsync(StoredProcedureName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, HospitalId);
        }
        
        public System.Data.DataSet GetSearchResultsTagId(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int TagId) {
            return base.Channel.GetSearchResultsTagId(StoredProcedureName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsTagIdAsync(string StoredProcedureName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int TagId) {
            return base.Channel.GetSearchResultsTagIdAsync(StoredProcedureName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, TagId);
        }
        
        public System.Data.DataSet GetDetails(string strSQL) {
            return base.Channel.GetDetails(strSQL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDetailsAsync(string strSQL) {
            return base.Channel.GetDetailsAsync(strSQL);
        }
        
        public System.Data.DataSet FetchInvestigationandProcedures(string strFilter, int intServiceId, int hospitalId, int intWorkstationID) {
            return base.Channel.FetchInvestigationandProcedures(strFilter, intServiceId, hospitalId, intWorkstationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchInvestigationandProceduresAsync(string strFilter, int intServiceId, int hospitalId, int intWorkstationID) {
            return base.Channel.FetchInvestigationandProceduresAsync(strFilter, intServiceId, hospitalId, intWorkstationID);
        }
        
        public System.Data.DataSet GetSearchDetails(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchDetails(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchDetailsAsync(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Data.DataSet GetSearchDetails_ICD(string StoredProcedureName, string TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchDetails_ICD(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetails_ICDAsync(string StoredProcedureName, string TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType) {
            return base.Channel.GetSearchDetails_ICDAsync(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType);
        }
        
        public System.Data.DataSet GetSearchDetailsOverLoaded(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int LanguageID) {
            return base.Channel.GetSearchDetailsOverLoaded(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, LanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsOverLoadedAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int LanguageID) {
            return base.Channel.GetSearchDetailsOverLoadedAsync(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, LanguageID);
        }
        
        public System.Data.DataSet GetSearchDetailsOverLoadedEx(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetSearchDetailsOverLoadedEx(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsOverLoadedExAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetSearchDetailsOverLoadedExAsync(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Data.DataSet GetSearchDetailsOverLoadedMultiEx(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, System.Data.DataSet dsDbParams) {
            return base.Channel.GetSearchDetailsOverLoadedMultiEx(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, dsDbParams);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchDetailsOverLoadedMultiExAsync(string StoredProcedureName, int TableID, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, System.Data.DataSet dsDbParams) {
            return base.Channel.GetSearchDetailsOverLoadedMultiExAsync(StoredProcedureName, TableID, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, dsDbParams);
        }
        
        public bool SaveSingleMaster(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l, int langid) {
            return base.Channel.SaveSingleMaster(TransType, TableID, intID, strName, Code, UserID, WorkStationID, Blocked, Name2l, langid);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSingleMasterAsync(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l, int langid) {
            return base.Channel.SaveSingleMasterAsync(TransType, TableID, intID, strName, Code, UserID, WorkStationID, Blocked, Name2l, langid);
        }
        
        public System.Data.DataSet GetWorkListDetails1(string workListName, string FilterCondition, int Patientid, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListDetails1(workListName, FilterCondition, Patientid, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetails1Async(string workListName, string FilterCondition, int Patientid, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListDetails1Async(workListName, FilterCondition, Patientid, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Data.DataSet GetWorkListDetails(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListDetails(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListDetailsAsync(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Data.DataSet GetWorkListDetails2(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, System.DateTime dtFromDate, System.DateTime dtToDate) {
            return base.Channel.GetWorkListDetails2(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, dtFromDate, dtToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetails2Async(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, System.DateTime dtFromDate, System.DateTime dtToDate) {
            return base.Channel.GetWorkListDetails2Async(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, dtFromDate, dtToDate);
        }
        
        public System.Data.DataSet GetWorkListUHID(string workListName, string UHID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListUHID(workListName, UHID, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListUHIDAsync(string workListName, string UHID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListUHIDAsync(workListName, UHID, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Data.DataSet GetFoodOrderWorkList(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strStartTime, string strEndTime) {
            return base.Channel.GetFoodOrderWorkList(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strStartTime, strEndTime);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFoodOrderWorkListAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strStartTime, string strEndTime) {
            return base.Channel.GetFoodOrderWorkListAsync(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strStartTime, strEndTime);
        }
        
        public System.Data.DataSet GetWorkListDetailsstrOrderBy(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy) {
            return base.Channel.GetWorkListDetailsstrOrderBy(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strOrderBy);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsstrOrderByAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy) {
            return base.Channel.GetWorkListDetailsstrOrderByAsync(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strOrderBy);
        }
        
        public System.Data.DataSet GetWorkListHospitalDetails(string workListName, int HospitalID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListHospitalDetails(workListName, HospitalID, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListHospitalDetailsAsync(string workListName, int HospitalID, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams) {
            return base.Channel.GetWorkListHospitalDetailsAsync(workListName, HospitalID, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams);
        }
        
        public System.Data.DataSet GetWorkListDetailsByOrder(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy) {
            return base.Channel.GetWorkListDetailsByOrder(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strOrderBy);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsByOrderAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy) {
            return base.Channel.GetWorkListDetailsByOrderAsync(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strOrderBy);
        }
        
        public System.Data.DataSet GetWorkListDetailsByFilter(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy, string strFilterBy, string Specimen) {
            return base.Channel.GetWorkListDetailsByFilter(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strOrderBy, strFilterBy, Specimen);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsByFilterAsync(string workListName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, System.Data.DataSet dsDbParams, string strOrderBy, string strFilterBy, string Specimen) {
            return base.Channel.GetWorkListDetailsByFilterAsync(workListName, startRow, EndRow, FilterCondition, UserID, WorkStationID, dsDbParams, strOrderBy, strFilterBy, Specimen);
        }
        
        public System.Data.DataSet GetSmartSearchResults(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2) {
            return base.Channel.GetSmartSearchResults(SearchFor, Type, Filter, TagID, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSmartSearchResultsAsync(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2) {
            return base.Channel.GetSmartSearchResultsAsync(SearchFor, Type, Filter, TagID, Param1, Param2);
        }
        
        public System.Data.DataSet GetItemMasterSmartSearchResults(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2) {
            return base.Channel.GetItemMasterSmartSearchResults(SearchFor, Type, Filter, TagID, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetItemMasterSmartSearchResultsAsync(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2) {
            return base.Channel.GetItemMasterSmartSearchResultsAsync(SearchFor, Type, Filter, TagID, Param1, Param2);
        }
        
        public System.Data.DataSet GetSmartSearchResultsparam(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2) {
            return base.Channel.GetSmartSearchResultsparam(SearchFor, Type, Filter, TagID, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSmartSearchResultsparamAsync(string SearchFor, int Type, string Filter, int TagID, int Param1, int Param2) {
            return base.Channel.GetSmartSearchResultsparamAsync(SearchFor, Type, Filter, TagID, Param1, Param2);
        }
        
        public System.Data.DataSet GetCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetCompletionList(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetCompletionListAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Data.DataSet GetItemMasterCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetItemMasterCompletionList(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetItemMasterCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetItemMasterCompletionListAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Data.DataSet GetInvestigationCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetInvestigationCompletionList(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInvestigationCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetInvestigationCompletionListAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Data.DataSet GetCompletionListparam(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetCompletionListparam(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompletionListparamAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2) {
            return base.Channel.GetCompletionListparamAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2);
        }
        
        public System.Data.DataSet GetHospitalCompletionList(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3) {
            return base.Channel.GetHospitalCompletionList(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompletionListAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3) {
            return base.Channel.GetHospitalCompletionListAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2, Param3);
        }
        
        public System.Data.DataSet GetSmartConResults(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3) {
            return base.Channel.GetSmartConResults(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2, Param3);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSmartConResultsAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3) {
            return base.Channel.GetSmartConResultsAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2, Param3);
        }
        
        public string GetSSResult(string XmlFileName, string FilterCondition, int UserID, int WorkStationID) {
            return base.Channel.GetSSResult(XmlFileName, FilterCondition, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<string> GetSSResultAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID) {
            return base.Channel.GetSSResultAsync(XmlFileName, FilterCondition, UserID, WorkStationID);
        }
        
        public string GetHospitalSSResult(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int HospitalID) {
            return base.Channel.GetHospitalSSResult(XmlFileName, FilterCondition, UserID, WorkStationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<string> GetHospitalSSResultAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int HospitalID) {
            return base.Channel.GetHospitalSSResultAsync(XmlFileName, FilterCondition, UserID, WorkStationID, HospitalID);
        }
        
        public System.Data.DataSet GetSSResultDataset(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType) {
            return base.Channel.GetSSResultDataset(XmlFileName, FilterCondition, UserID, WorkStationID, RetType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSSResultDatasetAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType) {
            return base.Channel.GetSSResultDatasetAsync(XmlFileName, FilterCondition, UserID, WorkStationID, RetType);
        }
        
        public System.Data.DataSet GetDOCResult(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType, int HospitalId) {
            return base.Channel.GetDOCResult(XmlFileName, FilterCondition, UserID, WorkStationID, RetType, HospitalId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDOCResultAsync(string XmlFileName, string FilterCondition, int UserID, int WorkStationID, int RetType, int HospitalId) {
            return base.Channel.GetDOCResultAsync(XmlFileName, FilterCondition, UserID, WorkStationID, RetType, HospitalId);
        }
        
        public System.Data.DataSet GetSmartConsultation(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3, int Param4) {
            return base.Channel.GetSmartConsultation(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2, Param3, Param4);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSmartConsultationAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int Param2, int Param3, int Param4) {
            return base.Channel.GetSmartConsultationAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, Param2, Param3, Param4);
        }
        
        public System.Data.DataSet GetHospitalSmartConsultation(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int HospitalID, int Param3, int Param4) {
            return base.Channel.GetHospitalSmartConsultation(ProcedureSuffix, prefixText, Type, TagId, Param1, HospitalID, Param3, Param4);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalSmartConsultationAsync(string ProcedureSuffix, string prefixText, int Type, int TagId, int Param1, int HospitalID, int Param3, int Param4) {
            return base.Channel.GetHospitalSmartConsultationAsync(ProcedureSuffix, prefixText, Type, TagId, Param1, HospitalID, Param3, Param4);
        }
        
        public System.Data.DataSet FetchUserPermissions(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID) {
            return base.Channel.FetchUserPermissions(intHospitalID, intWorkstationID, intUserID, strSIDTpe, strTableID, intModuleID, intFeatureID, intFunctionID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchUserPermissionsAsync(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID) {
            return base.Channel.FetchUserPermissionsAsync(intHospitalID, intWorkstationID, intUserID, strSIDTpe, strTableID, intModuleID, intFeatureID, intFunctionID);
        }
        
        public string SaveMasterLocations(int intID, int intHospitalID, string strType, System.Data.DataSet dsItemHospitalDetails, int intUSERID, int intWorkstationID) {
            return base.Channel.SaveMasterLocations(intID, intHospitalID, strType, dsItemHospitalDetails, intUSERID, intWorkstationID);
        }
        
        public System.Threading.Tasks.Task<string> SaveMasterLocationsAsync(int intID, int intHospitalID, string strType, System.Data.DataSet dsItemHospitalDetails, int intUSERID, int intWorkstationID) {
            return base.Channel.SaveMasterLocationsAsync(intID, intHospitalID, strType, dsItemHospitalDetails, intUSERID, intWorkstationID);
        }
        
        public System.Data.DataSet FetchMasterLocations(int intTableID, string strType, int intID, int intHospID) {
            return base.Channel.FetchMasterLocations(intTableID, strType, intID, intHospID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchMasterLocationsAsync(int intTableID, string strType, int intID, int intHospID) {
            return base.Channel.FetchMasterLocationsAsync(intTableID, strType, intID, intHospID);
        }
        
        public System.Data.DataSet GetSearchResultsHospitalWise(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID) {
            return base.Channel.GetSearchResultsHospitalWise(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsHospitalWiseAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID) {
            return base.Channel.GetSearchResultsHospitalWiseAsync(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, intHospitalID);
        }
        
        public System.Data.DataSet GetSearchResultsHospitalTestWise(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID, int TestID) {
            return base.Channel.GetSearchResultsHospitalTestWise(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, intHospitalID, TestID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsHospitalTestWiseAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int intHospitalID, int TestID) {
            return base.Channel.GetSearchResultsHospitalTestWiseAsync(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, intHospitalID, TestID);
        }
        
        public System.Data.DataSet FetchDataForDashBoard(int SID, int HospitalID, int FacilityID, int WorkStationID) {
            return base.Channel.FetchDataForDashBoard(SID, HospitalID, FacilityID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDataForDashBoardAsync(int SID, int HospitalID, int FacilityID, int WorkStationID) {
            return base.Channel.FetchDataForDashBoardAsync(SID, HospitalID, FacilityID, WorkStationID);
        }
        
        public System.Data.DataSet FetchOrderLevelStatus(int TaskID) {
            return base.Channel.FetchOrderLevelStatus(TaskID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchOrderLevelStatusAsync(int TaskID) {
            return base.Channel.FetchOrderLevelStatusAsync(TaskID);
        }
        
        public System.Data.DataSet GetWorkListDetailsPerfByDates(string workListName, int startRow, int EndRow, string FilterCondition, string strStartDate, string strEndDate, int UserID, int WorkStationID) {
            return base.Channel.GetWorkListDetailsPerfByDates(workListName, startRow, EndRow, FilterCondition, strStartDate, strEndDate, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkListDetailsPerfByDatesAsync(string workListName, int startRow, int EndRow, string FilterCondition, string strStartDate, string strEndDate, int UserID, int WorkStationID) {
            return base.Channel.GetWorkListDetailsPerfByDatesAsync(workListName, startRow, EndRow, FilterCondition, strStartDate, strEndDate, UserID, WorkStationID);
        }
        
        public bool SavePatientUploadFile(int PatientID, int IPID, int HospitalID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID) {
            return base.Channel.SavePatientUploadFile(PatientID, IPID, HospitalID, Documents, Status, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<bool> SavePatientUploadFileAsync(int PatientID, int IPID, int HospitalID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID) {
            return base.Channel.SavePatientUploadFileAsync(PatientID, IPID, HospitalID, Documents, Status, UserID, WorkStationID);
        }
        
        public bool SaveCompanyUploadFile(int AgreementID, int CompanyID, int LetterID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID) {
            return base.Channel.SaveCompanyUploadFile(AgreementID, CompanyID, LetterID, Documents, Status, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCompanyUploadFileAsync(int AgreementID, int CompanyID, int LetterID, System.Data.DataTable Documents, int Status, int UserID, int WorkStationID) {
            return base.Channel.SaveCompanyUploadFileAsync(AgreementID, CompanyID, LetterID, Documents, Status, UserID, WorkStationID);
        }
        
        public System.Data.DataSet FetchPatientUploadedFile(int PatientID, int IPID, int FeatureID, int WorkStationID, int UserID) {
            return base.Channel.FetchPatientUploadedFile(PatientID, IPID, FeatureID, WorkStationID, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientUploadedFileAsync(int PatientID, int IPID, int FeatureID, int WorkStationID, int UserID) {
            return base.Channel.FetchPatientUploadedFileAsync(PatientID, IPID, FeatureID, WorkStationID, UserID);
        }
        
        public System.Data.DataSet FetchCompanyUploadedFile(int AgreementID, int CompanyID, int LetterID, int FeatureID, int WorkStationID, int UserID) {
            return base.Channel.FetchCompanyUploadedFile(AgreementID, CompanyID, LetterID, FeatureID, WorkStationID, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyUploadedFileAsync(int AgreementID, int CompanyID, int LetterID, int FeatureID, int WorkStationID, int UserID) {
            return base.Channel.FetchCompanyUploadedFileAsync(AgreementID, CompanyID, LetterID, FeatureID, WorkStationID, UserID);
        }
        
        public string SaveSMS(System.Data.DataSet dsSMS, int UserID, int WorkStationID) {
            return base.Channel.SaveSMS(dsSMS, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<string> SaveSMSAsync(System.Data.DataSet dsSMS, int UserID, int WorkStationID) {
            return base.Channel.SaveSMSAsync(dsSMS, UserID, WorkStationID);
        }
        
        public string SaveEmail(System.Data.DataSet dsEmail, int UserID, int WorkStationID) {
            return base.Channel.SaveEmail(dsEmail, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<string> SaveEmailAsync(System.Data.DataSet dsEmail, int UserID, int WorkStationID) {
            return base.Channel.SaveEmailAsync(dsEmail, UserID, WorkStationID);
        }
        
        public System.Data.DataSet GetIdentifiers() {
            return base.Channel.GetIdentifiers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersAsync() {
            return base.Channel.GetIdentifiersAsync();
        }
        
        public System.Data.DataSet GetIdentifiersById(int intIdentifierId) {
            return base.Channel.GetIdentifiersById(intIdentifierId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersByIdAsync(int intIdentifierId) {
            return base.Channel.GetIdentifiersByIdAsync(intIdentifierId);
        }
        
        public System.Data.DataSet GetIdentifiersByName(string strIdentiferName) {
            return base.Channel.GetIdentifiersByName(strIdentiferName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersByNameAsync(string strIdentiferName) {
            return base.Channel.GetIdentifiersByNameAsync(strIdentiferName);
        }
        
        public System.Data.DataSet GetIdentifiersByType(byte byteIdentifierType) {
            return base.Channel.GetIdentifiersByType(byteIdentifierType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIdentifiersByTypeAsync(byte byteIdentifierType) {
            return base.Channel.GetIdentifiersByTypeAsync(byteIdentifierType);
        }
        
        public System.Data.DataSet GetHTMLTemplateTransaction1ByIPID(int IPID) {
            return base.Channel.GetHTMLTemplateTransaction1ByIPID(IPID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction1ByIPIDAsync(int IPID) {
            return base.Channel.GetHTMLTemplateTransaction1ByIPIDAsync(IPID);
        }
        
        public System.Data.DataSet GetHTMLTemplateTransaction1ByIPIDMonitorID(int intIPID, int intMonitorId) {
            return base.Channel.GetHTMLTemplateTransaction1ByIPIDMonitorID(intIPID, intMonitorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction1ByIPIDMonitorIDAsync(int intIPID, int intMonitorId) {
            return base.Channel.GetHTMLTemplateTransaction1ByIPIDMonitorIDAsync(intIPID, intMonitorId);
        }
        
        public System.Data.DataSet GetHTMLTemplateTransaction2ByIPID(int intIPID) {
            return base.Channel.GetHTMLTemplateTransaction2ByIPID(intIPID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction2ByIPIDAsync(int intIPID) {
            return base.Channel.GetHTMLTemplateTransaction2ByIPIDAsync(intIPID);
        }
        
        public System.Data.DataSet GetHTMLTemplateTransaction2ByIPIDIdentifierId(int intIPID, int intIdentifierId) {
            return base.Channel.GetHTMLTemplateTransaction2ByIPIDIdentifierId(intIPID, intIdentifierId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction2ByIPIDIdentifierIdAsync(int intIPID, int intIdentifierId) {
            return base.Channel.GetHTMLTemplateTransaction2ByIPIDIdentifierIdAsync(intIPID, intIdentifierId);
        }
        
        public System.Data.DataSet GetHTMLTemplateTransaction2ByIPIDIdentifierIdMonitorId(int intIPID, int intIdentifierId, int intMonitorId) {
            return base.Channel.GetHTMLTemplateTransaction2ByIPIDIdentifierIdMonitorId(intIPID, intIdentifierId, intMonitorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHTMLTemplateTransaction2ByIPIDIdentifierIdMonitorIdAsync(int intIPID, int intIdentifierId, int intMonitorId) {
            return base.Channel.GetHTMLTemplateTransaction2ByIPIDIdentifierIdMonitorIdAsync(intIPID, intIdentifierId, intMonitorId);
        }
        
        public int SaveHTMLTemplateTransaction1(int intIPID, int intMonitorId, int intTemplateId, string strKeyValueCollection, int intUserId, int intWorkStationId) {
            return base.Channel.SaveHTMLTemplateTransaction1(intIPID, intMonitorId, intTemplateId, strKeyValueCollection, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveHTMLTemplateTransaction1Async(int intIPID, int intMonitorId, int intTemplateId, string strKeyValueCollection, int intUserId, int intWorkStationId) {
            return base.Channel.SaveHTMLTemplateTransaction1Async(intIPID, intMonitorId, intTemplateId, strKeyValueCollection, intUserId, intWorkStationId);
        }
        
        public int SaveHTMLTemplateTransaction2(int intIPID, int intMonitorId, int intTemplateId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId) {
            return base.Channel.SaveHTMLTemplateTransaction2(intIPID, intMonitorId, intTemplateId, objDTKeyValueCollection, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveHTMLTemplateTransaction2Async(int intIPID, int intMonitorId, int intTemplateId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId) {
            return base.Channel.SaveHTMLTemplateTransaction2Async(intIPID, intMonitorId, intTemplateId, objDTKeyValueCollection, intUserId, intWorkStationId);
        }
        
        public System.Data.DataSet GetTemplateData(int intIPID, int intMonitorId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId) {
            return base.Channel.GetTemplateData(intIPID, intMonitorId, objDTKeyValueCollection, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTemplateDataAsync(int intIPID, int intMonitorId, System.Data.DataTable objDTKeyValueCollection, int intUserId, int intWorkStationId) {
            return base.Channel.GetTemplateDataAsync(intIPID, intMonitorId, objDTKeyValueCollection, intUserId, intWorkStationId);
        }
        
        public System.Data.DataSet NationalityIDSearch(string strNationalityID) {
            return base.Channel.NationalityIDSearch(strNationalityID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> NationalityIDSearchAsync(string strNationalityID) {
            return base.Channel.NationalityIDSearchAsync(strNationalityID);
        }
        
        public System.Data.DataSet GetSearchResultsPageWiseMedicationError(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int IPID) {
            return base.Channel.GetSearchResultsPageWiseMedicationError(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, IPID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSearchResultsPageWiseMedicationErrorAsync(string searchName, int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID, int Featureid, int Functionid, string CallContext, string OrderType, int IPID) {
            return base.Channel.GetSearchResultsPageWiseMedicationErrorAsync(searchName, startRow, EndRow, FilterCondition, UserID, WorkStationID, Featureid, Functionid, CallContext, OrderType, IPID);
        }
    }
}
