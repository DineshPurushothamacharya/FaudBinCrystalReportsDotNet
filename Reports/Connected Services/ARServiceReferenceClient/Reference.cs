//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reports.ARServiceReferenceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
    [System.SerializableAttribute()]
    public partial class NextGenCustomException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorStackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorSource {
            get {
                return this.ErrorSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorSourceField, value) != true)) {
                    this.ErrorSourceField = value;
                    this.RaisePropertyChanged("ErrorSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorStackTrace {
            get {
                return this.ErrorStackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorStackTraceField, value) != true)) {
                    this.ErrorStackTraceField = value;
                    this.RaisePropertyChanged("ErrorStackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Wipro.NxG.HIS", ConfigurationName="ARServiceReferenceClient.ARServiceContract")]
    public interface ARServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTestNotTOSuppressDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchTestNotTOSuppressDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchTestNotTOSuppressDetailsNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchTestNotTOSuppressDetails(int HospitalId, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTestNotTOSuppressDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchTestNotTOSuppressDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTestNotTOSuppressDetailsAsync(int HospitalId, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTestNotToSuppressDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveTestNotToSuppressDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveTestNotToSuppressDetailsNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveTestNotToSuppressDetails(int HospitalId, int intUserId, int intworkStation, System.Data.DataTable dtTests);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTestNotToSuppressDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveTestNotToSuppressDetailsResponse")]
        System.Threading.Tasks.Task<int> SaveTestNotToSuppressDetailsAsync(int HospitalId, int intUserId, int intworkStation, System.Data.DataTable dtTests);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBillCompaniesForPeriod", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBillCompaniesForPeriodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchBillCompaniesForPeriodNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchBillCompaniesForPeriod(string strFromDate, string strToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBillCompaniesForPeriod", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBillCompaniesForPeriodResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchBillCompaniesForPeriodAsync(string strFromDate, string strToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchModifiedTests", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchModifiedTestsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchModifiedTestsNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchModifiedTests(string strFromDate, string strToDate, string strTbl);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchModifiedTests", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchModifiedTestsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchModifiedTestsAsync(string strFromDate, string strToDate, string strTbl);
        
        [System.ServiceModel.OperationContractAttribute(Action="PortDHSData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/PortDHSDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/PortDHSDataNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int PortDHSData(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="PortDHSData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/PortDHSDataResponse")]
        System.Threading.Tasks.Task<int> PortDHSDataAsync(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchDrugItemPricesWithMarkup", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchDrugItemPricesWithMarkupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchDrugItemPricesWithMarkupNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchDrugItemPricesWithMarkup(int ItemID, int BedTypeID, int TariffID, int HospitalID, int UserID, int WorkstationID, int FeatureID, int FunctionID, string callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchDrugItemPricesWithMarkup", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchDrugItemPricesWithMarkupResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDrugItemPricesWithMarkupAsync(int ItemID, int BedTypeID, int TariffID, int HospitalID, int UserID, int WorkstationID, int FeatureID, int FunctionID, string callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateParentCompIDForARBill", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateParentCompIDForARBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/UpdateParentCompIDForARBillNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int UpdateParentCompIDForARBill(int ARBillID, int intCompanyId, int intGradeId, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateParentCompIDForARBill", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateParentCompIDForARBillResponse")]
        System.Threading.Tasks.Task<int> UpdateParentCompIDForARBillAsync(int ARBillID, int intCompanyId, int intGradeId, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyInovicesCompanyWise", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyInovicesCompanyWiseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyInovicesCompanyWiseNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARCompanyInovicesCompanyWise(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyInovicesCompanyWise", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyInovicesCompanyWiseResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyInovicesCompanyWiseAsync(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARCoveringLetterCompanyWise", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARCoveringLetterCompanyWiseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARCoveringLetterCompanyWiseNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveARCoveringLetterCompanyWise(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID, int PatientType);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARCoveringLetterCompanyWise", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARCoveringLetterCompanyWiseResponse")]
        System.Threading.Tasks.Task<bool> SaveARCoveringLetterCompanyWiseAsync(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID, int PatientType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAccountDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAccountDetailsResponse")]
        void GetAccountDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAccountDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAccountDetailsResponse")]
        System.Threading.Tasks.Task GetAccountDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchBillsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchBills(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchBillsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInvoiceBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoiceBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoiceBillsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchInvoiceBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInvoiceBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoiceBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchInvoiceBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInvoicePayerBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoicePayerBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoicePayerBillsNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchInvoicePayerBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInvoicePayerBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoicePayerBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchInvoicePayerBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBillsLangID", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBillsLangIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchBillsLangIDNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchBillsLangID(int TypeID, string strfilter, int intUserID, int intWorkStationID, int LangID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBillsLangID", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBillsLangIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchBillsLangIDAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID, int LangID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInpatientDets", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInpatientDetsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchInpatientDetsNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchInpatientDets(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInpatientDets", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInpatientDetsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchInpatientDetsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchDrugITemPrices", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchDrugITemPricesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchDrugITemPricesNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchDrugITemPrices(string TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchDrugITemPrices", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchDrugITemPricesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDrugITemPricesAsync(string TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyLetters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyLettersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyLettersNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyLetters(string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyLetters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyLettersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyLettersAsync(string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyLetters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyLettersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyLettersNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARCompanyLetters(string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyLetters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyLettersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyLettersAsync(string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyLetterDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyLetterDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyLetterDetailsNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyLetterDetails(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyLetterDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyLetterDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyLetterDetailsAsync(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyLetterDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyLetterDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyLetterDetailsNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARCompanyLetterDetails(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID, string strFromDate, string strToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyLetterDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyLetterDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyLetterDetailsAsync(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID, string strFromDate, string strToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARInvoiceNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARInvoice(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARInvoiceResponse")]
        System.Threading.Tasks.Task<int> SaveARInvoiceAsync(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelARInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelARInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/CancelARInvoiceNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int CancelARInvoice(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelARInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelARInvoiceResponse")]
        System.Threading.Tasks.Task<int> CancelARInvoiceAsync(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCoveringLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCoveringLetterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveCoveringLetterNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveCoveringLetter(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCoveringLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCoveringLetterResponse")]
        System.Threading.Tasks.Task<bool> SaveCoveringLetterAsync(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARCoveringLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARCoveringLetterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARCoveringLetterNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveARCoveringLetter(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARCoveringLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARCoveringLetterResponse")]
        System.Threading.Tasks.Task<bool> SaveARCoveringLetterAsync(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyCreditNoteDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyCreditNoteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyCreditNoteDetailsNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyCreditNoteDetails(int intCreditNoteID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyCreditNoteDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyCreditNoteDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyCreditNoteDetailsAsync(int intCreditNoteID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyInovices", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyInovicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyInovicesNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyInovices(int TableId, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyInovices", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyInovicesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyInovicesAsync(int TableId, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyInovices", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyInovicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyInovicesNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARCompanyInovices(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyInovices", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyInovicesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyInovicesAsync(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchOrganizationDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchOrganizationDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchOrganizationDetailsNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchOrganizationDetails(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchOrganizationDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchOrganizationDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchOrganizationDetailsAsync(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchAROrganizationDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchAROrganizationDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchAROrganizationDetailsNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchAROrganizationDetails(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchAROrganizationDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchAROrganizationDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAROrganizationDetailsAsync(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyTemplate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveModifyTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveModifyTemplateNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveModifyTemplate(System.Data.DataSet RtfDS, string strCutomerID, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyTemplate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveModifyTemplateResponse")]
        System.Threading.Tasks.Task<bool> SaveModifyTemplateAsync(System.Data.DataSet RtfDS, string strCutomerID, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyInvoiceDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyInvoiceDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyInvoiceDetailsNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyInvoiceDetails(int intInvoiceID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyInvoiceDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyInvoiceDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyInvoiceDetailsAsync(int intInvoiceID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARSettlements", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARSettlementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARSettlementsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARSettlements(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARSettlements", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARSettlementsResponse")]
        System.Threading.Tasks.Task<int> SaveARSettlementsAsync(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoveringLetterFormat", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCoveringLetterFormatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCoveringLetterFormatNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCoveringLetterFormat(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoveringLetterFormat", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCoveringLetterFormatResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCoveringLetterFormatAsync(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetARCoveringLetterFormat", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetARCoveringLetterFormatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetARCoveringLetterFormatNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetARCoveringLetterFormat(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetARCoveringLetterFormat", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetARCoveringLetterFormatResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetARCoveringLetterFormatAsync(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdvanceCompanyDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAdvanceCompanyDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetAdvanceCompanyDetailsNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAdvanceCompanyDetails(int intType, string intFilter, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdvanceCompanyDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAdvanceCompanyDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdvanceCompanyDetailsAsync(int intType, string intFilter, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdvanceCompanyDetailsintLanguageId", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAdvanceCompanyDetailsintLanguageIdRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetAdvanceCompanyDetailsintLanguageIdNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAdvanceCompanyDetailsintLanguageId(int intType, string intFilter, int intUserID, int intWorkStationId, int intError, int intLanguageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdvanceCompanyDetailsintLanguageId", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAdvanceCompanyDetailsintLanguageIdRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdvanceCompanyDetailsintLanguageIdAsync(int intType, string intFilter, int intUserID, int intWorkStationId, int intError, int intLanguageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchMasters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchMastersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchMastersNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchMasters(string strTableIds, string[] strTableNames, int UserId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchMasters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchMastersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchMastersAsync(string strTableIds, string[] strTableNames, int UserId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAmountReceipt", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveAmountReceiptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveAmountReceiptNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveAmountReceipt(System.Data.DataSet DsAmountReceipt, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAmountReceipt", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveAmountReceiptResponse")]
        System.Threading.Tasks.Task<string> SaveAmountReceiptAsync(System.Data.DataSet DsAmountReceipt, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveInvoiceAndBillAdj", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveInvoiceAndBillAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveInvoiceAndBillAdjNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveInvoiceAndBillAdj(int LetterID, System.Data.DataSet DsFinal, int intUserID, int intWorkStationID, int intError, int intFromID, int intEntryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveInvoiceAndBillAdj", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveInvoiceAndBillAdjResponse")]
        System.Threading.Tasks.Task<string> SaveInvoiceAndBillAdjAsync(int LetterID, System.Data.DataSet DsFinal, int intUserID, int intWorkStationID, int intError, int intFromID, int intEntryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCreditNote", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCreditNoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveCreditNoteNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveCreditNote(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCreditNote", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCreditNoteResponse")]
        System.Threading.Tasks.Task<int> SaveCreditNoteAsync(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCreditNoteAgainstInvBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCreditNoteAgainstInvBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveCreditNoteAgainstInvBillsNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveCreditNoteAgainstInvBills(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCreditNoteAgainstInvBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCreditNoteAgainstInvBillsResponse")]
        System.Threading.Tasks.Task<int> SaveCreditNoteAgainstInvBillsAsync(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveFreezeBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveFreezeBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveFreezeBillsNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveFreezeBills(int intCompanyID, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveFreezeBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveFreezeBillsResponse")]
        System.Threading.Tasks.Task<int> SaveFreezeBillsAsync(int intCompanyID, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdminMaster", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAdminMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetAdminMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAdminMaster(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdminMaster", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAdminMasterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyPayerPatientList", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyPayerPatientListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/ModifyPayerPatientListNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string ModifyPayerPatientList(System.Data.DataSet dsPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyPayerPatientList", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyPayerPatientListResponse")]
        System.Threading.Tasks.Task<string> ModifyPayerPatientListAsync(System.Data.DataSet dsPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePayerPatientList", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SavePayerPatientListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SavePayerPatientListNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SavePayerPatientList(System.Data.DataSet dsPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePayerPatientList", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SavePayerPatientListResponse")]
        System.Threading.Tasks.Task<string> SavePayerPatientListAsync(System.Data.DataSet dsPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPayerPatientList", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPayerPatientListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchPayerPatientListNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPayerPatientList(string strPatId, bool BlnDeleted, int intUserId, int intWorkStnId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPayerPatientList", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPayerPatientListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPayerPatientListAsync(string strPatId, bool BlnDeleted, int intUserId, int intWorkStnId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="CheckEmpId", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CheckEmpIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/CheckEmpIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int CheckEmpId(string EmpId, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="CheckEmpId", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CheckEmpIdResponse")]
        System.Threading.Tasks.Task<int> CheckEmpIdAsync(string EmpId, int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveApprovalRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveApprovalRequestNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveApprovalRequest(System.Data.DataSet dsSendToSave, string strAppDetail, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int intUcafID, int intLocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveApprovalRequestResponse")]
        System.Threading.Tasks.Task<int> SaveApprovalRequestAsync(System.Data.DataSet dsSendToSave, string strAppDetail, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int intUcafID, int intLocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyEmpCompanyMapping", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveModifyEmpCompanyMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveModifyEmpCompanyMappingNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveModifyEmpCompanyMapping(int intEmpID, int CmpID, string strCompanyEmployees, int HospID, int intUserId, int intworkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyEmpCompanyMapping", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveModifyEmpCompanyMappingResponse")]
        System.Threading.Tasks.Task<bool> SaveModifyEmpCompanyMappingAsync(int intEmpID, int CmpID, string strCompanyEmployees, int HospID, int intUserId, int intworkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveSmsNotification", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveSmsNotificationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveSmsNotificationNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveSmsNotification(string StrUHID, int NotificationType, int SmsStatus, int intUserID, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveSmsNotification", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveSmsNotificationResponse")]
        System.Threading.Tasks.Task<int> SaveSmsNotificationAsync(string StrUHID, int NotificationType, int SmsStatus, int intUserID, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalRequestNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchApprovalRequest(int EntryID, string tableid, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchApprovalRequestAsync(int EntryID, string tableid, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyMappedEmployees", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyMappedEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyMappedEmployeesNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyMappedEmployees(int CompanyID, int EmployeeID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyMappedEmployees", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyMappedEmployeesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyMappedEmployeesAsync(int CompanyID, int EmployeeID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyApprovalRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/ModifyApprovalRequestNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int ModifyApprovalRequest(System.Data.DataSet dsSendToSave, string strAppDetail, int EntryID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyApprovalRequestResponse")]
        System.Threading.Tasks.Task<int> ModifyApprovalRequestAsync(System.Data.DataSet dsSendToSave, string strAppDetail, int EntryID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemprice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetServiceItempriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetServiceItempriceNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        decimal GetServiceItemprice(int ServiceID, int ServiceItemID, int TariffID, int HsopitalID, int BedTypeID, int OrderTypeID, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemprice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetServiceItempriceResponse")]
        System.Threading.Tasks.Task<decimal> GetServiceItempriceAsync(int ServiceID, int ServiceItemID, int TariffID, int HsopitalID, int BedTypeID, int OrderTypeID, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetInvestigationOrder", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetInvestigationOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetInvestigationOrderNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetInvestigationOrder(string FilterCondition, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetInvestigationOrder", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetInvestigationOrderResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInvestigationOrderAsync(string FilterCondition, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientBillsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPatientBills(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientBillsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyStatement(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyStatementAsync(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyStatementLangId", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementLangIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementLangIdNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyStatementLangId(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int LangId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyStatementLangId", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementLangIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyStatementLangIdAsync(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int LangId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyStatementfromInvDate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementfromInvDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementfromInvDateNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyStatementfromInvDate(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyStatementfromInvDate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyStatementfromInvDateResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyStatementfromInvDateAsync(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillWiseCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetBillWiseCompanyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetBillWiseCompanyStatementNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetBillWiseCompanyStatement(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillWiseCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetBillWiseCompanyStatementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBillWiseCompanyStatementAsync(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillWiseCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetBillWiseCompoundCompanyStatementRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetBillWiseCompoundCompanyStatementNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetBillWiseCompoundCompanyStatement(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillWiseCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetBillWiseCompoundCompanyStatementRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBillWiseCompoundCompanyStatementAsync(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInvoiceSummary", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoiceSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoiceSummaryNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchInvoiceSummary(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchInvoiceSummary", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchInvoiceSummaryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchInvoiceSummaryAsync(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyConfiguration", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCompanyConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveCompanyConfigurationNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveCompanyConfiguration(
                    int ConfigID, 
                    int Consultation, 
                    int Dental, 
                    int Lab, 
                    int Medicine, 
                    int Xray, 
                    int Admission, 
                    int RoomRent, 
                    int Package, 
                    int Others, 
                    int EmployeeNo, 
                    int EmployeeName, 
                    int Relation, 
                    int CompanyID, 
                    string CompanyName, 
                    int USERID, 
                    int WORKSTATIONID, 
                    int FeatureId, 
                    int FunctionId, 
                    string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyConfiguration", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCompanyConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveCompanyConfigurationAsync(
                    int ConfigID, 
                    int Consultation, 
                    int Dental, 
                    int Lab, 
                    int Medicine, 
                    int Xray, 
                    int Admission, 
                    int RoomRent, 
                    int Package, 
                    int Others, 
                    int EmployeeNo, 
                    int EmployeeName, 
                    int Relation, 
                    int CompanyID, 
                    string CompanyName, 
                    int USERID, 
                    int WORKSTATIONID, 
                    int FeatureId, 
                    int FunctionId, 
                    string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetStatementConfiguration", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetStatementConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetStatementConfigurationNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetStatementConfiguration(int CompanyID, int Tbl, int intUserId, int intWorkStationId, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetStatementConfiguration", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetStatementConfigurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStatementConfigurationAsync(int CompanyID, int Tbl, int intUserId, int intWorkStationId, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="execSPReturnDataset", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/execSPReturnDatasetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/execSPReturnDatasetNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet execSPReturnDataset(string spName, System.Data.DataSet dsParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="execSPReturnDataset", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/execSPReturnDatasetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> execSPReturnDatasetAsync(string spName, System.Data.DataSet dsParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompoundCompanyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCompoundCompanyStatementNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompoundCompanyStatement(System.Data.DataSet dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompoundCompanyStatementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompoundCompanyStatementAsync(System.Data.DataSet dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompoundCompanyStatement1", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompoundCompanyStatement1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCompoundCompanyStatement1NextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompoundCompanyStatement1(int dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompoundCompanyStatement1", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompoundCompanyStatement1Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompoundCompanyStatement1Async(int dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetItemWiseCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetItemWiseCompanyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetItemWiseCompanyStatementNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetItemWiseCompanyStatement(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetItemWiseCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetItemWiseCompanyStatementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetItemWiseCompanyStatementAsync(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetNASItemWiseCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetNASItemWiseCompanyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetNASItemWiseCompanyStatementNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetNASItemWiseCompanyStatement(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetNASItemWiseCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetNASItemWiseCompanyStatementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNASItemWiseCompanyStatementAsync(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetItemWiseCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetItemWiseCompoundCompanyStatementRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetItemWiseCompoundCompanyStatementNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetItemWiseCompoundCompanyStatement(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetItemWiseCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetItemWiseCompoundCompanyStatementRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetItemWiseCompoundCompanyStatementAsync(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetNASItemWiseCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetNASItemWiseCompoundCompanyStatementResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetNASItemWiseCompoundCompanyStatementNext" +
            "GenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetNASItemWiseCompoundCompanyStatement(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetNASItemWiseCompoundCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetNASItemWiseCompoundCompanyStatementResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNASItemWiseCompoundCompanyStatementAsync(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompoundFreezeBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCompoundFreezeBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveCompoundFreezeBillsNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveCompoundFreezeBills(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompoundFreezeBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCompoundFreezeBillsResponse")]
        System.Threading.Tasks.Task<int> SaveCompoundFreezeBillsAsync(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateDiscountsItemLevel", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateDiscountsItemLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/UpdateDiscountsItemLevelNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int UpdateDiscountsItemLevel(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateDiscountsItemLevel", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateDiscountsItemLevelResponse")]
        System.Threading.Tasks.Task<int> UpdateDiscountsItemLevelAsync(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateCollectableItemLevel", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateCollectableItemLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/UpdateCollectableItemLevelNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int UpdateCollectableItemLevel(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateCollectableItemLevel", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateCollectableItemLevelResponse")]
        System.Threading.Tasks.Task<int> UpdateCollectableItemLevelAsync(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateMULCollectableItemLevel", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateMULCollectableItemLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/UpdateMULCollectableItemLevelNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int UpdateMULCollectableItemLevel(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateMULCollectableItemLevel", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateMULCollectableItemLevelResponse")]
        System.Threading.Tasks.Task<int> UpdateMULCollectableItemLevelAsync(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBulkInvoiceDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBulkInvoiceDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchBulkInvoiceDetailsNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchBulkInvoiceDetails(int InsuranceCompanyID, int CompanyID, string InvoiceFromDate, string InvoiceToDate, int InvoiceFromNO, int InvoiceToNO, string BillFromDate, string BillTODate, int DoctorID, int PatientType, int UHID, string TBL, int LanguageID, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBulkInvoiceDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBulkInvoiceDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchBulkInvoiceDetailsAsync(int InsuranceCompanyID, int CompanyID, string InvoiceFromDate, string InvoiceToDate, int InvoiceFromNO, int InvoiceToNO, string BillFromDate, string BillTODate, int DoctorID, int PatientType, int UHID, string TBL, int LanguageID, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveReceipt", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveReceiptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveReceiptNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveReceipt(System.Data.DataSet dsReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveReceipt", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveReceiptResponse")]
        System.Threading.Tasks.Task<string> SaveReceiptAsync(System.Data.DataSet dsReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetStatusResponse")]
        System.Data.DataSet GetStatus(int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStatusAsync(int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientpatientBillswithUCAFandTestresults", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientpatientBillswithUCAFandTestres" +
            "ultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientpatientBillswithUCAFandTestres" +
            "ultsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPatientpatientBillswithUCAFandTestresults(int intPatientID, int intCompanyID, string strBillFromDate, string strBillTODate, string strPType, bool IsInsurance, string strTBL, int intUserId, int intWorkStationId, int fromIndex, int ToIndex, int ExcludeGenerated);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientpatientBillswithUCAFandTestresults", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientpatientBillswithUCAFandTestres" +
            "ultsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientpatientBillswithUCAFandTestresultsAsync(int intPatientID, int intCompanyID, string strBillFromDate, string strBillTODate, string strPType, bool IsInsurance, string strTBL, int intUserId, int intWorkStationId, int fromIndex, int ToIndex, int ExcludeGenerated);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPrescribedItemsAR", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetPrescribedItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetPrescribedItemsNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPrescribedItems(int intPatientID, int intPatientType, string strIPID, string strMonitorID, int intPrescriptionId, string strTbl, int intuserId, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPrescribedItemsAR", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetPrescribedItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPrescribedItemsAsync(int intPatientID, int intPatientType, string strIPID, string strMonitorID, int intPrescriptionId, string strTbl, int intuserId, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchUOMConfiguration", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchUOMConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchUOMConfigurationNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataTable FetchUOMConfiguration(int intItemID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchUOMConfiguration", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchUOMConfigurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchUOMConfigurationAsync(int intItemID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchUOMConfigurationConsumables", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchUOMConfigurationConsumablesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchUOMConfigurationConsumablesNextGenCus" +
            "tomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataTable FetchUOMConfigurationConsumables(int intItemID, int WorkStationID, string TBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchUOMConfigurationConsumables", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchUOMConfigurationConsumablesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchUOMConfigurationConsumablesAsync(int intItemID, int WorkStationID, string TBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAuditDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAuditDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetAuditDetailsNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAuditDetails(string SpName, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAuditDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAuditDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAuditDetailsAsync(string SpName, string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAuditChangedDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAuditChangedDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetAuditChangedDetailsNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAuditChangedDetails(string SpName, int PatientID, int CurrentAuditId, int PreviousAuditId, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAuditChangedDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetAuditChangedDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAuditChangedDetailsAsync(string SpName, int PatientID, int CurrentAuditId, int PreviousAuditId, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="PortWaseelData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/PortWaseelDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/PortWaseelDataNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int PortWaseelData(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="PortWaseelData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/PortWaseelDataResponse")]
        System.Threading.Tasks.Task<int> PortWaseelDataAsync(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetOneTotalAuditDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetOneTotalAuditDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetOneTotalAuditDetailsNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetOneTotalAuditDetails(string SpName, int AuditID, string PatientID, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetOneTotalAuditDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetOneTotalAuditDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOneTotalAuditDetailsAsync(string SpName, int AuditID, string PatientID, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUcafDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetUcafDetails(string strregcode, int intIPID, int intPatientID, int intPatientType, int intBillID, int intDoctorID, int intEpisodeID, int intBedId, int intSpecialiseID, string strTableId, int intUserID, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUcafDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUcafDetailsAsync(string strregcode, int intIPID, int intPatientID, int intPatientType, int intBillID, int intDoctorID, int intEpisodeID, int intBedId, int intSpecialiseID, string strTableId, int intUserID, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyAckDate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyAckDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/ModifyAckDateNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool ModifyAckDate(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyAckDate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyAckDateResponse")]
        System.Threading.Tasks.Task<bool> ModifyAckDateAsync(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyARAckDate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyARAckDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/ModifyARAckDateNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool ModifyARAckDate(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="ModifyARAckDate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ModifyARAckDateResponse")]
        System.Threading.Tasks.Task<bool> ModifyARAckDateAsync(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveEstimation", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveEstimationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveEstimationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveEstimation(int CostEstimationID, int PatientID, int TariffID, string PatientName, int PatientType, int GradeID, int Age, int AgeUomID, int GenderID, int PayerId, int BedTypeID, string StrXML, int IntUserID, int IntWorkstationID, int IntHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveEstimation", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveEstimationResponse")]
        System.Threading.Tasks.Task<string> SaveEstimationAsync(int CostEstimationID, int PatientID, int TariffID, string PatientName, int PatientType, int GradeID, int Age, int AgeUomID, int GenderID, int PayerId, int BedTypeID, string StrXML, int IntUserID, int IntWorkstationID, int IntHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetEstimationDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetEstimationDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetEstimationDetailsNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetEstimationDetails(string EstimationNo, int TableID, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetEstimationDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetEstimationDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEstimationDetailsAsync(string EstimationNo, int TableID, int UserID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUcafData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDataNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataTable GetUcafData(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUcafData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUcafDataAsync(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUcafDataForPatientData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDataForPatientDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDataForPatientDataNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataTable GetUcafDataForPatientData(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID, int CompanyID, bool IsInsurance, int intPatientID, string strPType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetUcafDataForPatientData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetUcafDataForPatientDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUcafDataForPatientDataAsync(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID, int CompanyID, bool IsInsurance, int intPatientID, string strPType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetApprovalRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetApprovalRequestNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetApprovalRequest(string FromApprovalDate, string ToApprovalDate, string FilterCondition, int UserID, int WorkStationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetApprovalRequest", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetApprovalRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetApprovalRequestAsync(string FromApprovalDate, string ToApprovalDate, string FilterCondition, int UserID, int WorkStationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTaskStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetTaskStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetTaskStatusNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetTaskStatus(int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTaskStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetTaskStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTaskStatusAsync(int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyStatementTemplate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCompanyStatementTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveCompanyStatementTemplateNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveCompanyStatementTemplate(System.Data.DataSet DsCompanyTemplate, int intUserID, int intWorkStationID, int intError, int intFeatureID, int intFunctionID, string CallContext, short IsDefault, int intRoutID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyStatementTemplate", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveCompanyStatementTemplateResponse")]
        System.Threading.Tasks.Task<int> SaveCompanyStatementTemplateAsync(System.Data.DataSet DsCompanyTemplate, int intUserID, int intWorkStationID, int intError, int intFeatureID, int intFunctionID, string CallContext, short IsDefault, int intRoutID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyTemplateDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyTemplateDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyTemplateDetailsNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyTemplateDetails(int intUserID, int intWorkStationId, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyTemplateDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetCompanyTemplateDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyTemplateDetailsAsync(int intUserID, int intWorkStationId, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanywiseStatistics", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanywiseStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanywiseStatisticsNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanywiseStatistics(System.Data.DataTable dtStatistics, int intUserID, int intWorkStationID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanywiseStatistics", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanywiseStatisticsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanywiseStatisticsAsync(System.Data.DataTable dtStatistics, int intUserID, int intWorkStationID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompoundBillDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompoundBillDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompoundBillDetailsNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompoundBillDetails(int CompanyID, string FromDate, string ToDate, bool Isinsurance, string Tbl, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompoundBillDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompoundBillDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompoundBillDetailsAsync(int CompanyID, string FromDate, string ToDate, bool Isinsurance, string Tbl, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyCoverageLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyCoverageLetterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyCoverageLetterNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyCoverageLetter(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyCoverageLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchCompanyCoverageLetterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyCoverageLetterAsync(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyCoverageLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyCoverageLetterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyCoverageLetterNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARCompanyCoverageLetter(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARCompanyCoverageLetter", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARCompanyCoverageLetterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyCoverageLetterAsync(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillNo", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetBillNoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetBillNoNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetBillNo(int intPatientID, string strTbl, int intuserId, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBillNo", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetBillNoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBillNoAsync(int intPatientID, string strTbl, int intuserId, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFetchARBillDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetFetchARBillDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetFetchARBillDetailsNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetFetchARBillDetails(int intBillId, string strTbl, int intUserId, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFetchARBillDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetFetchARBillDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFetchARBillDetailsAsync(int intBillId, string strTbl, int intUserId, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBillCorrection", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillCorrectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillCorrectionNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARBillCorrection(int BillID, decimal TotalBillAmt, decimal TotalDicountAmt, decimal CAmt, decimal Pamt, decimal CDiscount, decimal PDiscount, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, decimal PVAT, decimal CVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBillCorrection", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillCorrectionResponse")]
        System.Threading.Tasks.Task<int> SaveARBillCorrectionAsync(int BillID, decimal TotalBillAmt, decimal TotalDicountAmt, decimal CAmt, decimal Pamt, decimal CDiscount, decimal PDiscount, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, decimal PVAT, decimal CVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAROPBillCorrection", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveAROPBillCorrectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveAROPBillCorrectionNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveAROPBillCorrection(
                    int BillID, 
                    double TotalBillAmt, 
                    double TotalDicountAmt, 
                    double CAmt, 
                    double Pamt, 
                    double CDiscount, 
                    double PDiscount, 
                    System.Data.DataSet objDSSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intCompanyId, 
                    int intGradeId, 
                    int intDoctorId, 
                    System.DateTime billDate, 
                    decimal PVAT, 
                    decimal CVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAROPBillCorrection", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveAROPBillCorrectionResponse")]
        System.Threading.Tasks.Task<int> SaveAROPBillCorrectionAsync(
                    int BillID, 
                    double TotalBillAmt, 
                    double TotalDicountAmt, 
                    double CAmt, 
                    double Pamt, 
                    double CDiscount, 
                    double PDiscount, 
                    System.Data.DataSet objDSSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intCompanyId, 
                    int intGradeId, 
                    int intDoctorId, 
                    System.DateTime billDate, 
                    decimal PVAT, 
                    decimal CVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBillSplitting", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillSplittingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillSplittingNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARBillSplitting(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int BillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBillSplitting", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillSplittingResponse")]
        System.Threading.Tasks.Task<int> SaveARBillSplittingAsync(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int BillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFreezedBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetFreezedBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetFreezedBillsNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetFreezedBills(int companyId, string FromBillDate, string ToBillDate, string PatientType, bool isInsCompany, int intUserID, int intWorkStationID, int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFreezedBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetFreezedBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFreezedBillsAsync(int companyId, string FromBillDate, string ToBillDate, string PatientType, bool isInsCompany, int intUserID, int intWorkStationID, int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARFreezeBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARFreezeBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARFreezeBillsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARFreezeBills(System.Data.DataTable objDtSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARFreezeBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARFreezeBillsResponse")]
        System.Threading.Tasks.Task<int> SaveARFreezeBillsAsync(System.Data.DataTable objDtSave, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="ARSplitBill", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ARSplitBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/ARSplitBillNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int ARSplitBill(
                    int PatientId, 
                    int IpID, 
                    int ParentBillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int PatientType, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal TotalDiscountAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objBillDetails, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int UBillID, 
                    decimal UTotalBillAmt, 
                    decimal UTotalDiscountAmt, 
                    decimal UCAmt, 
                    decimal UPamt, 
                    decimal UCDiscount, 
                    decimal UPDiscount, 
                    System.Data.DataTable updateobjDtSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    decimal UCVAT, 
                    decimal UPVAT, 
                    decimal CVAT, 
                    decimal PVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="ARSplitBill", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/ARSplitBillResponse")]
        System.Threading.Tasks.Task<int> ARSplitBillAsync(
                    int PatientId, 
                    int IpID, 
                    int ParentBillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int PatientType, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal TotalDiscountAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objBillDetails, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int UBillID, 
                    decimal UTotalBillAmt, 
                    decimal UTotalDiscountAmt, 
                    decimal UCAmt, 
                    decimal UPamt, 
                    decimal UCDiscount, 
                    decimal UPDiscount, 
                    System.Data.DataTable updateobjDtSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    decimal UCVAT, 
                    decimal UPVAT, 
                    decimal CVAT, 
                    decimal PVAT);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARBills(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int ParentBillId, 
                    int BillId, 
                    string BillNo, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intOrderDepID, 
                    int intParentInsIDNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBillsResponse")]
        System.Threading.Tasks.Task<int> SaveARBillsAsync(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int ParentBillId, 
                    int BillId, 
                    string BillNo, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intOrderDepID, 
                    int intParentInsIDNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateARBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/UpdateARBillsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int UpdateARBills(
                    int BillId, 
                    decimal TotalBillAmt, 
                    decimal TotalDicountAmt, 
                    decimal CAmt, 
                    decimal PAmt, 
                    decimal CDiscount, 
                    decimal PDiscount, 
                    System.Data.DataTable objNewBill, 
                    int intUserID, 
                    int intWorkStationID, 
                    int PatientType, 
                    int hospitalId, 
                    string strPackages, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int intParentInsIDNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateARBillsResponse")]
        System.Threading.Tasks.Task<int> UpdateARBillsAsync(
                    int BillId, 
                    decimal TotalBillAmt, 
                    decimal TotalDicountAmt, 
                    decimal CAmt, 
                    decimal PAmt, 
                    decimal CDiscount, 
                    decimal PDiscount, 
                    System.Data.DataTable objNewBill, 
                    int intUserID, 
                    int intWorkStationID, 
                    int PatientType, 
                    int hospitalId, 
                    string strPackages, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int intParentInsIDNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientARBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientARBillsNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPatientARBills(int intPatientId, string strTbl, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchPatientARBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientARBillsAsync(int intPatientId, string strTbl, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARInvoiceBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoiceBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoiceBillsNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARInvoiceBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARInvoiceBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoiceBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARInvoiceBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARBillsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARBills(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARBillsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAccountRecievableInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveAccountRecievableInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveAccountRecievableInvoiceNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveAccountRecievableInvoice(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAccountRecievableInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveAccountRecievableInvoiceResponse")]
        System.Threading.Tasks.Task<int> SaveAccountRecievableInvoiceAsync(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchStatisticReport", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchStatisticReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchStatisticReportNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchStatisticReport(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchStatisticReport", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchStatisticReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchStatisticReportAsync(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchUsers", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchUsersNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchUsers(string Type, string strFilter, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchUsers", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchUsersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchUsersAsync(string Type, string strFilter, int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchDoctors", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchDoctorsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchDoctorsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchDoctors(int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchDoctors", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchDoctorsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDoctorsAsync(int intUserId, int intWorkstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelAccountRecievableInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelAccountRecievableInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/CancelAccountRecievableInvoiceNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int CancelAccountRecievableInvoice(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelAccountRecievableInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelAccountRecievableInvoiceResponse")]
        System.Threading.Tasks.Task<int> CancelAccountRecievableInvoiceAsync(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelARCoveringLetters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelARCoveringLettersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/CancelARCoveringLettersNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int CancelARCoveringLetters(string strARLetterIDs, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelARCoveringLetters", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelARCoveringLettersResponse")]
        System.Threading.Tasks.Task<int> CancelARCoveringLettersAsync(string strARLetterIDs, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARInvoicePayerBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoicePayerBillsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoicePayerBillsNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARInvoicePayerBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARInvoicePayerBills", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoicePayerBillsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARInvoicePayerBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARInvoiceSummary", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoiceSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoiceSummaryNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchARInvoiceSummary(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchARInvoiceSummary", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchARInvoiceSummaryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchARInvoiceSummaryAsync(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBulkARInvoiceDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBulkARInvoiceDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchBulkARInvoiceDetailsNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchBulkARInvoiceDetails(
                    int InsuranceCompanyID, 
                    int CompanyID, 
                    string InvoiceFromDate, 
                    string InvoiceToDate, 
                    int InvoiceFromNO, 
                    int InvoiceToNO, 
                    string BillFromDate, 
                    string BillTODate, 
                    int DoctorID, 
                    int PatientType, 
                    int UHID, 
                    string TBL, 
                    int LanguageID, 
                    int UserId, 
                    int WorkStationId, 
                    bool IsInsurance, 
                    int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchBulkARInvoiceDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchBulkARInvoiceDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchBulkARInvoiceDetailsAsync(
                    int InsuranceCompanyID, 
                    int CompanyID, 
                    string InvoiceFromDate, 
                    string InvoiceToDate, 
                    int InvoiceFromNO, 
                    int InvoiceToNO, 
                    string BillFromDate, 
                    string BillTODate, 
                    int DoctorID, 
                    int PatientType, 
                    int UHID, 
                    string TBL, 
                    int LanguageID, 
                    int UserId, 
                    int WorkStationId, 
                    bool IsInsurance, 
                    int hospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTempInvoicesForPreview", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchTempInvoicesForPreviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchTempInvoicesForPreviewNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchTempInvoicesForPreview(string BillIDs, int intUserId, int intWorkStationID, int intError, bool blnisfollwup);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTempInvoicesForPreview", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchTempInvoicesForPreviewResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTempInvoicesForPreviewAsync(string BillIDs, int intUserId, int intWorkStationID, int intError, bool blnisfollwup);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetARCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetARCompanyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetARCompanyStatementNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetARCompanyStatement(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID, int IsInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetARCompanyStatement", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetARCompanyStatementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetARCompanyStatementAsync(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID, int IsInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFetchARTestItems", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetFetchARTestItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/GetFetchARTestItemsNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetFetchARTestItems(int CompanyId, string fromDate, string toDate, int Status, int intUserID, int intWorkStationID, int IsInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetFetchARTestItems", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/GetFetchARTestItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFetchARTestItemsAsync(int CompanyId, string fromDate, string toDate, int Status, int intUserID, int intWorkStationID, int IsInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="CreateOrUpdateAppRequestStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CreateOrUpdateAppRequestStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/CreateOrUpdateAppRequestStatusNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int CreateOrUpdateAppRequestStatus(int entityId, int intUserID, int intWorkStationID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="CreateOrUpdateAppRequestStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CreateOrUpdateAppRequestStatusResponse")]
        System.Threading.Tasks.Task<int> CreateOrUpdateAppRequestStatusAsync(int entityId, int intUserID, int intWorkStationID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchApprovalCount", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalCountNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchApprovalCount(int PatientID, int DoctorID, string fromdate, string todate, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchApprovalCount", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalCountResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchApprovalCountAsync(int PatientID, int DoctorID, string fromdate, string todate, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchApprovalRaisedCheck", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalRaisedCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalRaisedCheckNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchApprovalRaisedCheck(int AdmissionId, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchApprovalRaisedCheck", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchApprovalRaisedCheckResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchApprovalRaisedCheckAsync(int AdmissionId, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelARBill", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelARBillResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/CancelARBillNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet CancelARBill(int intARBillID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelARBill", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/CancelARBillResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> CancelARBillAsync(int intARBillID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBulkInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBulkInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/SaveARBulkInvoiceNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveARBulkInvoice(int PatientType, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveARBulkInvoice", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/SaveARBulkInvoiceResponse")]
        System.Threading.Tasks.Task<int> SaveARBulkInvoiceAsync(int PatientType, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateInvoiceVerifyStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateInvoiceVerifyStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/UpdateInvoiceVerifyStatusNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int UpdateInvoiceVerifyStatus(System.Data.DataTable objDtVerify, int intVerifiedBy, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateInvoiceVerifyStatus", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/UpdateInvoiceVerifyStatusResponse")]
        System.Threading.Tasks.Task<int> UpdateInvoiceVerifyStatusAsync(System.Data.DataTable objDtVerify, int intVerifiedBy, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchClinicalAuditData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchClinicalAuditDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchClinicalAuditDataNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchClinicalAuditData(int PayerId, int PatientId, string FromDate, string ToDate, int intUserID, int intWorkStationID, int inspayerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchClinicalAuditData", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchClinicalAuditDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchClinicalAuditDataAsync(int PayerId, int PatientId, string FromDate, string ToDate, int intUserID, int intWorkStationID, int inspayerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchQueryDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchQueryDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchQueryDetailsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchQueryDetails(int AdmissionId, int DoctorId, string FromDate, string ToDate, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchQueryDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchQueryDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchQueryDetailsAsync(int AdmissionId, int DoctorId, string FromDate, string ToDate, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="saveQueryDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/saveQueryDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/saveQueryDetailsNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int saveQueryDetails(System.Data.DataTable dtSaveQuery, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="saveQueryDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/saveQueryDetailsResponse")]
        System.Threading.Tasks.Task<int> saveQueryDetailsAsync(System.Data.DataTable dtSaveQuery, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="saveVerifyDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/saveVerifyDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/saveVerifyDetailsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int saveVerifyDetails(string SaveXML, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="saveVerifyDetails", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/saveVerifyDetailsResponse")]
        System.Threading.Tasks.Task<int> saveVerifyDetailsAsync(string SaveXML, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchWSASR", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchWSASRResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ARServiceReferenceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ARServiceContract/FetchWSASRNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchWSASR(int intVisitID, int intApprovalID, int intUserID, int intWorkStationID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchWSASR", ReplyAction="http://Wipro.NxG.HIS/ARServiceContract/FetchWSASRResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchWSASRAsync(int intVisitID, int intApprovalID, int intUserID, int intWorkStationID, int intHospitalID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ARServiceContractChannel : Reports.ARServiceReferenceClient.ARServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ARServiceContractClient : System.ServiceModel.ClientBase<Reports.ARServiceReferenceClient.ARServiceContract>, Reports.ARServiceReferenceClient.ARServiceContract {
        
        public ARServiceContractClient() {
        }
        
        public ARServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ARServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ARServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ARServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet FetchTestNotTOSuppressDetails(int HospitalId, int intUserID, int intWorkStationID) {
            return base.Channel.FetchTestNotTOSuppressDetails(HospitalId, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTestNotTOSuppressDetailsAsync(int HospitalId, int intUserID, int intWorkStationID) {
            return base.Channel.FetchTestNotTOSuppressDetailsAsync(HospitalId, intUserID, intWorkStationID);
        }
        
        public int SaveTestNotToSuppressDetails(int HospitalId, int intUserId, int intworkStation, System.Data.DataTable dtTests) {
            return base.Channel.SaveTestNotToSuppressDetails(HospitalId, intUserId, intworkStation, dtTests);
        }
        
        public System.Threading.Tasks.Task<int> SaveTestNotToSuppressDetailsAsync(int HospitalId, int intUserId, int intworkStation, System.Data.DataTable dtTests) {
            return base.Channel.SaveTestNotToSuppressDetailsAsync(HospitalId, intUserId, intworkStation, dtTests);
        }
        
        public System.Data.DataSet FetchBillCompaniesForPeriod(string strFromDate, string strToDate) {
            return base.Channel.FetchBillCompaniesForPeriod(strFromDate, strToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchBillCompaniesForPeriodAsync(string strFromDate, string strToDate) {
            return base.Channel.FetchBillCompaniesForPeriodAsync(strFromDate, strToDate);
        }
        
        public System.Data.DataSet FetchModifiedTests(string strFromDate, string strToDate, string strTbl) {
            return base.Channel.FetchModifiedTests(strFromDate, strToDate, strTbl);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchModifiedTestsAsync(string strFromDate, string strToDate, string strTbl) {
            return base.Channel.FetchModifiedTestsAsync(strFromDate, strToDate, strTbl);
        }
        
        public int PortDHSData(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.PortDHSData(Code, FromDate, ToDate, IsInsurance, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Threading.Tasks.Task<int> PortDHSDataAsync(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.PortDHSDataAsync(Code, FromDate, ToDate, IsInsurance, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Data.DataSet FetchDrugItemPricesWithMarkup(int ItemID, int BedTypeID, int TariffID, int HospitalID, int UserID, int WorkstationID, int FeatureID, int FunctionID, string callcontext) {
            return base.Channel.FetchDrugItemPricesWithMarkup(ItemID, BedTypeID, TariffID, HospitalID, UserID, WorkstationID, FeatureID, FunctionID, callcontext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDrugItemPricesWithMarkupAsync(int ItemID, int BedTypeID, int TariffID, int HospitalID, int UserID, int WorkstationID, int FeatureID, int FunctionID, string callcontext) {
            return base.Channel.FetchDrugItemPricesWithMarkupAsync(ItemID, BedTypeID, TariffID, HospitalID, UserID, WorkstationID, FeatureID, FunctionID, callcontext);
        }
        
        public int UpdateParentCompIDForARBill(int ARBillID, int intCompanyId, int intGradeId, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateParentCompIDForARBill(ARBillID, intCompanyId, intGradeId, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateParentCompIDForARBillAsync(int ARBillID, int intCompanyId, int intGradeId, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateParentCompIDForARBillAsync(ARBillID, intCompanyId, intGradeId, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchARCompanyInovicesCompanyWise(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID) {
            return base.Channel.FetchARCompanyInovicesCompanyWise(intCompanyID, isInsurence, strFromDate, strEndDate, strPatientType, intUserID, intWorkStationID, hospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyInovicesCompanyWiseAsync(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID) {
            return base.Channel.FetchARCompanyInovicesCompanyWiseAsync(intCompanyID, isInsurence, strFromDate, strEndDate, strPatientType, intUserID, intWorkStationID, hospitalID);
        }
        
        public bool SaveARCoveringLetterCompanyWise(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID, int PatientType) {
            return base.Channel.SaveARCoveringLetterCompanyWise(objDSSave, intPayerID, intUserID, intWorkStationID, strDeliverDate, Fromdate, Todate, strAcknowledgeDate, intHospitalID, PatientType);
        }
        
        public System.Threading.Tasks.Task<bool> SaveARCoveringLetterCompanyWiseAsync(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID, int PatientType) {
            return base.Channel.SaveARCoveringLetterCompanyWiseAsync(objDSSave, intPayerID, intUserID, intWorkStationID, strDeliverDate, Fromdate, Todate, strAcknowledgeDate, intHospitalID, PatientType);
        }
        
        public void GetAccountDetails() {
            base.Channel.GetAccountDetails();
        }
        
        public System.Threading.Tasks.Task GetAccountDetailsAsync() {
            return base.Channel.GetAccountDetailsAsync();
        }
        
        public System.Data.DataSet FetchBills(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchBills(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchBillsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchBillsAsync(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchInvoiceBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchInvoiceBills(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchInvoiceBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchInvoiceBillsAsync(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Data.DataSet FetchInvoicePayerBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchInvoicePayerBills(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchInvoicePayerBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchInvoicePayerBillsAsync(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Data.DataSet FetchBillsLangID(int TypeID, string strfilter, int intUserID, int intWorkStationID, int LangID) {
            return base.Channel.FetchBillsLangID(TypeID, strfilter, intUserID, intWorkStationID, LangID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchBillsLangIDAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID, int LangID) {
            return base.Channel.FetchBillsLangIDAsync(TypeID, strfilter, intUserID, intWorkStationID, LangID);
        }
        
        public System.Data.DataSet FetchInpatientDets(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchInpatientDets(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchInpatientDetsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchInpatientDetsAsync(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchDrugITemPrices(string TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchDrugITemPrices(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDrugITemPricesAsync(string TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchDrugITemPricesAsync(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchCompanyLetters(string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyLetters(strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyLettersAsync(string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyLettersAsync(strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchARCompanyLetters(string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchARCompanyLetters(strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyLettersAsync(string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchARCompanyLettersAsync(strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchCompanyLetterDetails(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyLetterDetails(intCompanyID, intLetterID, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyLetterDetailsAsync(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyLetterDetailsAsync(intCompanyID, intLetterID, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchARCompanyLetterDetails(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID, string strFromDate, string strToDate) {
            return base.Channel.FetchARCompanyLetterDetails(intCompanyID, intLetterID, intUserID, intWorkStationID, strFromDate, strToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyLetterDetailsAsync(int intCompanyID, int intLetterID, int intUserID, int intWorkStationID, string strFromDate, string strToDate) {
            return base.Channel.FetchARCompanyLetterDetailsAsync(intCompanyID, intLetterID, intUserID, intWorkStationID, strFromDate, strToDate);
        }
        
        public int SaveARInvoice(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType) {
            return base.Channel.SaveARInvoice(intCustomerID, PatientType, intInvoiceID, strInvoiceNo, objDSSave, intUserID, intWorkStationID, InvType);
        }
        
        public System.Threading.Tasks.Task<int> SaveARInvoiceAsync(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType) {
            return base.Channel.SaveARInvoiceAsync(intCustomerID, PatientType, intInvoiceID, strInvoiceNo, objDSSave, intUserID, intWorkStationID, InvType);
        }
        
        public int CancelARInvoice(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID) {
            return base.Channel.CancelARInvoice(InvoicedID, strInvoiceNo, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> CancelARInvoiceAsync(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID) {
            return base.Channel.CancelARInvoiceAsync(InvoicedID, strInvoiceNo, intUserID, intWorkStationID);
        }
        
        public bool SaveCoveringLetter(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID) {
            return base.Channel.SaveCoveringLetter(objDSSave, intPayerID, intUserID, intWorkStationID, strDeliverDate, Fromdate, Todate, strAcknowledgeDate, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCoveringLetterAsync(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID) {
            return base.Channel.SaveCoveringLetterAsync(objDSSave, intPayerID, intUserID, intWorkStationID, strDeliverDate, Fromdate, Todate, strAcknowledgeDate, intHospitalID);
        }
        
        public bool SaveARCoveringLetter(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID) {
            return base.Channel.SaveARCoveringLetter(objDSSave, intPayerID, intUserID, intWorkStationID, strDeliverDate, Fromdate, Todate, strAcknowledgeDate, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveARCoveringLetterAsync(System.Data.DataSet objDSSave, int intPayerID, int intUserID, int intWorkStationID, string strDeliverDate, string Fromdate, string Todate, string strAcknowledgeDate, int intHospitalID) {
            return base.Channel.SaveARCoveringLetterAsync(objDSSave, intPayerID, intUserID, intWorkStationID, strDeliverDate, Fromdate, Todate, strAcknowledgeDate, intHospitalID);
        }
        
        public System.Data.DataSet FetchCompanyCreditNoteDetails(int intCreditNoteID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyCreditNoteDetails(intCreditNoteID, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyCreditNoteDetailsAsync(int intCreditNoteID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyCreditNoteDetailsAsync(intCreditNoteID, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchCompanyInovices(int TableId, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyInovices(TableId, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyInovicesAsync(int TableId, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyInovicesAsync(TableId, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchARCompanyInovices(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID) {
            return base.Channel.FetchARCompanyInovices(intCompanyID, isInsurence, strFromDate, strEndDate, strPatientType, intUserID, intWorkStationID, hospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyInovicesAsync(int intCompanyID, int isInsurence, string strFromDate, string strEndDate, string strPatientType, int intUserID, int intWorkStationID, int hospitalID) {
            return base.Channel.FetchARCompanyInovicesAsync(intCompanyID, isInsurence, strFromDate, strEndDate, strPatientType, intUserID, intWorkStationID, hospitalID);
        }
        
        public System.Data.DataSet FetchOrganizationDetails(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchOrganizationDetails(intTableId, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchOrganizationDetailsAsync(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchOrganizationDetailsAsync(intTableId, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet FetchAROrganizationDetails(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchAROrganizationDetails(intTableId, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAROrganizationDetailsAsync(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchAROrganizationDetailsAsync(intTableId, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveModifyTemplate(System.Data.DataSet RtfDS, string strCutomerID, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveModifyTemplate(RtfDS, strCutomerID, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyTemplateAsync(System.Data.DataSet RtfDS, string strCutomerID, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveModifyTemplateAsync(RtfDS, strCutomerID, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Data.DataSet FetchCompanyInvoiceDetails(int intInvoiceID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyInvoiceDetails(intInvoiceID, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyInvoiceDetailsAsync(int intInvoiceID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompanyInvoiceDetailsAsync(intInvoiceID, intUserID, intWorkStationID);
        }
        
        public int SaveARSettlements(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveARSettlements(objDSSave, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> SaveARSettlementsAsync(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveARSettlementsAsync(objDSSave, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetCoveringLetterFormat(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.GetCoveringLetterFormat(intPayerID, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCoveringLetterFormatAsync(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.GetCoveringLetterFormatAsync(intPayerID, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Data.DataSet GetARCoveringLetterFormat(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.GetARCoveringLetterFormat(intPayerID, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetARCoveringLetterFormatAsync(int intPayerID, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.GetARCoveringLetterFormatAsync(intPayerID, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Data.DataSet GetAdvanceCompanyDetails(int intType, string intFilter, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAdvanceCompanyDetails(intType, intFilter, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdvanceCompanyDetailsAsync(int intType, string intFilter, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAdvanceCompanyDetailsAsync(intType, intFilter, intUserID, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAdvanceCompanyDetailsintLanguageId(int intType, string intFilter, int intUserID, int intWorkStationId, int intError, int intLanguageId) {
            return base.Channel.GetAdvanceCompanyDetailsintLanguageId(intType, intFilter, intUserID, intWorkStationId, intError, intLanguageId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdvanceCompanyDetailsintLanguageIdAsync(int intType, string intFilter, int intUserID, int intWorkStationId, int intError, int intLanguageId) {
            return base.Channel.GetAdvanceCompanyDetailsintLanguageIdAsync(intType, intFilter, intUserID, intWorkStationId, intError, intLanguageId);
        }
        
        public System.Data.DataSet FetchMasters(string strTableIds, string[] strTableNames, int UserId, int intError) {
            return base.Channel.FetchMasters(strTableIds, strTableNames, UserId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchMastersAsync(string strTableIds, string[] strTableNames, int UserId, int intError) {
            return base.Channel.FetchMastersAsync(strTableIds, strTableNames, UserId, intError);
        }
        
        public string SaveAmountReceipt(System.Data.DataSet DsAmountReceipt, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveAmountReceipt(DsAmountReceipt, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<string> SaveAmountReceiptAsync(System.Data.DataSet DsAmountReceipt, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveAmountReceiptAsync(DsAmountReceipt, intUserID, intWorkStationID, intError);
        }
        
        public string SaveInvoiceAndBillAdj(int LetterID, System.Data.DataSet DsFinal, int intUserID, int intWorkStationID, int intError, int intFromID, int intEntryID) {
            return base.Channel.SaveInvoiceAndBillAdj(LetterID, DsFinal, intUserID, intWorkStationID, intError, intFromID, intEntryID);
        }
        
        public System.Threading.Tasks.Task<string> SaveInvoiceAndBillAdjAsync(int LetterID, System.Data.DataSet DsFinal, int intUserID, int intWorkStationID, int intError, int intFromID, int intEntryID) {
            return base.Channel.SaveInvoiceAndBillAdjAsync(LetterID, DsFinal, intUserID, intWorkStationID, intError, intFromID, intEntryID);
        }
        
        public int SaveCreditNote(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveCreditNote(DsCreditNote, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<int> SaveCreditNoteAsync(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveCreditNoteAsync(DsCreditNote, intUserID, intWorkStationID, intError);
        }
        
        public int SaveCreditNoteAgainstInvBills(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveCreditNoteAgainstInvBills(DsCreditNote, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<int> SaveCreditNoteAgainstInvBillsAsync(System.Data.DataSet DsCreditNote, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveCreditNoteAgainstInvBillsAsync(DsCreditNote, intUserID, intWorkStationID, intError);
        }
        
        public int SaveFreezeBills(int intCompanyID, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveFreezeBills(intCompanyID, objDSSave, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> SaveFreezeBillsAsync(int intCompanyID, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveFreezeBillsAsync(intCompanyID, objDSSave, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetAdminMaster(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAdminMaster(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAdminMasterAsync(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public string ModifyPayerPatientList(System.Data.DataSet dsPatient) {
            return base.Channel.ModifyPayerPatientList(dsPatient);
        }
        
        public System.Threading.Tasks.Task<string> ModifyPayerPatientListAsync(System.Data.DataSet dsPatient) {
            return base.Channel.ModifyPayerPatientListAsync(dsPatient);
        }
        
        public string SavePayerPatientList(System.Data.DataSet dsPatient) {
            return base.Channel.SavePayerPatientList(dsPatient);
        }
        
        public System.Threading.Tasks.Task<string> SavePayerPatientListAsync(System.Data.DataSet dsPatient) {
            return base.Channel.SavePayerPatientListAsync(dsPatient);
        }
        
        public System.Data.DataSet FetchPayerPatientList(string strPatId, bool BlnDeleted, int intUserId, int intWorkStnId, int intError) {
            return base.Channel.FetchPayerPatientList(strPatId, BlnDeleted, intUserId, intWorkStnId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPayerPatientListAsync(string strPatId, bool BlnDeleted, int intUserId, int intWorkStnId, int intError) {
            return base.Channel.FetchPayerPatientListAsync(strPatId, BlnDeleted, intUserId, intWorkStnId, intError);
        }
        
        public int CheckEmpId(string EmpId, int CompanyId) {
            return base.Channel.CheckEmpId(EmpId, CompanyId);
        }
        
        public System.Threading.Tasks.Task<int> CheckEmpIdAsync(string EmpId, int CompanyId) {
            return base.Channel.CheckEmpIdAsync(EmpId, CompanyId);
        }
        
        public int SaveApprovalRequest(System.Data.DataSet dsSendToSave, string strAppDetail, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int intUcafID, int intLocationId) {
            return base.Channel.SaveApprovalRequest(dsSendToSave, strAppDetail, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext, intUcafID, intLocationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveApprovalRequestAsync(System.Data.DataSet dsSendToSave, string strAppDetail, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int intUcafID, int intLocationId) {
            return base.Channel.SaveApprovalRequestAsync(dsSendToSave, strAppDetail, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext, intUcafID, intLocationId);
        }
        
        public bool SaveModifyEmpCompanyMapping(int intEmpID, int CmpID, string strCompanyEmployees, int HospID, int intUserId, int intworkStation, int intError) {
            return base.Channel.SaveModifyEmpCompanyMapping(intEmpID, CmpID, strCompanyEmployees, HospID, intUserId, intworkStation, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyEmpCompanyMappingAsync(int intEmpID, int CmpID, string strCompanyEmployees, int HospID, int intUserId, int intworkStation, int intError) {
            return base.Channel.SaveModifyEmpCompanyMappingAsync(intEmpID, CmpID, strCompanyEmployees, HospID, intUserId, intworkStation, intError);
        }
        
        public int SaveSmsNotification(string StrUHID, int NotificationType, int SmsStatus, int intUserID, int intWorkstationID) {
            return base.Channel.SaveSmsNotification(StrUHID, NotificationType, SmsStatus, intUserID, intWorkstationID);
        }
        
        public System.Threading.Tasks.Task<int> SaveSmsNotificationAsync(string StrUHID, int NotificationType, int SmsStatus, int intUserID, int intWorkstationID) {
            return base.Channel.SaveSmsNotificationAsync(StrUHID, NotificationType, SmsStatus, intUserID, intWorkstationID);
        }
        
        public System.Data.DataSet FetchApprovalRequest(int EntryID, string tableid, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.FetchApprovalRequest(EntryID, tableid, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchApprovalRequestAsync(int EntryID, string tableid, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.FetchApprovalRequestAsync(EntryID, tableid, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet FetchCompanyMappedEmployees(int CompanyID, int EmployeeID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.FetchCompanyMappedEmployees(CompanyID, EmployeeID, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyMappedEmployeesAsync(int CompanyID, int EmployeeID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.FetchCompanyMappedEmployeesAsync(CompanyID, EmployeeID, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public int ModifyApprovalRequest(System.Data.DataSet dsSendToSave, string strAppDetail, int EntryID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.ModifyApprovalRequest(dsSendToSave, strAppDetail, EntryID, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<int> ModifyApprovalRequestAsync(System.Data.DataSet dsSendToSave, string strAppDetail, int EntryID, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.ModifyApprovalRequestAsync(dsSendToSave, strAppDetail, EntryID, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public decimal GetServiceItemprice(int ServiceID, int ServiceItemID, int TariffID, int HsopitalID, int BedTypeID, int OrderTypeID, int UserID, int WorkStationID) {
            return base.Channel.GetServiceItemprice(ServiceID, ServiceItemID, TariffID, HsopitalID, BedTypeID, OrderTypeID, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<decimal> GetServiceItempriceAsync(int ServiceID, int ServiceItemID, int TariffID, int HsopitalID, int BedTypeID, int OrderTypeID, int UserID, int WorkStationID) {
            return base.Channel.GetServiceItempriceAsync(ServiceID, ServiceItemID, TariffID, HsopitalID, BedTypeID, OrderTypeID, UserID, WorkStationID);
        }
        
        public System.Data.DataSet GetInvestigationOrder(string FilterCondition, int UserID, int WorkStationID) {
            return base.Channel.GetInvestigationOrder(FilterCondition, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInvestigationOrderAsync(string FilterCondition, int UserID, int WorkStationID) {
            return base.Channel.GetInvestigationOrderAsync(FilterCondition, UserID, WorkStationID);
        }
        
        public System.Data.DataSet FetchPatientBills(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchPatientBills(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientBillsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchPatientBillsAsync(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetCompanyStatement(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int intHospitalID) {
            return base.Channel.GetCompanyStatement(CompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyStatementAsync(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int intHospitalID) {
            return base.Channel.GetCompanyStatementAsync(CompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID, intHospitalID);
        }
        
        public System.Data.DataSet GetCompanyStatementLangId(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int LangId, int intHospitalID) {
            return base.Channel.GetCompanyStatementLangId(CompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID, LangId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyStatementLangIdAsync(int CompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int LangId, int intHospitalID) {
            return base.Channel.GetCompanyStatementLangIdAsync(CompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID, LangId, intHospitalID);
        }
        
        public System.Data.DataSet GetCompanyStatementfromInvDate(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID) {
            return base.Channel.GetCompanyStatementfromInvDate(CompanyId, invFrom, invTo, Tbl, PatientType, Status, intUserID, intWorkStationID, IsInvoiceDate, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyStatementfromInvDateAsync(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID) {
            return base.Channel.GetCompanyStatementfromInvDateAsync(CompanyId, invFrom, invTo, Tbl, PatientType, Status, intUserID, intWorkStationID, IsInvoiceDate, intHospitalID);
        }
        
        public System.Data.DataSet GetBillWiseCompanyStatement(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetBillWiseCompanyStatement(CompanyCode, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBillWiseCompanyStatementAsync(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetBillWiseCompanyStatementAsync(CompanyCode, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetBillWiseCompoundCompanyStatement(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetBillWiseCompoundCompanyStatement(IsInsurance, IsTPA, CompanyID, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBillWiseCompoundCompanyStatementAsync(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetBillWiseCompoundCompanyStatementAsync(IsInsurance, IsTPA, CompanyID, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchInvoiceSummary(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.FetchInvoiceSummary(intInvoiceID, strTableids, LanguageId, intUserId, intWorkStationId, intError, FeatureId, FunctionId, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchInvoiceSummaryAsync(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.FetchInvoiceSummaryAsync(intInvoiceID, strTableids, LanguageId, intUserId, intWorkStationId, intError, FeatureId, FunctionId, CallContext);
        }
        
        public int SaveCompanyConfiguration(
                    int ConfigID, 
                    int Consultation, 
                    int Dental, 
                    int Lab, 
                    int Medicine, 
                    int Xray, 
                    int Admission, 
                    int RoomRent, 
                    int Package, 
                    int Others, 
                    int EmployeeNo, 
                    int EmployeeName, 
                    int Relation, 
                    int CompanyID, 
                    string CompanyName, 
                    int USERID, 
                    int WORKSTATIONID, 
                    int FeatureId, 
                    int FunctionId, 
                    string CallContext) {
            return base.Channel.SaveCompanyConfiguration(ConfigID, Consultation, Dental, Lab, Medicine, Xray, Admission, RoomRent, Package, Others, EmployeeNo, EmployeeName, Relation, CompanyID, CompanyName, USERID, WORKSTATIONID, FeatureId, FunctionId, CallContext);
        }
        
        public System.Threading.Tasks.Task<int> SaveCompanyConfigurationAsync(
                    int ConfigID, 
                    int Consultation, 
                    int Dental, 
                    int Lab, 
                    int Medicine, 
                    int Xray, 
                    int Admission, 
                    int RoomRent, 
                    int Package, 
                    int Others, 
                    int EmployeeNo, 
                    int EmployeeName, 
                    int Relation, 
                    int CompanyID, 
                    string CompanyName, 
                    int USERID, 
                    int WORKSTATIONID, 
                    int FeatureId, 
                    int FunctionId, 
                    string CallContext) {
            return base.Channel.SaveCompanyConfigurationAsync(ConfigID, Consultation, Dental, Lab, Medicine, Xray, Admission, RoomRent, Package, Others, EmployeeNo, EmployeeName, Relation, CompanyID, CompanyName, USERID, WORKSTATIONID, FeatureId, FunctionId, CallContext);
        }
        
        public System.Data.DataSet GetStatementConfiguration(int CompanyID, int Tbl, int intUserId, int intWorkStationId, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.GetStatementConfiguration(CompanyID, Tbl, intUserId, intWorkStationId, FeatureId, FunctionId, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStatementConfigurationAsync(int CompanyID, int Tbl, int intUserId, int intWorkStationId, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.GetStatementConfigurationAsync(CompanyID, Tbl, intUserId, intWorkStationId, FeatureId, FunctionId, CallContext);
        }
        
        public System.Data.DataSet execSPReturnDataset(string spName, System.Data.DataSet dsParameters) {
            return base.Channel.execSPReturnDataset(spName, dsParameters);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> execSPReturnDatasetAsync(string spName, System.Data.DataSet dsParameters) {
            return base.Channel.execSPReturnDatasetAsync(spName, dsParameters);
        }
        
        public System.Data.DataSet GetCompoundCompanyStatement(System.Data.DataSet dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID) {
            return base.Channel.GetCompoundCompanyStatement(dsCompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompoundCompanyStatementAsync(System.Data.DataSet dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, int Status, int intUserID, int intWorkStationID) {
            return base.Channel.GetCompoundCompanyStatementAsync(dsCompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetCompoundCompanyStatement1(int dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID) {
            return base.Channel.GetCompoundCompanyStatement1(dsCompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompoundCompanyStatement1Async(int dsCompanyId, string FromBillDate, string ToBIllDAte, string DIschargeDate, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID) {
            return base.Channel.GetCompoundCompanyStatement1Async(dsCompanyId, FromBillDate, ToBIllDAte, DIschargeDate, Tbl, PatientType, Status, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetItemWiseCompanyStatement(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId) {
            return base.Channel.GetItemWiseCompanyStatement(CompanyCode, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID, LangId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetItemWiseCompanyStatementAsync(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId) {
            return base.Channel.GetItemWiseCompanyStatementAsync(CompanyCode, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID, LangId);
        }
        
        public System.Data.DataSet GetNASItemWiseCompanyStatement(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId) {
            return base.Channel.GetNASItemWiseCompanyStatement(CompanyCode, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID, LangId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNASItemWiseCompanyStatementAsync(string CompanyCode, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID, int LangId) {
            return base.Channel.GetNASItemWiseCompanyStatementAsync(CompanyCode, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID, LangId);
        }
        
        public System.Data.DataSet GetItemWiseCompoundCompanyStatement(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetItemWiseCompoundCompanyStatement(IsInsurance, IsTPA, CompanyID, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetItemWiseCompoundCompanyStatementAsync(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetItemWiseCompoundCompanyStatementAsync(IsInsurance, IsTPA, CompanyID, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet GetNASItemWiseCompoundCompanyStatement(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetNASItemWiseCompoundCompanyStatement(IsInsurance, IsTPA, CompanyID, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNASItemWiseCompoundCompanyStatementAsync(int IsInsurance, int IsTPA, int CompanyID, string FromBillDate, string ToBIllDAte, string Type, int intUserID, int intWorkStationID) {
            return base.Channel.GetNASItemWiseCompoundCompanyStatementAsync(IsInsurance, IsTPA, CompanyID, FromBillDate, ToBIllDAte, Type, intUserID, intWorkStationID);
        }
        
        public int SaveCompoundFreezeBills(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveCompoundFreezeBills(objDSSave, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> SaveCompoundFreezeBillsAsync(System.Data.DataSet objDSSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveCompoundFreezeBillsAsync(objDSSave, intUserID, intWorkStationID);
        }
        
        public int UpdateDiscountsItemLevel(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateDiscountsItemLevel(FromBillDate, ToBIllDAte, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDiscountsItemLevelAsync(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateDiscountsItemLevelAsync(FromBillDate, ToBIllDAte, intUserID, intWorkStationID);
        }
        
        public int UpdateCollectableItemLevel(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateCollectableItemLevel(FromBillDate, ToBIllDAte, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCollectableItemLevelAsync(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateCollectableItemLevelAsync(FromBillDate, ToBIllDAte, intUserID, intWorkStationID);
        }
        
        public int UpdateMULCollectableItemLevel(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateMULCollectableItemLevel(FromBillDate, ToBIllDAte, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMULCollectableItemLevelAsync(string FromBillDate, string ToBIllDAte, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateMULCollectableItemLevelAsync(FromBillDate, ToBIllDAte, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchBulkInvoiceDetails(int InsuranceCompanyID, int CompanyID, string InvoiceFromDate, string InvoiceToDate, int InvoiceFromNO, int InvoiceToNO, string BillFromDate, string BillTODate, int DoctorID, int PatientType, int UHID, string TBL, int LanguageID, int UserId, int WorkStationId) {
            return base.Channel.FetchBulkInvoiceDetails(InsuranceCompanyID, CompanyID, InvoiceFromDate, InvoiceToDate, InvoiceFromNO, InvoiceToNO, BillFromDate, BillTODate, DoctorID, PatientType, UHID, TBL, LanguageID, UserId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchBulkInvoiceDetailsAsync(int InsuranceCompanyID, int CompanyID, string InvoiceFromDate, string InvoiceToDate, int InvoiceFromNO, int InvoiceToNO, string BillFromDate, string BillTODate, int DoctorID, int PatientType, int UHID, string TBL, int LanguageID, int UserId, int WorkStationId) {
            return base.Channel.FetchBulkInvoiceDetailsAsync(InsuranceCompanyID, CompanyID, InvoiceFromDate, InvoiceToDate, InvoiceFromNO, InvoiceToNO, BillFromDate, BillTODate, DoctorID, PatientType, UHID, TBL, LanguageID, UserId, WorkStationId);
        }
        
        public string SaveReceipt(System.Data.DataSet dsReceipt) {
            return base.Channel.SaveReceipt(dsReceipt);
        }
        
        public System.Threading.Tasks.Task<string> SaveReceiptAsync(System.Data.DataSet dsReceipt) {
            return base.Channel.SaveReceiptAsync(dsReceipt);
        }
        
        public System.Data.DataSet GetStatus(int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID) {
            return base.Channel.GetStatus(startRow, EndRow, FilterCondition, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStatusAsync(int startRow, int EndRow, string FilterCondition, int UserID, int WorkStationID) {
            return base.Channel.GetStatusAsync(startRow, EndRow, FilterCondition, UserID, WorkStationID);
        }
        
        public System.Data.DataSet FetchPatientpatientBillswithUCAFandTestresults(int intPatientID, int intCompanyID, string strBillFromDate, string strBillTODate, string strPType, bool IsInsurance, string strTBL, int intUserId, int intWorkStationId, int fromIndex, int ToIndex, int ExcludeGenerated) {
            return base.Channel.FetchPatientpatientBillswithUCAFandTestresults(intPatientID, intCompanyID, strBillFromDate, strBillTODate, strPType, IsInsurance, strTBL, intUserId, intWorkStationId, fromIndex, ToIndex, ExcludeGenerated);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientpatientBillswithUCAFandTestresultsAsync(int intPatientID, int intCompanyID, string strBillFromDate, string strBillTODate, string strPType, bool IsInsurance, string strTBL, int intUserId, int intWorkStationId, int fromIndex, int ToIndex, int ExcludeGenerated) {
            return base.Channel.FetchPatientpatientBillswithUCAFandTestresultsAsync(intPatientID, intCompanyID, strBillFromDate, strBillTODate, strPType, IsInsurance, strTBL, intUserId, intWorkStationId, fromIndex, ToIndex, ExcludeGenerated);
        }
        
        public System.Data.DataSet GetPrescribedItems(int intPatientID, int intPatientType, string strIPID, string strMonitorID, int intPrescriptionId, string strTbl, int intuserId, int intWorkStationID) {
            return base.Channel.GetPrescribedItems(intPatientID, intPatientType, strIPID, strMonitorID, intPrescriptionId, strTbl, intuserId, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPrescribedItemsAsync(int intPatientID, int intPatientType, string strIPID, string strMonitorID, int intPrescriptionId, string strTbl, int intuserId, int intWorkStationID) {
            return base.Channel.GetPrescribedItemsAsync(intPatientID, intPatientType, strIPID, strMonitorID, intPrescriptionId, strTbl, intuserId, intWorkStationID);
        }
        
        public System.Data.DataTable FetchUOMConfiguration(int intItemID, int WorkStationID) {
            return base.Channel.FetchUOMConfiguration(intItemID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchUOMConfigurationAsync(int intItemID, int WorkStationID) {
            return base.Channel.FetchUOMConfigurationAsync(intItemID, WorkStationID);
        }
        
        public System.Data.DataTable FetchUOMConfigurationConsumables(int intItemID, int WorkStationID, string TBL) {
            return base.Channel.FetchUOMConfigurationConsumables(intItemID, WorkStationID, TBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchUOMConfigurationConsumablesAsync(int intItemID, int WorkStationID, string TBL) {
            return base.Channel.FetchUOMConfigurationConsumablesAsync(intItemID, WorkStationID, TBL);
        }
        
        public System.Data.DataSet GetAuditDetails(string SpName, string parameters) {
            return base.Channel.GetAuditDetails(SpName, parameters);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAuditDetailsAsync(string SpName, string parameters) {
            return base.Channel.GetAuditDetailsAsync(SpName, parameters);
        }
        
        public System.Data.DataSet GetAuditChangedDetails(string SpName, int PatientID, int CurrentAuditId, int PreviousAuditId, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.GetAuditChangedDetails(SpName, PatientID, CurrentAuditId, PreviousAuditId, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAuditChangedDetailsAsync(string SpName, int PatientID, int CurrentAuditId, int PreviousAuditId, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.GetAuditChangedDetailsAsync(SpName, PatientID, CurrentAuditId, PreviousAuditId, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public int PortWaseelData(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.PortWaseelData(Code, FromDate, ToDate, IsInsurance, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Threading.Tasks.Task<int> PortWaseelDataAsync(string Code, string FromDate, string ToDate, int IsInsurance, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.PortWaseelDataAsync(Code, FromDate, ToDate, IsInsurance, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Data.DataSet GetOneTotalAuditDetails(string SpName, int AuditID, string PatientID, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.GetOneTotalAuditDetails(SpName, AuditID, PatientID, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOneTotalAuditDetailsAsync(string SpName, int AuditID, string PatientID, int intUserId, int intWorkStationId, int intFeatureID, int intFunctionID, string CallContext) {
            return base.Channel.GetOneTotalAuditDetailsAsync(SpName, AuditID, PatientID, intUserId, intWorkStationId, intFeatureID, intFunctionID, CallContext);
        }
        
        public System.Data.DataSet GetUcafDetails(string strregcode, int intIPID, int intPatientID, int intPatientType, int intBillID, int intDoctorID, int intEpisodeID, int intBedId, int intSpecialiseID, string strTableId, int intUserID, int intWorkStationId) {
            return base.Channel.GetUcafDetails(strregcode, intIPID, intPatientID, intPatientType, intBillID, intDoctorID, intEpisodeID, intBedId, intSpecialiseID, strTableId, intUserID, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUcafDetailsAsync(string strregcode, int intIPID, int intPatientID, int intPatientType, int intBillID, int intDoctorID, int intEpisodeID, int intBedId, int intSpecialiseID, string strTableId, int intUserID, int intWorkStationId) {
            return base.Channel.GetUcafDetailsAsync(strregcode, intIPID, intPatientID, intPatientType, intBillID, intDoctorID, intEpisodeID, intBedId, intSpecialiseID, strTableId, intUserID, intWorkStationId);
        }
        
        public bool ModifyAckDate(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId) {
            return base.Channel.ModifyAckDate(intLetterID, StrModAckDate, strPODNo, strPODDt, strPODreason, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyAckDateAsync(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId) {
            return base.Channel.ModifyAckDateAsync(intLetterID, StrModAckDate, strPODNo, strPODDt, strPODreason, intUserId, intWorkStationId);
        }
        
        public bool ModifyARAckDate(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId) {
            return base.Channel.ModifyARAckDate(intLetterID, StrModAckDate, strPODNo, strPODDt, strPODreason, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyARAckDateAsync(int intLetterID, string StrModAckDate, string strPODNo, string strPODDt, string strPODreason, int intUserId, int intWorkStationId) {
            return base.Channel.ModifyARAckDateAsync(intLetterID, StrModAckDate, strPODNo, strPODDt, strPODreason, intUserId, intWorkStationId);
        }
        
        public string SaveEstimation(int CostEstimationID, int PatientID, int TariffID, string PatientName, int PatientType, int GradeID, int Age, int AgeUomID, int GenderID, int PayerId, int BedTypeID, string StrXML, int IntUserID, int IntWorkstationID, int IntHospitalID) {
            return base.Channel.SaveEstimation(CostEstimationID, PatientID, TariffID, PatientName, PatientType, GradeID, Age, AgeUomID, GenderID, PayerId, BedTypeID, StrXML, IntUserID, IntWorkstationID, IntHospitalID);
        }
        
        public System.Threading.Tasks.Task<string> SaveEstimationAsync(int CostEstimationID, int PatientID, int TariffID, string PatientName, int PatientType, int GradeID, int Age, int AgeUomID, int GenderID, int PayerId, int BedTypeID, string StrXML, int IntUserID, int IntWorkstationID, int IntHospitalID) {
            return base.Channel.SaveEstimationAsync(CostEstimationID, PatientID, TariffID, PatientName, PatientType, GradeID, Age, AgeUomID, GenderID, PayerId, BedTypeID, StrXML, IntUserID, IntWorkstationID, IntHospitalID);
        }
        
        public System.Data.DataSet GetEstimationDetails(string EstimationNo, int TableID, int UserID, int WorkStationID) {
            return base.Channel.GetEstimationDetails(EstimationNo, TableID, UserID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEstimationDetailsAsync(string EstimationNo, int TableID, int UserID, int WorkStationID) {
            return base.Channel.GetEstimationDetailsAsync(EstimationNo, TableID, UserID, WorkStationID);
        }
        
        public System.Data.DataTable GetUcafData(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID) {
            return base.Channel.GetUcafData(FromDate, ToDate, StrTable, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUcafDataAsync(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID) {
            return base.Channel.GetUcafDataAsync(FromDate, ToDate, StrTable, intUserID, intWorkStationID);
        }
        
        public System.Data.DataTable GetUcafDataForPatientData(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID, int CompanyID, bool IsInsurance, int intPatientID, string strPType) {
            return base.Channel.GetUcafDataForPatientData(FromDate, ToDate, StrTable, intUserID, intWorkStationID, CompanyID, IsInsurance, intPatientID, strPType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUcafDataForPatientDataAsync(string FromDate, string ToDate, string StrTable, int intUserID, int intWorkStationID, int CompanyID, bool IsInsurance, int intPatientID, string strPType) {
            return base.Channel.GetUcafDataForPatientDataAsync(FromDate, ToDate, StrTable, intUserID, intWorkStationID, CompanyID, IsInsurance, intPatientID, strPType);
        }
        
        public System.Data.DataSet GetApprovalRequest(string FromApprovalDate, string ToApprovalDate, string FilterCondition, int UserID, int WorkStationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.GetApprovalRequest(FromApprovalDate, ToApprovalDate, FilterCondition, UserID, WorkStationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetApprovalRequestAsync(string FromApprovalDate, string ToApprovalDate, string FilterCondition, int UserID, int WorkStationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.GetApprovalRequestAsync(FromApprovalDate, ToApprovalDate, FilterCondition, UserID, WorkStationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet GetTaskStatus(int intUserId, int intWorkStationId) {
            return base.Channel.GetTaskStatus(intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTaskStatusAsync(int intUserId, int intWorkStationId) {
            return base.Channel.GetTaskStatusAsync(intUserId, intWorkStationId);
        }
        
        public int SaveCompanyStatementTemplate(System.Data.DataSet DsCompanyTemplate, int intUserID, int intWorkStationID, int intError, int intFeatureID, int intFunctionID, string CallContext, short IsDefault, int intRoutID) {
            return base.Channel.SaveCompanyStatementTemplate(DsCompanyTemplate, intUserID, intWorkStationID, intError, intFeatureID, intFunctionID, CallContext, IsDefault, intRoutID);
        }
        
        public System.Threading.Tasks.Task<int> SaveCompanyStatementTemplateAsync(System.Data.DataSet DsCompanyTemplate, int intUserID, int intWorkStationID, int intError, int intFeatureID, int intFunctionID, string CallContext, short IsDefault, int intRoutID) {
            return base.Channel.SaveCompanyStatementTemplateAsync(DsCompanyTemplate, intUserID, intWorkStationID, intError, intFeatureID, intFunctionID, CallContext, IsDefault, intRoutID);
        }
        
        public System.Data.DataSet GetCompanyTemplateDetails(int intUserID, int intWorkStationId, string strFilter) {
            return base.Channel.GetCompanyTemplateDetails(intUserID, intWorkStationId, strFilter);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyTemplateDetailsAsync(int intUserID, int intWorkStationId, string strFilter) {
            return base.Channel.GetCompanyTemplateDetailsAsync(intUserID, intWorkStationId, strFilter);
        }
        
        public System.Data.DataSet FetchCompanywiseStatistics(System.Data.DataTable dtStatistics, int intUserID, int intWorkStationID, int intHospitalID) {
            return base.Channel.FetchCompanywiseStatistics(dtStatistics, intUserID, intWorkStationID, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanywiseStatisticsAsync(System.Data.DataTable dtStatistics, int intUserID, int intWorkStationID, int intHospitalID) {
            return base.Channel.FetchCompanywiseStatisticsAsync(dtStatistics, intUserID, intWorkStationID, intHospitalID);
        }
        
        public System.Data.DataSet FetchCompoundBillDetails(int CompanyID, string FromDate, string ToDate, bool Isinsurance, string Tbl, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompoundBillDetails(CompanyID, FromDate, ToDate, Isinsurance, Tbl, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompoundBillDetailsAsync(int CompanyID, string FromDate, string ToDate, bool Isinsurance, string Tbl, int intUserID, int intWorkStationID) {
            return base.Channel.FetchCompoundBillDetailsAsync(CompanyID, FromDate, ToDate, Isinsurance, Tbl, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchCompanyCoverageLetter(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchCompanyCoverageLetter(strSelect, strFilter, strOrder, intUserId, intWorkstationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyCoverageLetterAsync(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchCompanyCoverageLetterAsync(strSelect, strFilter, strOrder, intUserId, intWorkstationId, intError);
        }
        
        public System.Data.DataSet FetchARCompanyCoverageLetter(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchARCompanyCoverageLetter(strSelect, strFilter, strOrder, intUserId, intWorkstationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARCompanyCoverageLetterAsync(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchARCompanyCoverageLetterAsync(strSelect, strFilter, strOrder, intUserId, intWorkstationId, intError);
        }
        
        public System.Data.DataSet GetBillNo(int intPatientID, string strTbl, int intuserId, int intWorkStationID) {
            return base.Channel.GetBillNo(intPatientID, strTbl, intuserId, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBillNoAsync(int intPatientID, string strTbl, int intuserId, int intWorkStationID) {
            return base.Channel.GetBillNoAsync(intPatientID, strTbl, intuserId, intWorkStationID);
        }
        
        public System.Data.DataSet GetFetchARBillDetails(int intBillId, string strTbl, int intUserId, int intWorkStationID, int intError) {
            return base.Channel.GetFetchARBillDetails(intBillId, strTbl, intUserId, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFetchARBillDetailsAsync(int intBillId, string strTbl, int intUserId, int intWorkStationID, int intError) {
            return base.Channel.GetFetchARBillDetailsAsync(intBillId, strTbl, intUserId, intWorkStationID, intError);
        }
        
        public int SaveARBillCorrection(int BillID, decimal TotalBillAmt, decimal TotalDicountAmt, decimal CAmt, decimal Pamt, decimal CDiscount, decimal PDiscount, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, decimal PVAT, decimal CVAT) {
            return base.Channel.SaveARBillCorrection(BillID, TotalBillAmt, TotalDicountAmt, CAmt, Pamt, CDiscount, PDiscount, objDSSave, intUserID, intWorkStationID, PVAT, CVAT);
        }
        
        public System.Threading.Tasks.Task<int> SaveARBillCorrectionAsync(int BillID, decimal TotalBillAmt, decimal TotalDicountAmt, decimal CAmt, decimal Pamt, decimal CDiscount, decimal PDiscount, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, decimal PVAT, decimal CVAT) {
            return base.Channel.SaveARBillCorrectionAsync(BillID, TotalBillAmt, TotalDicountAmt, CAmt, Pamt, CDiscount, PDiscount, objDSSave, intUserID, intWorkStationID, PVAT, CVAT);
        }
        
        public int SaveAROPBillCorrection(
                    int BillID, 
                    double TotalBillAmt, 
                    double TotalDicountAmt, 
                    double CAmt, 
                    double Pamt, 
                    double CDiscount, 
                    double PDiscount, 
                    System.Data.DataSet objDSSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intCompanyId, 
                    int intGradeId, 
                    int intDoctorId, 
                    System.DateTime billDate, 
                    decimal PVAT, 
                    decimal CVAT) {
            return base.Channel.SaveAROPBillCorrection(BillID, TotalBillAmt, TotalDicountAmt, CAmt, Pamt, CDiscount, PDiscount, objDSSave, intUserID, intWorkStationID, intCompanyId, intGradeId, intDoctorId, billDate, PVAT, CVAT);
        }
        
        public System.Threading.Tasks.Task<int> SaveAROPBillCorrectionAsync(
                    int BillID, 
                    double TotalBillAmt, 
                    double TotalDicountAmt, 
                    double CAmt, 
                    double Pamt, 
                    double CDiscount, 
                    double PDiscount, 
                    System.Data.DataSet objDSSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intCompanyId, 
                    int intGradeId, 
                    int intDoctorId, 
                    System.DateTime billDate, 
                    decimal PVAT, 
                    decimal CVAT) {
            return base.Channel.SaveAROPBillCorrectionAsync(BillID, TotalBillAmt, TotalDicountAmt, CAmt, Pamt, CDiscount, PDiscount, objDSSave, intUserID, intWorkStationID, intCompanyId, intGradeId, intDoctorId, billDate, PVAT, CVAT);
        }
        
        public int SaveARBillSplitting(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int BillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError) {
            return base.Channel.SaveARBillSplitting(PatientId, IpID, PatientType, BillId, BillDate, BillType, CompanyId, TariffId, GradeId, hospitalId, TotalBillAmt, PAmt, CAmt, PDiscount, CDiscount, objNewBill, titleId, FirstName, middleName, lastName, genderId, Age, AgeUOMID, doctorId, RefDoctorId, SpecializeId, firstName2L, middleName2L, LastName2L, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<int> SaveARBillSplittingAsync(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int BillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError) {
            return base.Channel.SaveARBillSplittingAsync(PatientId, IpID, PatientType, BillId, BillDate, BillType, CompanyId, TariffId, GradeId, hospitalId, TotalBillAmt, PAmt, CAmt, PDiscount, CDiscount, objNewBill, titleId, FirstName, middleName, lastName, genderId, Age, AgeUOMID, doctorId, RefDoctorId, SpecializeId, firstName2L, middleName2L, LastName2L, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetFreezedBills(int companyId, string FromBillDate, string ToBillDate, string PatientType, bool isInsCompany, int intUserID, int intWorkStationID, int hospitalID) {
            return base.Channel.GetFreezedBills(companyId, FromBillDate, ToBillDate, PatientType, isInsCompany, intUserID, intWorkStationID, hospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFreezedBillsAsync(int companyId, string FromBillDate, string ToBillDate, string PatientType, bool isInsCompany, int intUserID, int intWorkStationID, int hospitalID) {
            return base.Channel.GetFreezedBillsAsync(companyId, FromBillDate, ToBillDate, PatientType, isInsCompany, intUserID, intWorkStationID, hospitalID);
        }
        
        public int SaveARFreezeBills(System.Data.DataTable objDtSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveARFreezeBills(objDtSave, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> SaveARFreezeBillsAsync(System.Data.DataTable objDtSave, int intUserID, int intWorkStationID) {
            return base.Channel.SaveARFreezeBillsAsync(objDtSave, intUserID, intWorkStationID);
        }
        
        public int ARSplitBill(
                    int PatientId, 
                    int IpID, 
                    int ParentBillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int PatientType, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal TotalDiscountAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objBillDetails, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int UBillID, 
                    decimal UTotalBillAmt, 
                    decimal UTotalDiscountAmt, 
                    decimal UCAmt, 
                    decimal UPamt, 
                    decimal UCDiscount, 
                    decimal UPDiscount, 
                    System.Data.DataTable updateobjDtSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    decimal UCVAT, 
                    decimal UPVAT, 
                    decimal CVAT, 
                    decimal PVAT) {
            return base.Channel.ARSplitBill(PatientId, IpID, ParentBillId, BillDate, BillType, CompanyId, TariffId, GradeId, PatientType, hospitalId, TotalBillAmt, TotalDiscountAmt, PAmt, CAmt, PDiscount, CDiscount, objBillDetails, titleId, FirstName, middleName, lastName, genderId, Age, AgeUOMID, doctorId, RefDoctorId, SpecializeId, firstName2L, middleName2L, LastName2L, UBillID, UTotalBillAmt, UTotalDiscountAmt, UCAmt, UPamt, UCDiscount, UPDiscount, updateobjDtSave, intUserID, intWorkStationID, UCVAT, UPVAT, CVAT, PVAT);
        }
        
        public System.Threading.Tasks.Task<int> ARSplitBillAsync(
                    int PatientId, 
                    int IpID, 
                    int ParentBillId, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int PatientType, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal TotalDiscountAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objBillDetails, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int UBillID, 
                    decimal UTotalBillAmt, 
                    decimal UTotalDiscountAmt, 
                    decimal UCAmt, 
                    decimal UPamt, 
                    decimal UCDiscount, 
                    decimal UPDiscount, 
                    System.Data.DataTable updateobjDtSave, 
                    int intUserID, 
                    int intWorkStationID, 
                    decimal UCVAT, 
                    decimal UPVAT, 
                    decimal CVAT, 
                    decimal PVAT) {
            return base.Channel.ARSplitBillAsync(PatientId, IpID, ParentBillId, BillDate, BillType, CompanyId, TariffId, GradeId, PatientType, hospitalId, TotalBillAmt, TotalDiscountAmt, PAmt, CAmt, PDiscount, CDiscount, objBillDetails, titleId, FirstName, middleName, lastName, genderId, Age, AgeUOMID, doctorId, RefDoctorId, SpecializeId, firstName2L, middleName2L, LastName2L, UBillID, UTotalBillAmt, UTotalDiscountAmt, UCAmt, UPamt, UCDiscount, UPDiscount, updateobjDtSave, intUserID, intWorkStationID, UCVAT, UPVAT, CVAT, PVAT);
        }
        
        public int SaveARBills(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int ParentBillId, 
                    int BillId, 
                    string BillNo, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intOrderDepID, 
                    int intParentInsIDNew) {
            return base.Channel.SaveARBills(PatientId, IpID, PatientType, ParentBillId, BillId, BillNo, BillDate, BillType, CompanyId, TariffId, GradeId, hospitalId, TotalBillAmt, PAmt, CAmt, PDiscount, CDiscount, objNewBill, titleId, FirstName, middleName, lastName, genderId, Age, AgeUOMID, doctorId, RefDoctorId, SpecializeId, firstName2L, middleName2L, LastName2L, intUserID, intWorkStationID, intError, intOrderDepID, intParentInsIDNew);
        }
        
        public System.Threading.Tasks.Task<int> SaveARBillsAsync(
                    int PatientId, 
                    int IpID, 
                    int PatientType, 
                    int ParentBillId, 
                    int BillId, 
                    string BillNo, 
                    System.DateTime BillDate, 
                    string BillType, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int hospitalId, 
                    decimal TotalBillAmt, 
                    decimal PAmt, 
                    decimal CAmt, 
                    decimal PDiscount, 
                    decimal CDiscount, 
                    System.Data.DataTable objNewBill, 
                    int titleId, 
                    string FirstName, 
                    string middleName, 
                    string lastName, 
                    int genderId, 
                    int Age, 
                    int AgeUOMID, 
                    int doctorId, 
                    int RefDoctorId, 
                    int SpecializeId, 
                    string firstName2L, 
                    string middleName2L, 
                    string LastName2L, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intOrderDepID, 
                    int intParentInsIDNew) {
            return base.Channel.SaveARBillsAsync(PatientId, IpID, PatientType, ParentBillId, BillId, BillNo, BillDate, BillType, CompanyId, TariffId, GradeId, hospitalId, TotalBillAmt, PAmt, CAmt, PDiscount, CDiscount, objNewBill, titleId, FirstName, middleName, lastName, genderId, Age, AgeUOMID, doctorId, RefDoctorId, SpecializeId, firstName2L, middleName2L, LastName2L, intUserID, intWorkStationID, intError, intOrderDepID, intParentInsIDNew);
        }
        
        public int UpdateARBills(
                    int BillId, 
                    decimal TotalBillAmt, 
                    decimal TotalDicountAmt, 
                    decimal CAmt, 
                    decimal PAmt, 
                    decimal CDiscount, 
                    decimal PDiscount, 
                    System.Data.DataTable objNewBill, 
                    int intUserID, 
                    int intWorkStationID, 
                    int PatientType, 
                    int hospitalId, 
                    string strPackages, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int intParentInsIDNew) {
            return base.Channel.UpdateARBills(BillId, TotalBillAmt, TotalDicountAmt, CAmt, PAmt, CDiscount, PDiscount, objNewBill, intUserID, intWorkStationID, PatientType, hospitalId, strPackages, CompanyId, TariffId, GradeId, intParentInsIDNew);
        }
        
        public System.Threading.Tasks.Task<int> UpdateARBillsAsync(
                    int BillId, 
                    decimal TotalBillAmt, 
                    decimal TotalDicountAmt, 
                    decimal CAmt, 
                    decimal PAmt, 
                    decimal CDiscount, 
                    decimal PDiscount, 
                    System.Data.DataTable objNewBill, 
                    int intUserID, 
                    int intWorkStationID, 
                    int PatientType, 
                    int hospitalId, 
                    string strPackages, 
                    int CompanyId, 
                    int TariffId, 
                    int GradeId, 
                    int intParentInsIDNew) {
            return base.Channel.UpdateARBillsAsync(BillId, TotalBillAmt, TotalDicountAmt, CAmt, PAmt, CDiscount, PDiscount, objNewBill, intUserID, intWorkStationID, PatientType, hospitalId, strPackages, CompanyId, TariffId, GradeId, intParentInsIDNew);
        }
        
        public System.Data.DataSet FetchPatientARBills(int intPatientId, string strTbl, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchPatientARBills(intPatientId, strTbl, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientARBillsAsync(int intPatientId, string strTbl, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchPatientARBillsAsync(intPatientId, strTbl, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet FetchARInvoiceBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchARInvoiceBills(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARInvoiceBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchARInvoiceBillsAsync(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Data.DataSet FetchARBills(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchARBills(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARBillsAsync(int TypeID, string strfilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchARBillsAsync(TypeID, strfilter, intUserID, intWorkStationID);
        }
        
        public int SaveAccountRecievableInvoice(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType) {
            return base.Channel.SaveAccountRecievableInvoice(intCustomerID, PatientType, intInvoiceID, strInvoiceNo, objDSSave, intUserID, intWorkStationID, InvType);
        }
        
        public System.Threading.Tasks.Task<int> SaveAccountRecievableInvoiceAsync(int intCustomerID, int PatientType, int intInvoiceID, string strInvoiceNo, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType) {
            return base.Channel.SaveAccountRecievableInvoiceAsync(intCustomerID, PatientType, intInvoiceID, strInvoiceNo, objDSSave, intUserID, intWorkStationID, InvType);
        }
        
        public System.Data.DataSet FetchStatisticReport(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchStatisticReport(strSelect, strFilter, strOrder, intUserId, intWorkstationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchStatisticReportAsync(string strSelect, string strFilter, string strOrder, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchStatisticReportAsync(strSelect, strFilter, strOrder, intUserId, intWorkstationId, intError);
        }
        
        public System.Data.DataSet FetchUsers(string Type, string strFilter, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchUsers(Type, strFilter, intUserId, intWorkstationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchUsersAsync(string Type, string strFilter, int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchUsersAsync(Type, strFilter, intUserId, intWorkstationId, intError);
        }
        
        public System.Data.DataSet FetchDoctors(int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchDoctors(intUserId, intWorkstationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDoctorsAsync(int intUserId, int intWorkstationId, int intError) {
            return base.Channel.FetchDoctorsAsync(intUserId, intWorkstationId, intError);
        }
        
        public int CancelAccountRecievableInvoice(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID) {
            return base.Channel.CancelAccountRecievableInvoice(InvoicedID, strInvoiceNo, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> CancelAccountRecievableInvoiceAsync(int InvoicedID, string strInvoiceNo, int intUserID, int intWorkStationID) {
            return base.Channel.CancelAccountRecievableInvoiceAsync(InvoicedID, strInvoiceNo, intUserID, intWorkStationID);
        }
        
        public int CancelARCoveringLetters(string strARLetterIDs, int intUserID, int intWorkStationID) {
            return base.Channel.CancelARCoveringLetters(strARLetterIDs, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> CancelARCoveringLettersAsync(string strARLetterIDs, int intUserID, int intWorkStationID) {
            return base.Channel.CancelARCoveringLettersAsync(strARLetterIDs, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchARInvoicePayerBills(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchARInvoicePayerBills(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARInvoicePayerBillsAsync(int TypeID, string strfilter, int compayid, int insuranceid, string fromdate, string todate, int intUserID, int intWorkStationID, int tagid, int IsFreezeDate) {
            return base.Channel.FetchARInvoicePayerBillsAsync(TypeID, strfilter, compayid, insuranceid, fromdate, todate, intUserID, intWorkStationID, tagid, IsFreezeDate);
        }
        
        public System.Data.DataSet FetchARInvoiceSummary(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.FetchARInvoiceSummary(intInvoiceID, strTableids, LanguageId, intUserId, intWorkStationId, intError, FeatureId, FunctionId, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchARInvoiceSummaryAsync(int intInvoiceID, string strTableids, int LanguageId, int intUserId, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.FetchARInvoiceSummaryAsync(intInvoiceID, strTableids, LanguageId, intUserId, intWorkStationId, intError, FeatureId, FunctionId, CallContext);
        }
        
        public System.Data.DataSet FetchBulkARInvoiceDetails(
                    int InsuranceCompanyID, 
                    int CompanyID, 
                    string InvoiceFromDate, 
                    string InvoiceToDate, 
                    int InvoiceFromNO, 
                    int InvoiceToNO, 
                    string BillFromDate, 
                    string BillTODate, 
                    int DoctorID, 
                    int PatientType, 
                    int UHID, 
                    string TBL, 
                    int LanguageID, 
                    int UserId, 
                    int WorkStationId, 
                    bool IsInsurance, 
                    int hospitalID) {
            return base.Channel.FetchBulkARInvoiceDetails(InsuranceCompanyID, CompanyID, InvoiceFromDate, InvoiceToDate, InvoiceFromNO, InvoiceToNO, BillFromDate, BillTODate, DoctorID, PatientType, UHID, TBL, LanguageID, UserId, WorkStationId, IsInsurance, hospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchBulkARInvoiceDetailsAsync(
                    int InsuranceCompanyID, 
                    int CompanyID, 
                    string InvoiceFromDate, 
                    string InvoiceToDate, 
                    int InvoiceFromNO, 
                    int InvoiceToNO, 
                    string BillFromDate, 
                    string BillTODate, 
                    int DoctorID, 
                    int PatientType, 
                    int UHID, 
                    string TBL, 
                    int LanguageID, 
                    int UserId, 
                    int WorkStationId, 
                    bool IsInsurance, 
                    int hospitalID) {
            return base.Channel.FetchBulkARInvoiceDetailsAsync(InsuranceCompanyID, CompanyID, InvoiceFromDate, InvoiceToDate, InvoiceFromNO, InvoiceToNO, BillFromDate, BillTODate, DoctorID, PatientType, UHID, TBL, LanguageID, UserId, WorkStationId, IsInsurance, hospitalID);
        }
        
        public System.Data.DataSet FetchTempInvoicesForPreview(string BillIDs, int intUserId, int intWorkStationID, int intError, bool blnisfollwup) {
            return base.Channel.FetchTempInvoicesForPreview(BillIDs, intUserId, intWorkStationID, intError, blnisfollwup);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTempInvoicesForPreviewAsync(string BillIDs, int intUserId, int intWorkStationID, int intError, bool blnisfollwup) {
            return base.Channel.FetchTempInvoicesForPreviewAsync(BillIDs, intUserId, intWorkStationID, intError, blnisfollwup);
        }
        
        public System.Data.DataSet GetARCompanyStatement(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID, int IsInsurance) {
            return base.Channel.GetARCompanyStatement(CompanyId, invFrom, invTo, Tbl, PatientType, Status, intUserID, intWorkStationID, IsInvoiceDate, intHospitalID, IsInsurance);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetARCompanyStatementAsync(int CompanyId, string invFrom, string invTo, string Tbl, string PatientType, string Status, int intUserID, int intWorkStationID, int IsInvoiceDate, int intHospitalID, int IsInsurance) {
            return base.Channel.GetARCompanyStatementAsync(CompanyId, invFrom, invTo, Tbl, PatientType, Status, intUserID, intWorkStationID, IsInvoiceDate, intHospitalID, IsInsurance);
        }
        
        public System.Data.DataSet GetFetchARTestItems(int CompanyId, string fromDate, string toDate, int Status, int intUserID, int intWorkStationID, int IsInsurance) {
            return base.Channel.GetFetchARTestItems(CompanyId, fromDate, toDate, Status, intUserID, intWorkStationID, IsInsurance);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFetchARTestItemsAsync(int CompanyId, string fromDate, string toDate, int Status, int intUserID, int intWorkStationID, int IsInsurance) {
            return base.Channel.GetFetchARTestItemsAsync(CompanyId, fromDate, toDate, Status, intUserID, intWorkStationID, IsInsurance);
        }
        
        public int CreateOrUpdateAppRequestStatus(int entityId, int intUserID, int intWorkStationID, int status) {
            return base.Channel.CreateOrUpdateAppRequestStatus(entityId, intUserID, intWorkStationID, status);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrUpdateAppRequestStatusAsync(int entityId, int intUserID, int intWorkStationID, int status) {
            return base.Channel.CreateOrUpdateAppRequestStatusAsync(entityId, intUserID, intWorkStationID, status);
        }
        
        public System.Data.DataSet FetchApprovalCount(int PatientID, int DoctorID, string fromdate, string todate, int intUserID, int intWorkStationID) {
            return base.Channel.FetchApprovalCount(PatientID, DoctorID, fromdate, todate, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchApprovalCountAsync(int PatientID, int DoctorID, string fromdate, string todate, int intUserID, int intWorkStationID) {
            return base.Channel.FetchApprovalCountAsync(PatientID, DoctorID, fromdate, todate, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchApprovalRaisedCheck(int AdmissionId, int intUserID, int intWorkStationID) {
            return base.Channel.FetchApprovalRaisedCheck(AdmissionId, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchApprovalRaisedCheckAsync(int AdmissionId, int intUserID, int intWorkStationID) {
            return base.Channel.FetchApprovalRaisedCheckAsync(AdmissionId, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet CancelARBill(int intARBillID, int intUserID, int intWorkStationID) {
            return base.Channel.CancelARBill(intARBillID, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CancelARBillAsync(int intARBillID, int intUserID, int intWorkStationID) {
            return base.Channel.CancelARBillAsync(intARBillID, intUserID, intWorkStationID);
        }
        
        public int SaveARBulkInvoice(int PatientType, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType) {
            return base.Channel.SaveARBulkInvoice(PatientType, objDSSave, intUserID, intWorkStationID, InvType);
        }
        
        public System.Threading.Tasks.Task<int> SaveARBulkInvoiceAsync(int PatientType, System.Data.DataSet objDSSave, int intUserID, int intWorkStationID, int InvType) {
            return base.Channel.SaveARBulkInvoiceAsync(PatientType, objDSSave, intUserID, intWorkStationID, InvType);
        }
        
        public int UpdateInvoiceVerifyStatus(System.Data.DataTable objDtVerify, int intVerifiedBy, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateInvoiceVerifyStatus(objDtVerify, intVerifiedBy, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateInvoiceVerifyStatusAsync(System.Data.DataTable objDtVerify, int intVerifiedBy, int intUserID, int intWorkStationID) {
            return base.Channel.UpdateInvoiceVerifyStatusAsync(objDtVerify, intVerifiedBy, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchClinicalAuditData(int PayerId, int PatientId, string FromDate, string ToDate, int intUserID, int intWorkStationID, int inspayerID) {
            return base.Channel.FetchClinicalAuditData(PayerId, PatientId, FromDate, ToDate, intUserID, intWorkStationID, inspayerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchClinicalAuditDataAsync(int PayerId, int PatientId, string FromDate, string ToDate, int intUserID, int intWorkStationID, int inspayerID) {
            return base.Channel.FetchClinicalAuditDataAsync(PayerId, PatientId, FromDate, ToDate, intUserID, intWorkStationID, inspayerID);
        }
        
        public System.Data.DataSet FetchQueryDetails(int AdmissionId, int DoctorId, string FromDate, string ToDate, int intUserID, int intWorkStationID) {
            return base.Channel.FetchQueryDetails(AdmissionId, DoctorId, FromDate, ToDate, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchQueryDetailsAsync(int AdmissionId, int DoctorId, string FromDate, string ToDate, int intUserID, int intWorkStationID) {
            return base.Channel.FetchQueryDetailsAsync(AdmissionId, DoctorId, FromDate, ToDate, intUserID, intWorkStationID);
        }
        
        public int saveQueryDetails(System.Data.DataTable dtSaveQuery, int intUserID, int intWorkStationID) {
            return base.Channel.saveQueryDetails(dtSaveQuery, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> saveQueryDetailsAsync(System.Data.DataTable dtSaveQuery, int intUserID, int intWorkStationID) {
            return base.Channel.saveQueryDetailsAsync(dtSaveQuery, intUserID, intWorkStationID);
        }
        
        public int saveVerifyDetails(string SaveXML, int intUserID, int intWorkStationID) {
            return base.Channel.saveVerifyDetails(SaveXML, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<int> saveVerifyDetailsAsync(string SaveXML, int intUserID, int intWorkStationID) {
            return base.Channel.saveVerifyDetailsAsync(SaveXML, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchWSASR(int intVisitID, int intApprovalID, int intUserID, int intWorkStationID, int intHospitalID) {
            return base.Channel.FetchWSASR(intVisitID, intApprovalID, intUserID, intWorkStationID, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchWSASRAsync(int intVisitID, int intApprovalID, int intUserID, int intWorkStationID, int intHospitalID) {
            return base.Channel.FetchWSASRAsync(intVisitID, intApprovalID, intUserID, intWorkStationID, intHospitalID);
        }
    }
}
