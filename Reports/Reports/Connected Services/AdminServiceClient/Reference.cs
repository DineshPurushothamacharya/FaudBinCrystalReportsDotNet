//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reports.AdminServiceClient {
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
    public partial class NextGenCustomException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorDetailsField;
        
        private string errorMessageField;
        
        private string errorSourceField;
        
        private string errorStackTraceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string ErrorDetails {
            get {
                return this.errorDetailsField;
            }
            set {
                this.errorDetailsField = value;
                this.RaisePropertyChanged("ErrorDetails");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string ErrorSource {
            get {
                return this.errorSourceField;
            }
            set {
                this.errorSourceField = value;
                this.RaisePropertyChanged("ErrorSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string ErrorStackTrace {
            get {
                return this.errorStackTraceField;
            }
            set {
                this.errorStackTraceField = value;
                this.RaisePropertyChanged("ErrorStackTrace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Wipro/HISNxG", ConfigurationName="AdminServiceClient.IAdmin")]
    public interface IAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchSavedDocsCutOffTime", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSavedDocsCutOffTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchSavedDocsCutOffTimeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchSavedDocsCutOffTime(int DocId, int SpecializationId, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchSavedDocsCutOffTime", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSavedDocsCutOffTimeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchSavedDocsCutOffTimeAsync(int DocId, int SpecializationId, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveQuestionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveQuestionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveQuestions(int FeedBackQuestionId, string EQuestion, string AQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveQuestionsResponse")]
        System.Threading.Tasks.Task<int> SaveQuestionsAsync(int FeedBackQuestionId, string EQuestion, string AQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchSections", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSectionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchSectionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchSections(int PatType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchSections", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSectionsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchSectionsAsync(int PatType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchQuestionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchQuestionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchQuestions(int intServiceID, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchQuestionsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchQuestionsAsync(int intServiceID, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/LoadAllSections", ReplyAction="http://Wipro/HISNxG/IAdmin/LoadAllSectionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/LoadAllSectionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable LoadAllSections();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/LoadAllSections", ReplyAction="http://Wipro/HISNxG/IAdmin/LoadAllSectionsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> LoadAllSectionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveSectonQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSectonQuestionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveSectonQuestionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveSectonQuestions(int SectionId, string Questions, int userId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveSectonQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSectonQuestionsResponse")]
        System.Threading.Tasks.Task<int> SaveSectonQuestionsAsync(int SectionId, string Questions, int userId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveHospitalSectonQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveHospitalSectonQuestionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveHospitalSectonQuestionsNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveHospitalSectonQuestions(int SectionId, string Questions, int HospitalID, int Patienttype, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveHospitalSectonQuestions", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveHospitalSectonQuestionsResponse")]
        System.Threading.Tasks.Task<int> SaveHospitalSectonQuestionsAsync(int SectionId, string Questions, int HospitalID, int Patienttype, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SavePolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SavePolicySectionFileMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SavePolicySectionFileMappingNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SavePolicySectionFileMapping(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SavePolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SavePolicySectionFileMappingResponse")]
        System.Threading.Tasks.Task<int> SavePolicySectionFileMappingAsync(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchPolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchPolicySectionFileMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchPolicySectionFileMappingNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchPolicySectionFileMapping(int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchPolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchPolicySectionFileMappingResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchPolicySectionFileMappingAsync(int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveEmployeePolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEmployeePolicySectionFileMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveEmployeePolicySectionFileMappingNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveEmployeePolicySectionFileMapping(int EmpId, System.Data.DataTable dtFinal, System.Data.DataTable dtSections, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveEmployeePolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEmployeePolicySectionFileMappingResponse")]
        System.Threading.Tasks.Task<int> SaveEmployeePolicySectionFileMappingAsync(int EmpId, System.Data.DataTable dtFinal, System.Data.DataTable dtSections, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchEmployeePolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeePolicySectionFileMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchEmployeePolicySectionFileMappingNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchEmployeePolicySectionFileMapping(int EmpId, int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID, string Tbl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchEmployeePolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeePolicySectionFileMappingResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchEmployeePolicySectionFileMappingAsync(int EmpId, int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID, string Tbl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveCopyPolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCopyPolicySectionFileMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveCopyPolicySectionFileMappingNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveCopyPolicySectionFileMapping(int EmpId, int hospDeptId, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveCopyPolicySectionFileMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCopyPolicySectionFileMappingResponse")]
        System.Threading.Tasks.Task<int> SaveCopyPolicySectionFileMappingAsync(int EmpId, int hospDeptId, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveDepartmentwiseCheckList", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDepartmentwiseCheckListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDepartmentwiseCheckListNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveDepartmentwiseCheckList(System.Data.DataTable dtCheckList, int HospDeptId, int UserId, int WorkStation, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveDepartmentwiseCheckList", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDepartmentwiseCheckListResponse")]
        System.Threading.Tasks.Task<int> SaveDepartmentwiseCheckListAsync(System.Data.DataTable dtCheckList, int HospDeptId, int UserId, int WorkStation, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchDepartmentwiseCheckList", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDepartmentwiseCheckListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentwiseCheckListNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchDepartmentwiseCheckList(int HospDeptId, int UserID, int WorkStationId, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchDepartmentwiseCheckList", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDepartmentwiseCheckListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDepartmentwiseCheckListAsync(int HospDeptId, int UserID, int WorkStationId, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SavePolicySectionMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SavePolicySectionMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SavePolicySectionMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SavePolicySectionMaster(int SectionId, string SectionCode, string SectionName, int ParentSectionId, int RootSectionId, int UserId, int WorkStation, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SavePolicySectionMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SavePolicySectionMasterResponse")]
        System.Threading.Tasks.Task<int> SavePolicySectionMasterAsync(int SectionId, string SectionCode, string SectionName, int ParentSectionId, int RootSectionId, int UserId, int WorkStation, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveFeedBackServices", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFeedBackServicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveFeedBackServicesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveFeedBackServices(int FeedBackServiceId, string ServiceName, string serviceName2L, int Patienttype, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveFeedBackServices", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFeedBackServicesResponse")]
        System.Threading.Tasks.Task<int> SaveFeedBackServicesAsync(int FeedBackServiceId, string ServiceName, string serviceName2L, int Patienttype, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchFeedbackSectionServiceMap", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchFeedbackSectionServiceMapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchFeedbackSectionServiceMapNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchFeedbackSectionServiceMap(int intServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchFeedbackSectionServiceMap", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchFeedbackSectionServiceMapResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchFeedbackSectionServiceMapAsync(int intServiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveFeedbackSectionServiceMap", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFeedbackSectionServiceMapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveFeedbackSectionServiceMapNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveFeedbackSectionServiceMap(int SectionId, int HisServiceId, string Specialisations, int userId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveFeedbackSectionServiceMap", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFeedbackSectionServiceMapResponse")]
        System.Threading.Tasks.Task<int> SaveFeedbackSectionServiceMapAsync(int SectionId, int HisServiceId, string Specialisations, int userId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchPOSMappingDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchPOSMappingDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchPOSMappingDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchPOSMappingDetails(int HospitalId, int MapWorkStationId, string WorkStationIP, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchPOSMappingDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchPOSMappingDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPOSMappingDetailsAsync(int HospitalId, int MapWorkStationId, string WorkStationIP, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SavePOSMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SavePOSMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SavePOSMappingNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SavePOSMapping(int HospitalId, int MappingWorkstationid, int facilityId, string WorkStationIp, string POSIP, string POSName, string PrinterIP, bool Blocked, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SavePOSMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SavePOSMappingResponse")]
        System.Threading.Tasks.Task<int> SavePOSMappingAsync(int HospitalId, int MappingWorkstationid, int facilityId, string WorkStationIp, string POSIP, string POSName, string PrinterIP, bool Blocked, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchIVItemConfiguration", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchIVItemConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchIVItemConfigurationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchIVItemConfiguration(int ItemID, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchIVItemConfiguration", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchIVItemConfigurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchIVItemConfigurationAsync(int ItemID, int UserId, int WorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveIVItemConfiguration", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveIVItemConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveIVItemConfigurationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveIVItemConfiguration(
                    int ItemId, 
                    int DoseID, 
                    decimal Dose, 
                    decimal PheriperalAdult, 
                    decimal PheriperalChild, 
                    decimal PheriperalNeo, 
                    decimal CentralValueAdult, 
                    decimal CentralValueChild, 
                    decimal CentralValueNeonatal, 
                    decimal MinDose, 
                    decimal MaxDose, 
                    decimal DrugFixedVolumn, 
                    decimal DrugConcentrationValue, 
                    int BLOCKED, 
                    int UserId, 
                    int WorkStationId, 
                    int Error, 
                    bool BaseDoseWiseCalculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveIVItemConfiguration", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveIVItemConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveIVItemConfigurationAsync(
                    int ItemId, 
                    int DoseID, 
                    decimal Dose, 
                    decimal PheriperalAdult, 
                    decimal PheriperalChild, 
                    decimal PheriperalNeo, 
                    decimal CentralValueAdult, 
                    decimal CentralValueChild, 
                    decimal CentralValueNeonatal, 
                    decimal MinDose, 
                    decimal MaxDose, 
                    decimal DrugFixedVolumn, 
                    decimal DrugConcentrationValue, 
                    int BLOCKED, 
                    int UserId, 
                    int WorkStationId, 
                    int Error, 
                    bool BaseDoseWiseCalculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchIVFluidItems", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchIVFluidItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchIVFluidItemsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchIVFluidItems(int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchIVFluidItems", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchIVFluidItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchIVFluidItemsAsync(int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationDischargefollowup1", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationHosptID")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationHosptIDNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveDischareFollowUpSpecialisationHosptID(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText, 
                    int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationDischargefollowup1", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationHosptID")]
        System.Threading.Tasks.Task<bool> SaveDischareFollowUpSpecialisationHosptIDAsync(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText, 
                    int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/GetOTPoster", ReplyAction="http://Wipro/HISNxG/IAdmin/GetOTPosterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetOTPosterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOTPoster(string strTable, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/GetOTPoster", ReplyAction="http://Wipro/HISNxG/IAdmin/GetOTPosterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOTPosterAsync(string strTable, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchWardEPoster", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchWardEPosterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchWardEPosterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchWardEPoster(string WardID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchWardEPoster", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchWardEPosterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchWardEPosterAsync(string WardID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchHospitalSpecializations", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchHospitalSpecializationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchHospitalSpecializationsNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchHospitalSpecializations(int HospitalID, int UserId, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchHospitalSpecializations", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchHospitalSpecializationsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchHospitalSpecializationsAsync(int HospitalID, int UserId, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchMultiFeatureNames", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchMultiFeatureNamesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchMultiFeatureNamesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchMultiFeatureNames(string FeatureIds, int UserId, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchMultiFeatureNames", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchMultiFeatureNamesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchMultiFeatureNamesAsync(string FeatureIds, int UserId, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveAlertLevelConfigurations", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveAlertLevelConfigurationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveAlertLevelConfigurationsNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveAlertLevelConfigurations(System.Data.DataSet dsProc, int AlertLevelConfigID, int SID, int SpecialiseID, int HospitalID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveAlertLevelConfigurations", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveAlertLevelConfigurationsResponse")]
        System.Threading.Tasks.Task<bool> SaveAlertLevelConfigurationsAsync(System.Data.DataSet dsProc, int AlertLevelConfigID, int SID, int SpecialiseID, int HospitalID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchAlertLevelConfigurations", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAlertLevelConfigurationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAlertLevelConfigurationsNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAlertLevelConfigurations(int EMPID, int SpecialiseID, int HospitalID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchAlertLevelConfigurations", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAlertLevelConfigurationsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAlertLevelConfigurationsAsync(int EMPID, int SpecialiseID, int HospitalID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchSystemRoboDropPointsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSystemRoboDropPointsMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchSystemRoboDropPointsMappingNextGenCustomException" +
            "Fault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchSystemRoboDropPointsMapping(int UserSystemID, string Tbl, int HospitalID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchSystemRoboDropPointsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSystemRoboDropPointsMappingResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchSystemRoboDropPointsMappingAsync(int UserSystemID, string Tbl, int HospitalID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveRoboDropPointUserSystemsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveRoboDropPointUserSystemsMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveRoboDropPointUserSystemsMappingNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveRoboDropPointUserSystemsMapping(System.Data.DataSet dsRobo, int UserSystemID, int HospitalID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveRoboDropPointUserSystemsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveRoboDropPointUserSystemsMappingResponse")]
        System.Threading.Tasks.Task<bool> SaveRoboDropPointUserSystemsMappingAsync(System.Data.DataSet dsRobo, int UserSystemID, int HospitalID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchCaseStudyMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCaseStudyMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchCaseStudyMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchCaseStudyMaster(int CaseStudySectionID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchCaseStudyMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCaseStudyMasterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCaseStudyMasterAsync(int CaseStudySectionID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchCaseStudyForm", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCaseStudyFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchCaseStudyFormNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchCaseStudyForm(int CaseStudyFormID, int PatientID, int IPID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchCaseStudyForm", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCaseStudyFormResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCaseStudyFormAsync(int CaseStudyFormID, int PatientID, int IPID, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveCaseStudyForm", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCaseStudyFormResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveCaseStudyFormNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveCaseStudyForm(System.Data.DataSet dsCaseStudy, int intUserId, int intWorkStationId, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveCaseStudyForm", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCaseStudyFormResponse")]
        System.Threading.Tasks.Task<bool> SaveCaseStudyFormAsync(System.Data.DataSet dsCaseStudy, int intUserId, int intWorkStationId, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/LoadMasters", ReplyAction="http://Wipro/HISNxG/IAdmin/LoadMasters")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/LoadMastersNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoadMasters(string strTableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/LoadMasters", ReplyAction="http://Wipro/HISNxG/IAdmin/LoadMasters")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadMastersAsync(string strTableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/LoadMastersTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/LoadMastersTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/LoadMastersIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LoadMastersId(string strTableId, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/LoadMastersTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/LoadMastersTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadMastersIdAsync(string strTableId, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveMaster")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveMaster(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveMaster")]
        System.Threading.Tasks.Task<bool> SaveMasterAsync(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAgeDetail", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAgeDetail")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAgeDetailNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FetchAgeDetail(System.DateTime DateOfbirth, System.DateTime CurrentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAgeDetail", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAgeDetail")]
        System.Threading.Tasks.Task<string> FetchAgeDetailAsync(System.DateTime DateOfbirth, System.DateTime CurrentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedata", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeedata")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchEmployeedata(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedata", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeedata")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeedata")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataMODANextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchEmployeedataMODA(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeedata")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataMODAAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeedataTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchEmployeedataId(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchEmployeedataTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchEmployeedataTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataIdAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchCutOffDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCutOffDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchCutOffDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchCutOffDetails(int intWardID, string intTable, int intUserId, int intWorkStid, int intError, int intFeatureid, int intFunctionid, string StrCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchCutOffDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCutOffDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCutOffDetailsAsync(int intWardID, string intTable, int intUserId, int intWorkStid, int intError, int intFeatureid, int intFunctionid, string StrCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchFacilityName", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchFacilityName")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchFacilityNameNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchFacilityName(int intFacilityID, int intTbl, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchFacilityName", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchFacilityName")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchFacilityNameAsync(int intFacilityID, int intTbl, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEmployee", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEmployee")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveEmployeeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveEmployee(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEmployee", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEmployee")]
        System.Threading.Tasks.Task<int> SaveEmployeeAsync(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/UpdateEmployee", ReplyAction="http://Wipro/HISNxG/IAdmin/UpdateEmployee")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/UpdateEmployeeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateEmployee(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/UpdateEmployee", ReplyAction="http://Wipro/HISNxG/IAdmin/UpdateEmployee")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalInformation", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalInformation")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetHospitalInformationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHospitalInformation(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalInformation", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalInformation")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalInformationAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalInformationTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalInformationTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetHospitalInformationIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHospitalInformationId(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalInformationTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalInformationTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalInformationIdAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetServiceInformation", ReplyAction="http://Wipro/HISNxG/IAdmin/GetServiceInformation")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetServiceInformationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetServiceInformation(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetServiceInformation", ReplyAction="http://Wipro/HISNxG/IAdmin/GetServiceInformation")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceInformationAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetBusinessUnits", ReplyAction="http://Wipro/HISNxG/IAdmin/GetBusinessUnits")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetBusinessUnitsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBusinessUnits(int min, int max, int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetBusinessUnits", ReplyAction="http://Wipro/HISNxG/IAdmin/GetBusinessUnits")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBusinessUnitsAsync(int min, int max, int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalDepts", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalDepts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetHospitalDeptsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHospitalDepts(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalDepts", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalDepts")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalDeptsAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalDeptsTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalDeptsTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetHospitalDeptsIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHospitalDeptsId(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetHospitalDeptsTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/GetHospitalDeptsTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalDeptsIdAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyDepartment", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyDepartment")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyDepartmentNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyDepartment(bool blnFlag, System.Data.DataSet dsDept, int intUserId, int intworkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyDepartment", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyDepartment")]
        System.Threading.Tasks.Task<bool> SaveModifyDepartmentAsync(bool blnFlag, System.Data.DataSet dsDept, int intUserId, int intworkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/UpdateDept", ReplyAction="http://Wipro/HISNxG/IAdmin/UpdateDept")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/UpdateDeptNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateDept(System.Data.DataSet dsDept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/UpdateDept", ReplyAction="http://Wipro/HISNxG/IAdmin/UpdateDept")]
        System.Threading.Tasks.Task<bool> UpdateDeptAsync(System.Data.DataSet dsDept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentdata", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDepartmentdata")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentdataNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchDepartmentdata(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentdata", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDepartmentdata")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDepartmentdataAsync(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentdataTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDepartmentdataTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentdataIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchDepartmentdataId(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDepartmentdataTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDepartmentdataTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDepartmentdataIdAsync(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveOrganization", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveOrganization")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveOrganizationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveOrganization(System.Data.DataSet dsOrg, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveOrganization", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveOrganization")]
        System.Threading.Tasks.Task<bool> SaveOrganizationAsync(System.Data.DataSet dsOrg, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisation", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveOrganization")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveSpecialisation(bool blnFlag, int intSpecialiseID, string strSpecialisation, string strSpeciality, string strSpecialisation2l, int intDptID, string strCode, int intFollowUpDays, int intFollowUpLimit, bool blnAllDoctors, int intUserID, int intWorkStationID, int intError, int NextTokanNoGapTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisation", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveOrganization")]
        System.Threading.Tasks.Task<bool> SaveSpecialisationAsync(bool blnFlag, int intSpecialiseID, string strSpecialisation, string strSpeciality, string strSpecialisation2l, int intDptID, string strCode, int intFollowUpDays, int intFollowUpLimit, bool blnAllDoctors, int intUserID, int intWorkStationID, int intError, int NextTokanNoGapTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveBedType", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveBedType")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveBedTypeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveBedType(System.Data.DataSet dsBedType, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveBedType", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveBedType")]
        System.Threading.Tasks.Task<bool> SaveBedTypeAsync(System.Data.DataSet dsBedType, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveProcedure", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveProcedure")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveProcedureNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveProcedure(System.Data.DataSet dsProc, bool mAddingStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveProcedure", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveProcedure")]
        System.Threading.Tasks.Task<bool> SaveProcedureAsync(System.Data.DataSet dsProc, bool mAddingStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchProcedures", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchProcedures")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchProceduresNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchProcedures(int ProcID, string TableId, int intUserID, int WorkStID, int intErrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchProcedures", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchProcedures")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchProceduresAsync(int ProcID, string TableId, int intUserID, int WorkStID, int intErrID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveFacilityMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFacilityMaster")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveFacilityMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveFacilityMaster(bool blnFlag, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveFacilityMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFacilityMaster")]
        System.Threading.Tasks.Task<bool> SaveFacilityMasterAsync(bool blnFlag, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchBedCategory", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchBedCategory")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchBedCategoryNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchBedCategory(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchBedCategory", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchBedCategory")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchBedCategoryAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyHRProfile", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyHRProfile")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyHRProfileNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyHRProfile(System.Data.DataSet saveDS, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyHRProfile", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyHRProfile")]
        System.Threading.Tasks.Task<bool> SaveModifyHRProfileAsync(System.Data.DataSet saveDS, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyHolidayMap", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyHolidayMap")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyHolidayMapNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyHolidayMap(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyHolidayMap", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyHolidayMap")]
        System.Threading.Tasks.Task<bool> SaveModifyHolidayMapAsync(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyPINMessage", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyPINMessage")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyPINMessageNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyPINMessage(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyPINMessage", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyPINMessage")]
        System.Threading.Tasks.Task<bool> SaveModifyPINMessageAsync(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchPinMessage", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchPinMessage")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchPinMessageNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchPinMessage(string strType, string strFilter, int intFeatureid, int intFunctionid, string strCallContext, int intLanguageID, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchPinMessage", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchPinMessage")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPinMessageAsync(string strType, string strFilter, int intFeatureid, int intFunctionid, string strCallContext, int intLanguageID, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyPharmacyCutOffs", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyPharmacyCutOffs")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyPharmacyCutOffsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyPharmacyCutOffs(System.Data.DataSet saveDS, int intWarID, int inWardCutOffID, int nCutOffs, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyPharmacyCutOffs", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyPharmacyCutOffs")]
        System.Threading.Tasks.Task<bool> SaveModifyPharmacyCutOffsAsync(System.Data.DataSet saveDS, int intWarID, int inWardCutOffID, int nCutOffs, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/DeleteCommonFunctions", ReplyAction="http://Wipro/HISNxG/IAdmin/DeleteCommonFunctions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/DeleteCommonFunctionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteCommonFunctions(int intIndex, int intValue, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/DeleteCommonFunctions", ReplyAction="http://Wipro/HISNxG/IAdmin/DeleteCommonFunctions")]
        System.Threading.Tasks.Task<bool> DeleteCommonFunctionsAsync(int intIndex, int intValue, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveMapDepartment", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveMapDepartment")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveMapDepartmentNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveMapDepartment(int intHospitalID, string strMapDepartment, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveMapDepartment", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveMapDepartment")]
        System.Threading.Tasks.Task<bool> SaveMapDepartmentAsync(int intHospitalID, string strMapDepartment, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/ModifyRoomDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/ModifyRoomDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/ModifyRoomDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ModifyRoomDetails(System.Data.DataSet objDS, int intUserid, int intWorkstationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/ModifyRoomDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/ModifyRoomDetails")]
        System.Threading.Tasks.Task<bool> ModifyRoomDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkstationid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveRoomDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveRoomDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveRoomDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveRoomDetails(System.Data.DataSet objDS, int intUserid, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveRoomDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveRoomDetails")]
        System.Threading.Tasks.Task<bool> SaveRoomDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetBedDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetBedDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetBedDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBedDetails(string strBed, int intBedId, string strTBL, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetBedDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetBedDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBedDetailsAsync(string strBed, int intBedId, string strTBL, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveBedDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveBedDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveBedDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveBedDetails(System.Data.DataSet objDS, int intUserid, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveBedDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveBedDetails")]
        System.Threading.Tasks.Task<bool> SaveBedDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetWardsRooms", ReplyAction="http://Wipro/HISNxG/IAdmin/GetWardsRooms")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetWardsRoomsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWardsRooms(int intUserId, int intWorkstationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetWardsRooms", ReplyAction="http://Wipro/HISNxG/IAdmin/GetWardsRooms")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWardsRoomsAsync(int intUserId, int intWorkstationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/ModifyBedDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/ModifyBedDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/ModifyBedDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ModifyBedDetails(System.Data.DataSet objDS, int intUserid, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/ModifyBedDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/ModifyBedDetails")]
        System.Threading.Tasks.Task<bool> ModifyBedDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAdminMasters", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAdminMasters")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAdminMastersNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAdminMasters(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAdminMasters", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAdminMasters")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAdminMastersAsync(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAdminMastersTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAdminMastersTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAdminMastersTagIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAdminMastersTagId(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAdminMastersTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAdminMastersTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAdminMastersTagIdAsync(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetWardsBed", ReplyAction="http://Wipro/HISNxG/IAdmin/GetWardsBed")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetWardsBedNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetWardsBed(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetWardsBed", ReplyAction="http://Wipro/HISNxG/IAdmin/GetWardsBed")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWardsBedAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetRoomDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetRoomDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetRoomDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRoomDetails(string strRoom, int intRoomID, string strTBL, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetRoomDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetRoomDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRoomDetailsAsync(string strRoom, int intRoomID, string strTBL, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchCountryCities", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCountryCities")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchCountryCitiesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchCountryCities(int intCountryID, int intStateID, int intCityID, int intUserID, int intworkStnID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchCountryCities", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchCountryCities")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCountryCitiesAsync(int intCountryID, int intStateID, int intCityID, int intUserID, int intworkStnID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetCityDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetCityDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetCityDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCityDetails(int iMin, int iMax, int iType, string sFilter, int UserId, int iWKS, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetCityDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetCityDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCityDetailsAsync(int iMin, int iMax, int iType, string sFilter, int UserId, int iWKS, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetBedTypes", ReplyAction="http://Wipro/HISNxG/IAdmin/GetBedTypes")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetBedTypesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBedTypes(int intType, string strFilter, int intUserID, int intWorkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetBedTypes", ReplyAction="http://Wipro/HISNxG/IAdmin/GetBedTypes")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBedTypesAsync(int intType, string strFilter, int intUserID, int intWorkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetRoomTypes", ReplyAction="http://Wipro/HISNxG/IAdmin/GetRoomTypes")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetRoomTypesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRoomTypes(string strType, string strFilter, int intUserID, int intWorkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetRoomTypes", ReplyAction="http://Wipro/HISNxG/IAdmin/GetRoomTypes")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRoomTypesAsync(string strType, string strFilter, int intUserID, int intWorkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSlotDuration", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSlotDuration")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveSlotDurationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveSlotDuration(int intSerItemID, int intServiceID, int intSlotBased, string strSlots, int intHositalid, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSlotDuration", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSlotDuration")]
        System.Threading.Tasks.Task<bool> SaveSlotDurationAsync(int intSerItemID, int intServiceID, int intSlotBased, string strSlots, int intHositalid, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetSlotDuration", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSlotDuration")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetSlotDurationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSlotDuration(int intServiceID, int intServiceItemID, int intTblID, int intHospitalID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetSlotDuration", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSlotDuration")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSlotDurationAsync(int intServiceID, int intServiceItemID, int intTblID, int intHospitalID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorSpecialisationMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorSpecialisationMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorSpecialisationMappingNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyDoctorSpecialisationMapping(int intEmpID, string strSpecialisationID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorSpecialisationMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorSpecialisationMapping")]
        System.Threading.Tasks.Task<bool> SaveModifyDoctorSpecialisationMappingAsync(int intEmpID, string strSpecialisationID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetDoctorSpecialisationMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetDoctorSpecialisationMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetDoctorSpecialisationMappingNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorSpecialisationMapping(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetDoctorSpecialisationMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetDoctorSpecialisationMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorSpecialisationMappingAsync(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorAssistanceMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorAssistanceMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorAssistanceMappingNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyDoctorAssistanceMapping(int intEmpID, string strAssiatance, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorAssistanceMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyDoctorAssistanceMapping")]
        System.Threading.Tasks.Task<bool> SaveModifyDoctorAssistanceMappingAsync(int intEmpID, string strAssiatance, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetGoalActivitiesMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetGoalActivitiesMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetGoalActivitiesMappingNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetGoalActivitiesMapping(int intGoalID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetGoalActivitiesMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetGoalActivitiesMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetGoalActivitiesMappingAsync(int intGoalID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyGoalActivitiesMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyGoalActivitiesMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyGoalActivitiesMappingNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyGoalActivitiesMapping(int intGoalID, string strActivities, int intUserID, int intworkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyGoalActivitiesMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyGoalActivitiesMapping")]
        System.Threading.Tasks.Task<bool> SaveModifyGoalActivitiesMappingAsync(int intGoalID, string strActivities, int intUserID, int intworkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetProblemgroupProblemsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetProblemgroupProblemsMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetProblemgroupProblemsMappingNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProblemgroupProblemsMapping(int intProblemGroupID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetProblemgroupProblemsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetProblemgroupProblemsMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProblemgroupProblemsMappingAsync(int intProblemGroupID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyProblemgroupProblemsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyProblemgroupProblemsMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyProblemgroupProblemsMappingNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyProblemgroupProblemsMapping(int intProblemGroupID, string strProblems, int intUserID, int intworkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyProblemgroupProblemsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyProblemgroupProblemsMapping")]
        System.Threading.Tasks.Task<bool> SaveModifyProblemgroupProblemsMappingAsync(int intProblemGroupID, string strProblems, int intUserID, int intworkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetDoctorAssistanceMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetDoctorAssistanceMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetDoctorAssistanceMappingNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorAssistanceMapping(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetDoctorAssistanceMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetDoctorAssistanceMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorAssistanceMappingAsync(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetAllWards", ReplyAction="http://Wipro/HISNxG/IAdmin/GetAllWards")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetAllWardsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllWards(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetAllWards", ReplyAction="http://Wipro/HISNxG/IAdmin/GetAllWards")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllWardsAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchMappedItemsList", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchMappedItemsList")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchMappedItemsListNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchMappedItemsList(int TypeID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchMappedItemsList", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchMappedItemsList")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchMappedItemsListAsync(int TypeID, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchHospitalMappedItemsList", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchHospitalMappedItemsList")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchHospitalMappedItemsListNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchHospitalMappedItemsList(int TypeID, int intUserID, int intWorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchHospitalMappedItemsList", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchHospitalMappedItemsList")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchHospitalMappedItemsListAsync(int TypeID, int intUserID, int intWorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchMappedItems", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchMappedItems")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchMappedItemsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchMappedItems(int TypeID, string strFilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchMappedItems", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchMappedItems")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchMappedItemsAsync(int TypeID, string strFilter, int intUserID, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveMappedItems", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveMappedItems")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveMappedItemsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveMappedItems(string ParamValue, string IDValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveMappedItems", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveMappedItems")]
        System.Threading.Tasks.Task<int> SaveMappedItemsAsync(string ParamValue, string IDValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveHospitalMappedItems", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveHospitalMappedItems")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveHospitalMappedItemsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveHospitalMappedItems(string ParamValue, string IDValues, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveHospitalMappedItems", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveHospitalMappedItems")]
        System.Threading.Tasks.Task<int> SaveHospitalMappedItemsAsync(string ParamValue, string IDValues, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/DeleteProcedures", ReplyAction="http://Wipro/HISNxG/IAdmin/DeleteProcedures")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/DeleteProceduresNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteProcedures(int intProcedureID, int intServiceID, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/DeleteProcedures", ReplyAction="http://Wipro/HISNxG/IAdmin/DeleteProcedures")]
        System.Threading.Tasks.Task<bool> DeleteProceduresAsync(int intProcedureID, int intServiceID, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleRules", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleRules")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchTitleRules(int intType, string strFilter, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleRules", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleRules")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleRulesAsync(int intType, string strFilter, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleRulesTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchTitleRulesId(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleRulesTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleRulesIdAsync(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesCulture", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleRulesCulture")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesCultureNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchTitleRulesCulture(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleRulesCulture", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleRulesCulture")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleRulesCultureAsync(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleDesription", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleDesription")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchTitleDesriptionNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchTitleDesription(int intTitleID, int intTbl, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleDesription", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleDesription")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleDesriptionAsync(int intTitleID, int intTbl, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveTitleDescription", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveTitleDescription")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveTitleDescriptionNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveTitleDescription(System.Data.DataSet dsSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveTitleDescription", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveTitleDescription")]
        System.Threading.Tasks.Task<bool> SaveTitleDescriptionAsync(System.Data.DataSet dsSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleMasterDesription", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleMasterDesription")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchTitleMasterDesriptionNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchTitleMasterDesription(int intTitleID, string strFilter, int intUserID, int intWorkStationID, int intError, int intHospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchTitleMasterDesription", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchTitleMasterDesription")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleMasterDesriptionAsync(int intTitleID, string strFilter, int intUserID, int intWorkStationID, int intError, int intHospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/DeleteBeds", ReplyAction="http://Wipro/HISNxG/IAdmin/DeleteBeds")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/DeleteBedsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteBeds(int intValue, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/DeleteBeds", ReplyAction="http://Wipro/HISNxG/IAdmin/DeleteBeds")]
        System.Threading.Tasks.Task<bool> DeleteBedsAsync(int intValue, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveConsultationTypeMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveConsultationTypeMaster")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveConsultationTypeMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long SaveConsultationTypeMaster(System.Data.DataSet dsConsTypeMaster, byte IsInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveConsultationTypeMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveConsultationTypeMaster")]
        System.Threading.Tasks.Task<long> SaveConsultationTypeMasterAsync(System.Data.DataSet dsConsTypeMaster, byte IsInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetTitles", ReplyAction="http://Wipro/HISNxG/IAdmin/GetTitles")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetTitlesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTitles(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetTitles", ReplyAction="http://Wipro/HISNxG/IAdmin/GetTitles")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTitlesAsync(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetTitlesTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/GetTitlesTagId")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetTitlesIdNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTitlesId(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetTitlesTagId", ReplyAction="http://Wipro/HISNxG/IAdmin/GetTitlesTagId")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTitlesIdAsync(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveReligionWithGroup", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveReligionWithGroup")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveReligionWithGroupNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveReligionWithGroup(System.Data.DataSet dsSave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveReligionWithGroup", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveReligionWithGroup")]
        System.Threading.Tasks.Task<bool> SaveReligionWithGroupAsync(System.Data.DataSet dsSave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/BlockReligion_new", ReplyAction="http://Wipro/HISNxG/IAdmin/BlockReligion_new")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/BlockReligion_newNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool BlockReligion_new(System.Data.DataSet dsSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/BlockReligion_new", ReplyAction="http://Wipro/HISNxG/IAdmin/BlockReligion_new")]
        System.Threading.Tasks.Task<bool> BlockReligion_newAsync(System.Data.DataSet dsSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetNotificationType", ReplyAction="http://Wipro/HISNxG/IAdmin/GetNotificationType")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetNotificationTypeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNotificationType(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetNotificationType", ReplyAction="http://Wipro/HISNxG/IAdmin/GetNotificationType")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNotificationTypeAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSubscriber", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSubscriber")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveSubscriberNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveSubscriber(System.Data.DataSet dsSub, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSubscriber", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSubscriber")]
        System.Threading.Tasks.Task<bool> SaveSubscriberAsync(System.Data.DataSet dsSub, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetSubscriber", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSubscriber")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetSubscriberNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriber(int ConfigID, string Tbl, int UserID, int WorkStationID, int Error, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetSubscriber", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSubscriber")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSubscriberAsync(int ConfigID, string Tbl, int UserID, int WorkStationID, int Error, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchReportGroupData", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchReportGroupData")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchReportGroupDataNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchReportGroupData(int intReportGroupID, string strTableId, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchReportGroupData", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchReportGroupData")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchReportGroupDataAsync(int intReportGroupID, string strTableId, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyReportGroup", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyReportGroup")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifyReportGroupNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifyReportGroup(System.Data.DataSet dsReportGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifyReportGroup", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifyReportGroup")]
        System.Threading.Tasks.Task<bool> SaveModifyReportGroupAsync(System.Data.DataSet dsReportGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/BlockReportGroup", ReplyAction="http://Wipro/HISNxG/IAdmin/BlockReportGroup")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/BlockReportGroupNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool BlockReportGroup(int intGroupID, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/BlockReportGroup", ReplyAction="http://Wipro/HISNxG/IAdmin/BlockReportGroup")]
        System.Threading.Tasks.Task<bool> BlockReportGroupAsync(int intGroupID, int intRevert, int intUserId, int intWorstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetCompanyDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetCompanyDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetCompanyDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCompanyDetails(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetCompanyDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetCompanyDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetCompanyDetailsCul", ReplyAction="http://Wipro/HISNxG/IAdmin/GetCompanyDetailsCul")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetCompanyDetailsCulNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCompanyDetailsCul(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetCompanyDetailsCul", ReplyAction="http://Wipro/HISNxG/IAdmin/GetCompanyDetailsCul")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsCulAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveCompanyRequisition", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCompanyRequisition")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveCompanyRequisitionNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveCompanyRequisition(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveCompanyRequisition", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCompanyRequisition")]
        System.Threading.Tasks.Task<bool> SaveCompanyRequisitionAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/CommonDelete", ReplyAction="http://Wipro/HISNxG/IAdmin/CommonDelete")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/CommonDeleteNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CommonDelete(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/CommonDelete", ReplyAction="http://Wipro/HISNxG/IAdmin/CommonDelete")]
        System.Threading.Tasks.Task<bool> CommonDeleteAsync(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetAdminMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/GetAdminMaster")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetAdminMasterNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAdminMaster(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetAdminMaster", ReplyAction="http://Wipro/HISNxG/IAdmin/GetAdminMaster")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetAdminMasterCul", ReplyAction="http://Wipro/HISNxG/IAdmin/GetAdminMasterCul")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetAdminMasterCulNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAdminMasterCul(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetAdminMasterCul", ReplyAction="http://Wipro/HISNxG/IAdmin/GetAdminMasterCul")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterCulAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG/ServiceContract1/GetSpecializationConfig", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSpecializationConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetSpecializationConfigNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSpecializationConfig(int intType, int intResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NxG/ServiceContract1/GetSpecializationConfig", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSpecializationConfigResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSpecializationConfigAsync(int intType, int intResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchUserPermissions", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchUserPermissions")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchUserPermissionsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchUserPermissions(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchUserPermissions", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchUserPermissions")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchUserPermissionsAsync(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveCompanyHospitalRequisition", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCompanyHospitalRequisitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveCompanyHospitalRequisitionNextGenCustomExceptionFa" +
            "ult", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveCompanyHospitalRequisition(bool blnModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveCompanyHospitalRequisition", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveCompanyHospitalRequisitionResponse")]
        System.Threading.Tasks.Task<bool> SaveCompanyHospitalRequisitionAsync(bool blnModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetFacilitySchedulerCount", ReplyAction="http://Wipro/HISNxG/IAdmin/GetFacilitySchedulerCount")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetFacilitySchedulerCountNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFacilitySchedulerCount(int facilityId, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetFacilitySchedulerCount", ReplyAction="http://Wipro/HISNxG/IAdmin/GetFacilitySchedulerCount")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFacilitySchedulerCountAsync(int facilityId, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationDischargefollowup", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisation")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveDischareFollowUpSpecialisation(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationDischargefollowup", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisation")]
        System.Threading.Tasks.Task<bool> SaveDischareFollowUpSpecialisationAsync(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetFacilityItemStockCount", ReplyAction="http://Wipro/HISNxG/IAdmin/GetFacilityItemStockCount")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetFacilityItemStockCountNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFacilityItemStockCount(string filter, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetFacilityItemStockCount", ReplyAction="http://Wipro/HISNxG/IAdmin/GetFacilityItemStockCount")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetFacilityItemStockCountAsync(string filter, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifySurgeryConsumableMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifySurgeryConsumableMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveModifySurgeryConsumableMappingNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveModifySurgeryConsumableMapping(int intProcID, string strItemsID, int intHospID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveModifySurgeryConsumableMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveModifySurgeryConsumableMapping")]
        System.Threading.Tasks.Task<bool> SaveModifySurgeryConsumableMappingAsync(int intProcID, string strItemsID, int intHospID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetSurgeryConsumablesMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSurgeryConsumablesMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetSurgeryConsumablesMappingNextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSurgeryConsumablesMapping(int intProcID, int intHospID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetSurgeryConsumablesMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetSurgeryConsumablesMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSurgeryConsumablesMappingAsync(int intProcID, int intHospID, int intTblID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveDrugOrderMap", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDrugOrderMap")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDrugOrderMapNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveDrugOrderMap(int PharmaceyID, int wardID, System.DateTime Fromtime, System.DateTime Totime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveDrugOrderMap", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDrugOrderMap")]
        System.Threading.Tasks.Task<bool> SaveDrugOrderMapAsync(int PharmaceyID, int wardID, System.DateTime Fromtime, System.DateTime Totime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDrugOrderMap", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDrugOrderMap")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchDrugOrderMapNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchDrugOrderMap(int wardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDrugOrderMap", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDrugOrderMap")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDrugOrderMapAsync(int wardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDoctorMarkUpPercent")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDoctorMarkUpPercentNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveDoctorMarkUpPercent(int DoctorID, int SpecialiseID, decimal MarkUpPercent, System.DateTime EffectiveDate, int HospitalID, int Status, int Blocked, int intUserID, int RoutId, int intWorkStationID, int intError, int FeatureID, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDoctorMarkUpPercent")]
        System.Threading.Tasks.Task<bool> SaveDoctorMarkUpPercentAsync(int DoctorID, int SpecialiseID, decimal MarkUpPercent, System.DateTime EffectiveDate, int HospitalID, int Status, int Blocked, int intUserID, int RoutId, int intWorkStationID, int intError, int FeatureID, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDoctorMarkUpPercent")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchDoctorMarkUpPercentNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchDoctorMarkUpPercent(int DoctorID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchDoctorMarkUpPercent")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchDoctorMarkUpPercentAsync(int DoctorID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAuditDetailsDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAuditDetailsDoctorMarkUpPercent")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAuditDetailsDoctorMarkUpPercentNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAuditDetailsDoctorMarkUpPercent(int AuditID, int DoctorID, int SpecialiseID, int intUserID, int intWorkStationID, int intError, byte LanguageID, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAuditDetailsDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAuditDetailsDoctorMarkUpPercent")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAuditDetailsDoctorMarkUpPercentAsync(int AuditID, int DoctorID, int SpecialiseID, int intUserID, int intWorkStationID, int intError, byte LanguageID, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAuditDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAuditDoctorMarkUpPercent")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAuditDoctorMarkUpPercentNextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAuditDoctorMarkUpPercent(int DoctorID, int intUserID, int intWorkStationID, int intError, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAuditDoctorMarkUpPercent", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAuditDoctorMarkUpPercent")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAuditDoctorMarkUpPercentAsync(int DoctorID, int intUserID, int intWorkStationID, int intError, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchfromAdvLangID", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchfromAdvLangIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchfromAdvLangIDNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchfromAdvLangID(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, string strFeatureID, string strFunctionID, string strCallContext, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchfromAdvLangID", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchfromAdvLangIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchfromAdvLangIDAsync(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, string strFeatureID, string strFunctionID, string strCallContext, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEmployeeMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEmployeeMODA")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveEmployeeMODANextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveEmployeeMODA(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEmployeeMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEmployeeMODA")]
        System.Threading.Tasks.Task<int> SaveEmployeeMODAAsync(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveClinicCode", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveClinicCode")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveClinicCodeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveClinicCode(int EmpClinicCodeID, int intEmpId, string strCliniccode, string strClinicName, string strClinicName2L, string strDoctorCode, int intSpecialiseID, int intHospitalID, int intBlocked, int intUserId, int intWorkStationId, int intError, int IsSubClinic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveClinicCode", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveClinicCode")]
        System.Threading.Tasks.Task<bool> SaveClinicCodeAsync(int EmpClinicCodeID, int intEmpId, string strCliniccode, string strClinicName, string strClinicName2L, string strDoctorCode, int intSpecialiseID, int intHospitalID, int intBlocked, int intUserId, int intWorkStationId, int intError, int IsSubClinic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSubSpecialisation", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSubSpecialisation")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveSubSpecialisationNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveSubSpecialisation(System.Data.DataTable dsSubSpecialisation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSubSpecialisation", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSubSpecialisation")]
        System.Threading.Tasks.Task<bool> SaveSubSpecialisationAsync(System.Data.DataTable dsSubSpecialisation);
        
        [System.ServiceModel.OperationContractAttribute(Action="Wipro.NxG.Scheduler.WSGetDoctorsClinicDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetDoctorsClinicDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetDoctorsClinicDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDoctorsClinicDetails(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="Wipro.NxG.Scheduler.WSGetDoctorsClinicDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetDoctorsClinicDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorsClinicDetailsAsync(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="Wipro.NxG.Scheduler.WSFetchSpecilizationofDoctor", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSpecilizationofDoctorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchSpecilizationofDoctorNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchSpecilizationofDoctor(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="Wipro.NxG.Scheduler.WSFetchSpecilizationofDoctor", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchSpecilizationofDoctorResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchSpecilizationofDoctorAsync(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/UpdateEmployeeMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/UpdateEmployeeMODA")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/UpdateEmployeeMODANextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateEmployeeMODA(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/UpdateEmployeeMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/UpdateEmployeeMODA")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeMODAAsync(System.Data.DataSet dtEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationDischargefollowupMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationMODA")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationMODANextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveDischareFollowUpSpecialisationMODA(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    int Hospitalid, 
                    int GenderId, 
                    bool blnSameDayFollowUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSpecialisationDischargefollowupMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDischareFollowUpSpecialisationMODA")]
        System.Threading.Tasks.Task<bool> SaveDischareFollowUpSpecialisationMODAAsync(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    int Hospitalid, 
                    int GenderId, 
                    bool blnSameDayFollowUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/IsEmployeeCodeExistsMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/IsEmployeeCodeExistsMODA")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/IsEmployeeCodeExistsMODANextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsEmployeeCodeExistsMODA(string empCode, string empNumber, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/IsEmployeeCodeExistsMODA", ReplyAction="http://Wipro/HISNxG/IAdmin/IsEmployeeCodeExistsMODA")]
        System.Threading.Tasks.Task<bool> IsEmployeeCodeExistsMODAAsync(string empCode, string empNumber, int intWorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetNotificationDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetNotificationDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetNotificationDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNotificationDetails(int intNotificationID, string strTableID, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetNotificationDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetNotificationDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNotificationDetailsAsync(int intNotificationID, string strTableID, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEventMessageTemplates", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEventMessageTemplates")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveEventMessageTemplatesNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveEventMessageTemplates(string strEventMessageTemplete, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEventMessageTemplates", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEventMessageTemplates")]
        System.Threading.Tasks.Task<bool> SaveEventMessageTemplatesAsync(string strEventMessageTemplete, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetMessageTemplate", ReplyAction="http://Wipro/HISNxG/IAdmin/GetMessageTemplate")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetMessageTemplateNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMessageTemplate(int intNotificationID, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetMessageTemplate", ReplyAction="http://Wipro/HISNxG/IAdmin/GetMessageTemplate")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMessageTemplateAsync(int intNotificationID, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetNotificationTypeSMS", ReplyAction="http://Wipro/HISNxG/IAdmin/GetNotificationTypeSMS")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetNotificationTypeSMSNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNotificationTypeSMS(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetNotificationTypeSMS", ReplyAction="http://Wipro/HISNxG/IAdmin/GetNotificationTypeSMS")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNotificationTypeSMSAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSsrsReportConfig", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSsrsReportConfig")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveSsrsReportConfigNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveSsrsReportConfig(string ReportName, string ReportPath, string moduleIds, int UserID, int reportType, int intWorkStationID, int intError, int ReportID, int FeatureID, int buttonclick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveSsrsReportConfig", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveSsrsReportConfig")]
        System.Threading.Tasks.Task<bool> SaveSsrsReportConfigAsync(string ReportName, string ReportPath, string moduleIds, int UserID, int reportType, int intWorkStationID, int intError, int ReportID, int FeatureID, int buttonclick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEPosterIPAddressMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEPosterIPAddressMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveEPosterIPAddressMappingNextGenCustomExceptionFault" +
            "", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveEPosterIPAddressMapping(int EPosterIPAddressID, System.Data.DataSet objDSDoctors, int UserID, int WorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveEPosterIPAddressMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveEPosterIPAddressMapping")]
        System.Threading.Tasks.Task<bool> SaveEPosterIPAddressMappingAsync(int EPosterIPAddressID, System.Data.DataSet objDSDoctors, int UserID, int WorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetEPosterIPAddressMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetEPosterIPAddressMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetEPosterIPAddressMappingNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEPosterIPAddressMapping(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetEPosterIPAddressMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/GetEPosterIPAddressMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEPosterIPAddressMappingAsync(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetEPosterDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetEPosterDetails")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/GetEPosterDetailsNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEPosterDetails(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/GetEPosterDetails", ReplyAction="http://Wipro/HISNxG/IAdmin/GetEPosterDetails")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEPosterDetailsAsync(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/MovingAppointmentsFromDoctorToAnotherDoctor", ReplyAction="http://Wipro/HISNxG/IAdmin/MovingAppointmentsFromDoctorToAnotherDoctor")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/MovingAppointmentsFromDoctorToAnotherDoctorNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string MovingAppointmentsFromDoctorToAnotherDoctor(int SourceDocId, int DestDocId, string DestSpecialisation, string SourceClinicCode, string DestClinicCode, string DestDocCode, bool isSameClinic, int UserID, int WorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/MovingAppointmentsFromDoctorToAnotherDoctor", ReplyAction="http://Wipro/HISNxG/IAdmin/MovingAppointmentsFromDoctorToAnotherDoctor")]
        System.Threading.Tasks.Task<string> MovingAppointmentsFromDoctorToAnotherDoctorAsync(int SourceDocId, int DestDocId, string DestSpecialisation, string SourceClinicCode, string DestClinicCode, string DestDocCode, bool isSameClinic, int UserID, int WorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveAlertsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveAlertsMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveAlertsMappingNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SaveAlertsMapping(int intAlertId, int ModuleId, System.Data.DataSet dsAlertsMapping, int intUserId, int intWorkStid, int intHospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/SaveAlertsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveAlertsMapping")]
        System.Threading.Tasks.Task<bool> SaveAlertsMappingAsync(int intAlertId, int ModuleId, System.Data.DataSet dsAlertsMapping, int intUserId, int intWorkStid, int intHospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAlertsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAlertsMapping")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAlertsMappingNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAlertsMapping(int intAlertId, int ModuleId, int intUserId, int intWorkStid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAlertsMapping", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAlertsMapping")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAlertsMappingAsync(int intAlertId, int ModuleId, int intUserId, int intWorkStid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAlertsMastered", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAlertsMastered")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchAlertsMasteredNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FetchAlertsMastered(int intUserId, int intWorkStid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro/HISNxG/IAdmin/FetchAlertsMastered", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchAlertsMastered")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAlertsMasteredAsync(int intUserId, int intWorkStid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SvaeFacilityServiceAndSpecialization", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFacilityServiceAndSpecializationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveFacilityServiceAndSpecializationNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveFacilityServiceAndSpecialization(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SvaeFacilityServiceAndSpecialization", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveFacilityServiceAndSpecializationResponse")]
        System.Threading.Tasks.Task<int> SaveFacilityServiceAndSpecializationAsync(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchFacilityServiceAndSpecialization", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchFacilityServiceAndSpecializationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/FetchFacilityServiceAndSpecializationNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable FetchFacilityServiceAndSpecialization(int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID, int tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/FetchFacilityServiceAndSpecialization", ReplyAction="http://Wipro/HISNxG/IAdmin/FetchFacilityServiceAndSpecializationResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchFacilityServiceAndSpecializationAsync(int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID, int tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveDoctorsCutOffTime", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDoctorsCutOffTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.AdminServiceClient.NextGenCustomException), Action="http://Wipro/HISNxG/IAdmin/SaveDoctorsCutOffTimeNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveDoctorsCutOffTime(System.Data.DataTable dtSaveDocs, int intUserID, int intWorkStationID, string Operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/IAdmin/SaveDoctorsCutOffTime", ReplyAction="http://Wipro/HISNxG/IAdmin/SaveDoctorsCutOffTimeResponse")]
        System.Threading.Tasks.Task<int> SaveDoctorsCutOffTimeAsync(System.Data.DataTable dtSaveDocs, int intUserID, int intWorkStationID, string Operation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminChannel : Reports.AdminServiceClient.IAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminClient : System.ServiceModel.ClientBase<Reports.AdminServiceClient.IAdmin>, Reports.AdminServiceClient.IAdmin {
        
        public AdminClient() {
        }
        
        public AdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable FetchSavedDocsCutOffTime(int DocId, int SpecializationId, int intUserId, int intWorkStationId) {
            return base.Channel.FetchSavedDocsCutOffTime(DocId, SpecializationId, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchSavedDocsCutOffTimeAsync(int DocId, int SpecializationId, int intUserId, int intWorkStationId) {
            return base.Channel.FetchSavedDocsCutOffTimeAsync(DocId, SpecializationId, intUserId, intWorkStationId);
        }
        
        public int SaveQuestions(int FeedBackQuestionId, string EQuestion, string AQuestion) {
            return base.Channel.SaveQuestions(FeedBackQuestionId, EQuestion, AQuestion);
        }
        
        public System.Threading.Tasks.Task<int> SaveQuestionsAsync(int FeedBackQuestionId, string EQuestion, string AQuestion) {
            return base.Channel.SaveQuestionsAsync(FeedBackQuestionId, EQuestion, AQuestion);
        }
        
        public System.Data.DataTable FetchSections(int PatType) {
            return base.Channel.FetchSections(PatType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchSectionsAsync(int PatType) {
            return base.Channel.FetchSectionsAsync(PatType);
        }
        
        public System.Data.DataTable FetchQuestions(int intServiceID, int HospitalId) {
            return base.Channel.FetchQuestions(intServiceID, HospitalId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchQuestionsAsync(int intServiceID, int HospitalId) {
            return base.Channel.FetchQuestionsAsync(intServiceID, HospitalId);
        }
        
        public System.Data.DataTable LoadAllSections() {
            return base.Channel.LoadAllSections();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LoadAllSectionsAsync() {
            return base.Channel.LoadAllSectionsAsync();
        }
        
        public int SaveSectonQuestions(int SectionId, string Questions, int userId, int WorkStationId) {
            return base.Channel.SaveSectonQuestions(SectionId, Questions, userId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveSectonQuestionsAsync(int SectionId, string Questions, int userId, int WorkStationId) {
            return base.Channel.SaveSectonQuestionsAsync(SectionId, Questions, userId, WorkStationId);
        }
        
        public int SaveHospitalSectonQuestions(int SectionId, string Questions, int HospitalID, int Patienttype, int UserId, int WorkStationId) {
            return base.Channel.SaveHospitalSectonQuestions(SectionId, Questions, HospitalID, Patienttype, UserId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveHospitalSectonQuestionsAsync(int SectionId, string Questions, int HospitalID, int Patienttype, int UserId, int WorkStationId) {
            return base.Channel.SaveHospitalSectonQuestionsAsync(SectionId, Questions, HospitalID, Patienttype, UserId, WorkStationId);
        }
        
        public int SavePolicySectionFileMapping(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SavePolicySectionFileMapping(dtFinal, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<int> SavePolicySectionFileMappingAsync(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SavePolicySectionFileMappingAsync(dtFinal, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Data.DataTable FetchPolicySectionFileMapping(int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.FetchPolicySectionFileMapping(PolicySectionID, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchPolicySectionFileMappingAsync(int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.FetchPolicySectionFileMappingAsync(PolicySectionID, intUserId, intWorkStationId, intHospitalID);
        }
        
        public int SaveEmployeePolicySectionFileMapping(int EmpId, System.Data.DataTable dtFinal, System.Data.DataTable dtSections, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SaveEmployeePolicySectionFileMapping(EmpId, dtFinal, dtSections, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<int> SaveEmployeePolicySectionFileMappingAsync(int EmpId, System.Data.DataTable dtFinal, System.Data.DataTable dtSections, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SaveEmployeePolicySectionFileMappingAsync(EmpId, dtFinal, dtSections, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Data.DataTable FetchEmployeePolicySectionFileMapping(int EmpId, int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID, string Tbl) {
            return base.Channel.FetchEmployeePolicySectionFileMapping(EmpId, PolicySectionID, intUserId, intWorkStationId, intHospitalID, Tbl);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchEmployeePolicySectionFileMappingAsync(int EmpId, int PolicySectionID, int intUserId, int intWorkStationId, int intHospitalID, string Tbl) {
            return base.Channel.FetchEmployeePolicySectionFileMappingAsync(EmpId, PolicySectionID, intUserId, intWorkStationId, intHospitalID, Tbl);
        }
        
        public int SaveCopyPolicySectionFileMapping(int EmpId, int hospDeptId, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SaveCopyPolicySectionFileMapping(EmpId, hospDeptId, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<int> SaveCopyPolicySectionFileMappingAsync(int EmpId, int hospDeptId, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SaveCopyPolicySectionFileMappingAsync(EmpId, hospDeptId, intUserId, intWorkStationId, intHospitalID);
        }
        
        public int SaveDepartmentwiseCheckList(System.Data.DataTable dtCheckList, int HospDeptId, int UserId, int WorkStation, int HospitalId) {
            return base.Channel.SaveDepartmentwiseCheckList(dtCheckList, HospDeptId, UserId, WorkStation, HospitalId);
        }
        
        public System.Threading.Tasks.Task<int> SaveDepartmentwiseCheckListAsync(System.Data.DataTable dtCheckList, int HospDeptId, int UserId, int WorkStation, int HospitalId) {
            return base.Channel.SaveDepartmentwiseCheckListAsync(dtCheckList, HospDeptId, UserId, WorkStation, HospitalId);
        }
        
        public System.Data.DataSet FetchDepartmentwiseCheckList(int HospDeptId, int UserID, int WorkStationId, int HospitalId) {
            return base.Channel.FetchDepartmentwiseCheckList(HospDeptId, UserID, WorkStationId, HospitalId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDepartmentwiseCheckListAsync(int HospDeptId, int UserID, int WorkStationId, int HospitalId) {
            return base.Channel.FetchDepartmentwiseCheckListAsync(HospDeptId, UserID, WorkStationId, HospitalId);
        }
        
        public int SavePolicySectionMaster(int SectionId, string SectionCode, string SectionName, int ParentSectionId, int RootSectionId, int UserId, int WorkStation, int HospitalId) {
            return base.Channel.SavePolicySectionMaster(SectionId, SectionCode, SectionName, ParentSectionId, RootSectionId, UserId, WorkStation, HospitalId);
        }
        
        public System.Threading.Tasks.Task<int> SavePolicySectionMasterAsync(int SectionId, string SectionCode, string SectionName, int ParentSectionId, int RootSectionId, int UserId, int WorkStation, int HospitalId) {
            return base.Channel.SavePolicySectionMasterAsync(SectionId, SectionCode, SectionName, ParentSectionId, RootSectionId, UserId, WorkStation, HospitalId);
        }
        
        public int SaveFeedBackServices(int FeedBackServiceId, string ServiceName, string serviceName2L, int Patienttype, int UserId, int WorkStationId) {
            return base.Channel.SaveFeedBackServices(FeedBackServiceId, ServiceName, serviceName2L, Patienttype, UserId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveFeedBackServicesAsync(int FeedBackServiceId, string ServiceName, string serviceName2L, int Patienttype, int UserId, int WorkStationId) {
            return base.Channel.SaveFeedBackServicesAsync(FeedBackServiceId, ServiceName, serviceName2L, Patienttype, UserId, WorkStationId);
        }
        
        public System.Data.DataTable FetchFeedbackSectionServiceMap(int intServiceID) {
            return base.Channel.FetchFeedbackSectionServiceMap(intServiceID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchFeedbackSectionServiceMapAsync(int intServiceID) {
            return base.Channel.FetchFeedbackSectionServiceMapAsync(intServiceID);
        }
        
        public int SaveFeedbackSectionServiceMap(int SectionId, int HisServiceId, string Specialisations, int userId, int WorkStationId) {
            return base.Channel.SaveFeedbackSectionServiceMap(SectionId, HisServiceId, Specialisations, userId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveFeedbackSectionServiceMapAsync(int SectionId, int HisServiceId, string Specialisations, int userId, int WorkStationId) {
            return base.Channel.SaveFeedbackSectionServiceMapAsync(SectionId, HisServiceId, Specialisations, userId, WorkStationId);
        }
        
        public System.Data.DataSet FetchPOSMappingDetails(int HospitalId, int MapWorkStationId, string WorkStationIP, int UserId, int WorkStationId) {
            return base.Channel.FetchPOSMappingDetails(HospitalId, MapWorkStationId, WorkStationIP, UserId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPOSMappingDetailsAsync(int HospitalId, int MapWorkStationId, string WorkStationIP, int UserId, int WorkStationId) {
            return base.Channel.FetchPOSMappingDetailsAsync(HospitalId, MapWorkStationId, WorkStationIP, UserId, WorkStationId);
        }
        
        public int SavePOSMapping(int HospitalId, int MappingWorkstationid, int facilityId, string WorkStationIp, string POSIP, string POSName, string PrinterIP, bool Blocked, int UserId, int WorkStationId) {
            return base.Channel.SavePOSMapping(HospitalId, MappingWorkstationid, facilityId, WorkStationIp, POSIP, POSName, PrinterIP, Blocked, UserId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<int> SavePOSMappingAsync(int HospitalId, int MappingWorkstationid, int facilityId, string WorkStationIp, string POSIP, string POSName, string PrinterIP, bool Blocked, int UserId, int WorkStationId) {
            return base.Channel.SavePOSMappingAsync(HospitalId, MappingWorkstationid, facilityId, WorkStationIp, POSIP, POSName, PrinterIP, Blocked, UserId, WorkStationId);
        }
        
        public System.Data.DataSet FetchIVItemConfiguration(int ItemID, int UserId, int WorkStationId) {
            return base.Channel.FetchIVItemConfiguration(ItemID, UserId, WorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchIVItemConfigurationAsync(int ItemID, int UserId, int WorkStationId) {
            return base.Channel.FetchIVItemConfigurationAsync(ItemID, UserId, WorkStationId);
        }
        
        public int SaveIVItemConfiguration(
                    int ItemId, 
                    int DoseID, 
                    decimal Dose, 
                    decimal PheriperalAdult, 
                    decimal PheriperalChild, 
                    decimal PheriperalNeo, 
                    decimal CentralValueAdult, 
                    decimal CentralValueChild, 
                    decimal CentralValueNeonatal, 
                    decimal MinDose, 
                    decimal MaxDose, 
                    decimal DrugFixedVolumn, 
                    decimal DrugConcentrationValue, 
                    int BLOCKED, 
                    int UserId, 
                    int WorkStationId, 
                    int Error, 
                    bool BaseDoseWiseCalculation) {
            return base.Channel.SaveIVItemConfiguration(ItemId, DoseID, Dose, PheriperalAdult, PheriperalChild, PheriperalNeo, CentralValueAdult, CentralValueChild, CentralValueNeonatal, MinDose, MaxDose, DrugFixedVolumn, DrugConcentrationValue, BLOCKED, UserId, WorkStationId, Error, BaseDoseWiseCalculation);
        }
        
        public System.Threading.Tasks.Task<int> SaveIVItemConfigurationAsync(
                    int ItemId, 
                    int DoseID, 
                    decimal Dose, 
                    decimal PheriperalAdult, 
                    decimal PheriperalChild, 
                    decimal PheriperalNeo, 
                    decimal CentralValueAdult, 
                    decimal CentralValueChild, 
                    decimal CentralValueNeonatal, 
                    decimal MinDose, 
                    decimal MaxDose, 
                    decimal DrugFixedVolumn, 
                    decimal DrugConcentrationValue, 
                    int BLOCKED, 
                    int UserId, 
                    int WorkStationId, 
                    int Error, 
                    bool BaseDoseWiseCalculation) {
            return base.Channel.SaveIVItemConfigurationAsync(ItemId, DoseID, Dose, PheriperalAdult, PheriperalChild, PheriperalNeo, CentralValueAdult, CentralValueChild, CentralValueNeonatal, MinDose, MaxDose, DrugFixedVolumn, DrugConcentrationValue, BLOCKED, UserId, WorkStationId, Error, BaseDoseWiseCalculation);
        }
        
        public System.Data.DataSet FetchIVFluidItems(int Type) {
            return base.Channel.FetchIVFluidItems(Type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchIVFluidItemsAsync(int Type) {
            return base.Channel.FetchIVFluidItemsAsync(Type);
        }
        
        public bool SaveDischareFollowUpSpecialisationHosptID(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText, 
                    int HospitalID) {
            return base.Channel.SaveDischareFollowUpSpecialisationHosptID(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, intDischargeFollowUpDays, intDischargeFollowUpLimit, blnSameDayFollowUp, NextGapTime, SpecializationReportText, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveDischareFollowUpSpecialisationHosptIDAsync(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText, 
                    int HospitalID) {
            return base.Channel.SaveDischareFollowUpSpecialisationHosptIDAsync(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, intDischargeFollowUpDays, intDischargeFollowUpLimit, blnSameDayFollowUp, NextGapTime, SpecializationReportText, HospitalID);
        }
        
        public System.Data.DataSet GetOTPoster(string strTable, int WorkStationID) {
            return base.Channel.GetOTPoster(strTable, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOTPosterAsync(string strTable, int WorkStationID) {
            return base.Channel.GetOTPosterAsync(strTable, WorkStationID);
        }
        
        public System.Data.DataSet FetchWardEPoster(string WardID, int WorkStationID) {
            return base.Channel.FetchWardEPoster(WardID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchWardEPosterAsync(string WardID, int WorkStationID) {
            return base.Channel.FetchWardEPosterAsync(WardID, WorkStationID);
        }
        
        public System.Data.DataSet FetchHospitalSpecializations(int HospitalID, int UserId, int WorkStationID) {
            return base.Channel.FetchHospitalSpecializations(HospitalID, UserId, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchHospitalSpecializationsAsync(int HospitalID, int UserId, int WorkStationID) {
            return base.Channel.FetchHospitalSpecializationsAsync(HospitalID, UserId, WorkStationID);
        }
        
        public System.Data.DataSet FetchMultiFeatureNames(string FeatureIds, int UserId, int WorkStationID) {
            return base.Channel.FetchMultiFeatureNames(FeatureIds, UserId, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchMultiFeatureNamesAsync(string FeatureIds, int UserId, int WorkStationID) {
            return base.Channel.FetchMultiFeatureNamesAsync(FeatureIds, UserId, WorkStationID);
        }
        
        public bool SaveAlertLevelConfigurations(System.Data.DataSet dsProc, int AlertLevelConfigID, int SID, int SpecialiseID, int HospitalID, int intUserId, int intWorkStationId) {
            return base.Channel.SaveAlertLevelConfigurations(dsProc, AlertLevelConfigID, SID, SpecialiseID, HospitalID, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAlertLevelConfigurationsAsync(System.Data.DataSet dsProc, int AlertLevelConfigID, int SID, int SpecialiseID, int HospitalID, int intUserId, int intWorkStationId) {
            return base.Channel.SaveAlertLevelConfigurationsAsync(dsProc, AlertLevelConfigID, SID, SpecialiseID, HospitalID, intUserId, intWorkStationId);
        }
        
        public System.Data.DataSet FetchAlertLevelConfigurations(int EMPID, int SpecialiseID, int HospitalID, int WorkStationID) {
            return base.Channel.FetchAlertLevelConfigurations(EMPID, SpecialiseID, HospitalID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAlertLevelConfigurationsAsync(int EMPID, int SpecialiseID, int HospitalID, int WorkStationID) {
            return base.Channel.FetchAlertLevelConfigurationsAsync(EMPID, SpecialiseID, HospitalID, WorkStationID);
        }
        
        public System.Data.DataSet FetchSystemRoboDropPointsMapping(int UserSystemID, string Tbl, int HospitalID, int WorkStationID) {
            return base.Channel.FetchSystemRoboDropPointsMapping(UserSystemID, Tbl, HospitalID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchSystemRoboDropPointsMappingAsync(int UserSystemID, string Tbl, int HospitalID, int WorkStationID) {
            return base.Channel.FetchSystemRoboDropPointsMappingAsync(UserSystemID, Tbl, HospitalID, WorkStationID);
        }
        
        public bool SaveRoboDropPointUserSystemsMapping(System.Data.DataSet dsRobo, int UserSystemID, int HospitalID, int intUserId, int intWorkStationId) {
            return base.Channel.SaveRoboDropPointUserSystemsMapping(dsRobo, UserSystemID, HospitalID, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRoboDropPointUserSystemsMappingAsync(System.Data.DataSet dsRobo, int UserSystemID, int HospitalID, int intUserId, int intWorkStationId) {
            return base.Channel.SaveRoboDropPointUserSystemsMappingAsync(dsRobo, UserSystemID, HospitalID, intUserId, intWorkStationId);
        }
        
        public System.Data.DataSet FetchCaseStudyMaster(int CaseStudySectionID, int WorkStationID) {
            return base.Channel.FetchCaseStudyMaster(CaseStudySectionID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCaseStudyMasterAsync(int CaseStudySectionID, int WorkStationID) {
            return base.Channel.FetchCaseStudyMasterAsync(CaseStudySectionID, WorkStationID);
        }
        
        public System.Data.DataSet FetchCaseStudyForm(int CaseStudyFormID, int PatientID, int IPID, int WorkStationID) {
            return base.Channel.FetchCaseStudyForm(CaseStudyFormID, PatientID, IPID, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCaseStudyFormAsync(int CaseStudyFormID, int PatientID, int IPID, int WorkStationID) {
            return base.Channel.FetchCaseStudyFormAsync(CaseStudyFormID, PatientID, IPID, WorkStationID);
        }
        
        public bool SaveCaseStudyForm(System.Data.DataSet dsCaseStudy, int intUserId, int intWorkStationId, string strCallContext) {
            return base.Channel.SaveCaseStudyForm(dsCaseStudy, intUserId, intWorkStationId, strCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCaseStudyFormAsync(System.Data.DataSet dsCaseStudy, int intUserId, int intWorkStationId, string strCallContext) {
            return base.Channel.SaveCaseStudyFormAsync(dsCaseStudy, intUserId, intWorkStationId, strCallContext);
        }
        
        public System.Data.DataSet LoadMasters(string strTableId) {
            return base.Channel.LoadMasters(strTableId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadMastersAsync(string strTableId) {
            return base.Channel.LoadMastersAsync(strTableId);
        }
        
        public System.Data.DataSet LoadMastersId(string strTableId, int TagId) {
            return base.Channel.LoadMastersId(strTableId, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadMastersIdAsync(string strTableId, int TagId) {
            return base.Channel.LoadMastersIdAsync(strTableId, TagId);
        }
        
        public bool SaveMaster(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l) {
            return base.Channel.SaveMaster(TransType, TableID, intID, strName, Code, UserID, WorkStationID, Blocked, Name2l);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMasterAsync(byte TransType, int TableID, int intID, string strName, string Code, int UserID, int WorkStationID, bool Blocked, string Name2l) {
            return base.Channel.SaveMasterAsync(TransType, TableID, intID, strName, Code, UserID, WorkStationID, Blocked, Name2l);
        }
        
        public string FetchAgeDetail(System.DateTime DateOfbirth, System.DateTime CurrentDate) {
            return base.Channel.FetchAgeDetail(DateOfbirth, CurrentDate);
        }
        
        public System.Threading.Tasks.Task<string> FetchAgeDetailAsync(System.DateTime DateOfbirth, System.DateTime CurrentDate) {
            return base.Channel.FetchAgeDetailAsync(DateOfbirth, CurrentDate);
        }
        
        public System.Data.DataSet FetchEmployeedata(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchEmployeedata(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchEmployeedataAsync(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Data.DataSet FetchEmployeedataMODA(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchEmployeedataMODA(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataMODAAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchEmployeedataMODAAsync(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Data.DataSet FetchEmployeedataId(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId) {
            return base.Channel.FetchEmployeedataId(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataIdAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId) {
            return base.Channel.FetchEmployeedataIdAsync(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError, TagId);
        }
        
        public System.Data.DataSet FetchCutOffDetails(int intWardID, string intTable, int intUserId, int intWorkStid, int intError, int intFeatureid, int intFunctionid, string StrCallContext) {
            return base.Channel.FetchCutOffDetails(intWardID, intTable, intUserId, intWorkStid, intError, intFeatureid, intFunctionid, StrCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCutOffDetailsAsync(int intWardID, string intTable, int intUserId, int intWorkStid, int intError, int intFeatureid, int intFunctionid, string StrCallContext) {
            return base.Channel.FetchCutOffDetailsAsync(intWardID, intTable, intUserId, intWorkStid, intError, intFeatureid, intFunctionid, StrCallContext);
        }
        
        public System.Data.DataSet FetchFacilityName(int intFacilityID, int intTbl, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchFacilityName(intFacilityID, intTbl, intUserId, intWorkStid, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchFacilityNameAsync(int intFacilityID, int intTbl, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchFacilityNameAsync(intFacilityID, intTbl, intUserId, intWorkStid, intError);
        }
        
        public int SaveEmployee(System.Data.DataSet dtEmployee) {
            return base.Channel.SaveEmployee(dtEmployee);
        }
        
        public System.Threading.Tasks.Task<int> SaveEmployeeAsync(System.Data.DataSet dtEmployee) {
            return base.Channel.SaveEmployeeAsync(dtEmployee);
        }
        
        public bool UpdateEmployee(System.Data.DataSet dtEmployee) {
            return base.Channel.UpdateEmployee(dtEmployee);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(System.Data.DataSet dtEmployee) {
            return base.Channel.UpdateEmployeeAsync(dtEmployee);
        }
        
        public System.Data.DataSet GetHospitalInformation(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetHospitalInformation(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalInformationAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetHospitalInformationAsync(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetHospitalInformationId(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.GetHospitalInformationId(intType, strFilter, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalInformationIdAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.GetHospitalInformationIdAsync(intType, strFilter, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Data.DataSet GetServiceInformation(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.GetServiceInformation(intType, strFilter, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceInformationAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.GetServiceInformationAsync(intType, strFilter, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Data.DataSet GetBusinessUnits(int min, int max, int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetBusinessUnits(min, max, intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBusinessUnitsAsync(int min, int max, int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetBusinessUnitsAsync(min, max, intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetHospitalDepts(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetHospitalDepts(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalDeptsAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetHospitalDeptsAsync(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetHospitalDeptsId(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.GetHospitalDeptsId(intType, strFilter, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalDeptsIdAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.GetHospitalDeptsIdAsync(intType, strFilter, intUserId, intWorkStationId, intError, TagId);
        }
        
        public bool SaveModifyDepartment(bool blnFlag, System.Data.DataSet dsDept, int intUserId, int intworkStation, int intError) {
            return base.Channel.SaveModifyDepartment(blnFlag, dsDept, intUserId, intworkStation, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyDepartmentAsync(bool blnFlag, System.Data.DataSet dsDept, int intUserId, int intworkStation, int intError) {
            return base.Channel.SaveModifyDepartmentAsync(blnFlag, dsDept, intUserId, intworkStation, intError);
        }
        
        public bool UpdateDept(System.Data.DataSet dsDept) {
            return base.Channel.UpdateDept(dsDept);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDeptAsync(System.Data.DataSet dsDept) {
            return base.Channel.UpdateDeptAsync(dsDept);
        }
        
        public System.Data.DataSet FetchDepartmentdata(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchDepartmentdata(strDeptId, TableId, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDepartmentdataAsync(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchDepartmentdataAsync(strDeptId, TableId, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Data.DataSet FetchDepartmentdataId(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId) {
            return base.Channel.FetchDepartmentdataId(strDeptId, TableId, intDeleted, intUserId, intWorkStid, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDepartmentdataIdAsync(string strDeptId, string TableId, string intDeleted, int intUserId, int intWorkStid, int intError, int TagId) {
            return base.Channel.FetchDepartmentdataIdAsync(strDeptId, TableId, intDeleted, intUserId, intWorkStid, intError, TagId);
        }
        
        public bool SaveOrganization(System.Data.DataSet dsOrg, int intUserId, int intWorkStationId) {
            return base.Channel.SaveOrganization(dsOrg, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveOrganizationAsync(System.Data.DataSet dsOrg, int intUserId, int intWorkStationId) {
            return base.Channel.SaveOrganizationAsync(dsOrg, intUserId, intWorkStationId);
        }
        
        public bool SaveSpecialisation(bool blnFlag, int intSpecialiseID, string strSpecialisation, string strSpeciality, string strSpecialisation2l, int intDptID, string strCode, int intFollowUpDays, int intFollowUpLimit, bool blnAllDoctors, int intUserID, int intWorkStationID, int intError, int NextTokanNoGapTime) {
            return base.Channel.SaveSpecialisation(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, NextTokanNoGapTime);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSpecialisationAsync(bool blnFlag, int intSpecialiseID, string strSpecialisation, string strSpeciality, string strSpecialisation2l, int intDptID, string strCode, int intFollowUpDays, int intFollowUpLimit, bool blnAllDoctors, int intUserID, int intWorkStationID, int intError, int NextTokanNoGapTime) {
            return base.Channel.SaveSpecialisationAsync(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, NextTokanNoGapTime);
        }
        
        public bool SaveBedType(System.Data.DataSet dsBedType, int intUserId, int intWorkStationId) {
            return base.Channel.SaveBedType(dsBedType, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveBedTypeAsync(System.Data.DataSet dsBedType, int intUserId, int intWorkStationId) {
            return base.Channel.SaveBedTypeAsync(dsBedType, intUserId, intWorkStationId);
        }
        
        public bool SaveProcedure(System.Data.DataSet dsProc, bool mAddingStatus) {
            return base.Channel.SaveProcedure(dsProc, mAddingStatus);
        }
        
        public System.Threading.Tasks.Task<bool> SaveProcedureAsync(System.Data.DataSet dsProc, bool mAddingStatus) {
            return base.Channel.SaveProcedureAsync(dsProc, mAddingStatus);
        }
        
        public System.Data.DataSet FetchProcedures(int ProcID, string TableId, int intUserID, int WorkStID, int intErrID) {
            return base.Channel.FetchProcedures(ProcID, TableId, intUserID, WorkStID, intErrID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchProceduresAsync(int ProcID, string TableId, int intUserID, int WorkStID, int intErrID) {
            return base.Channel.FetchProceduresAsync(ProcID, TableId, intUserID, WorkStID, intErrID);
        }
        
        public bool SaveFacilityMaster(bool blnFlag, System.Data.DataSet ds) {
            return base.Channel.SaveFacilityMaster(blnFlag, ds);
        }
        
        public System.Threading.Tasks.Task<bool> SaveFacilityMasterAsync(bool blnFlag, System.Data.DataSet ds) {
            return base.Channel.SaveFacilityMasterAsync(blnFlag, ds);
        }
        
        public System.Data.DataSet FetchBedCategory(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchBedCategory(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchBedCategoryAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchBedCategoryAsync(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveModifyHRProfile(System.Data.DataSet saveDS, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyHRProfile(saveDS, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyHRProfileAsync(System.Data.DataSet saveDS, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyHRProfileAsync(saveDS, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveModifyHolidayMap(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyHolidayMap(saveDS, intFeatureid, intFunnctionid, StrCallContext, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyHolidayMapAsync(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyHolidayMapAsync(saveDS, intFeatureid, intFunnctionid, StrCallContext, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveModifyPINMessage(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyPINMessage(saveDS, intFeatureid, intFunnctionid, StrCallContext, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyPINMessageAsync(System.Data.DataSet saveDS, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyPINMessageAsync(saveDS, intFeatureid, intFunnctionid, StrCallContext, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet FetchPinMessage(string strType, string strFilter, int intFeatureid, int intFunctionid, string strCallContext, int intLanguageID, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.FetchPinMessage(strType, strFilter, intFeatureid, intFunctionid, strCallContext, intLanguageID, intUserID, intWorkstationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPinMessageAsync(string strType, string strFilter, int intFeatureid, int intFunctionid, string strCallContext, int intLanguageID, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.FetchPinMessageAsync(strType, strFilter, intFeatureid, intFunctionid, strCallContext, intLanguageID, intUserID, intWorkstationID, intError);
        }
        
        public bool SaveModifyPharmacyCutOffs(System.Data.DataSet saveDS, int intWarID, int inWardCutOffID, int nCutOffs, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyPharmacyCutOffs(saveDS, intWarID, inWardCutOffID, nCutOffs, intFeatureid, intFunnctionid, StrCallContext, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyPharmacyCutOffsAsync(System.Data.DataSet saveDS, int intWarID, int inWardCutOffID, int nCutOffs, int intFeatureid, int intFunnctionid, string StrCallContext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyPharmacyCutOffsAsync(saveDS, intWarID, inWardCutOffID, nCutOffs, intFeatureid, intFunnctionid, StrCallContext, intUserID, intWorkStationID, intError);
        }
        
        public bool DeleteCommonFunctions(int intIndex, int intValue, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.DeleteCommonFunctions(intIndex, intValue, intRevert, intUserId, intWorstationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCommonFunctionsAsync(int intIndex, int intValue, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.DeleteCommonFunctionsAsync(intIndex, intValue, intRevert, intUserId, intWorstationID, intError);
        }
        
        public bool SaveMapDepartment(int intHospitalID, string strMapDepartment, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveMapDepartment(intHospitalID, strMapDepartment, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMapDepartmentAsync(int intHospitalID, string strMapDepartment, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveMapDepartmentAsync(intHospitalID, strMapDepartment, intUserID, intWorkStationID, intError);
        }
        
        public bool ModifyRoomDetails(System.Data.DataSet objDS, int intUserid, int intWorkstationid) {
            return base.Channel.ModifyRoomDetails(objDS, intUserid, intWorkstationid);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyRoomDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkstationid) {
            return base.Channel.ModifyRoomDetailsAsync(objDS, intUserid, intWorkstationid);
        }
        
        public bool SaveRoomDetails(System.Data.DataSet objDS, int intUserid, int intWorkStationId) {
            return base.Channel.SaveRoomDetails(objDS, intUserid, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRoomDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkStationId) {
            return base.Channel.SaveRoomDetailsAsync(objDS, intUserid, intWorkStationId);
        }
        
        public System.Data.DataSet GetBedDetails(string strBed, int intBedId, string strTBL, int intUserId, int intWorkStationId) {
            return base.Channel.GetBedDetails(strBed, intBedId, strTBL, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBedDetailsAsync(string strBed, int intBedId, string strTBL, int intUserId, int intWorkStationId) {
            return base.Channel.GetBedDetailsAsync(strBed, intBedId, strTBL, intUserId, intWorkStationId);
        }
        
        public bool SaveBedDetails(System.Data.DataSet objDS, int intUserid, int intWorkStationId) {
            return base.Channel.SaveBedDetails(objDS, intUserid, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveBedDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkStationId) {
            return base.Channel.SaveBedDetailsAsync(objDS, intUserid, intWorkStationId);
        }
        
        public System.Data.DataSet GetWardsRooms(int intUserId, int intWorkstationId) {
            return base.Channel.GetWardsRooms(intUserId, intWorkstationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWardsRoomsAsync(int intUserId, int intWorkstationId) {
            return base.Channel.GetWardsRoomsAsync(intUserId, intWorkstationId);
        }
        
        public bool ModifyBedDetails(System.Data.DataSet objDS, int intUserid, int intWorkStationId) {
            return base.Channel.ModifyBedDetails(objDS, intUserid, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyBedDetailsAsync(System.Data.DataSet objDS, int intUserid, int intWorkStationId) {
            return base.Channel.ModifyBedDetailsAsync(objDS, intUserid, intWorkStationId);
        }
        
        public System.Data.DataSet FetchAdminMasters(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchAdminMasters(intTypes, strTablesName, strFilter, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAdminMastersAsync(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchAdminMastersAsync(intTypes, strTablesName, strFilter, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet FetchAdminMastersTagId(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId) {
            return base.Channel.FetchAdminMastersTagId(intTypes, strTablesName, strFilter, intUserID, intWorkStationID, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAdminMastersTagIdAsync(int[] intTypes, string[] strTablesName, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId) {
            return base.Channel.FetchAdminMastersTagIdAsync(intTypes, strTablesName, strFilter, intUserID, intWorkStationID, intError, TagId);
        }
        
        public System.Data.DataSet GetWardsBed(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetWardsBed(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWardsBedAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetWardsBedAsync(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetRoomDetails(string strRoom, int intRoomID, string strTBL, int intUserId, int intWorkStationId) {
            return base.Channel.GetRoomDetails(strRoom, intRoomID, strTBL, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRoomDetailsAsync(string strRoom, int intRoomID, string strTBL, int intUserId, int intWorkStationId) {
            return base.Channel.GetRoomDetailsAsync(strRoom, intRoomID, strTBL, intUserId, intWorkStationId);
        }
        
        public System.Data.DataSet FetchCountryCities(int intCountryID, int intStateID, int intCityID, int intUserID, int intworkStnID) {
            return base.Channel.FetchCountryCities(intCountryID, intStateID, intCityID, intUserID, intworkStnID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCountryCitiesAsync(int intCountryID, int intStateID, int intCityID, int intUserID, int intworkStnID) {
            return base.Channel.FetchCountryCitiesAsync(intCountryID, intStateID, intCityID, intUserID, intworkStnID);
        }
        
        public System.Data.DataSet GetCityDetails(int iMin, int iMax, int iType, string sFilter, int UserId, int iWKS, int intError) {
            return base.Channel.GetCityDetails(iMin, iMax, iType, sFilter, UserId, iWKS, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCityDetailsAsync(int iMin, int iMax, int iType, string sFilter, int UserId, int iWKS, int intError) {
            return base.Channel.GetCityDetailsAsync(iMin, iMax, iType, sFilter, UserId, iWKS, intError);
        }
        
        public System.Data.DataSet GetBedTypes(int intType, string strFilter, int intUserID, int intWorkStation, int intError) {
            return base.Channel.GetBedTypes(intType, strFilter, intUserID, intWorkStation, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBedTypesAsync(int intType, string strFilter, int intUserID, int intWorkStation, int intError) {
            return base.Channel.GetBedTypesAsync(intType, strFilter, intUserID, intWorkStation, intError);
        }
        
        public System.Data.DataSet GetRoomTypes(string strType, string strFilter, int intUserID, int intWorkStation, int intError) {
            return base.Channel.GetRoomTypes(strType, strFilter, intUserID, intWorkStation, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRoomTypesAsync(string strType, string strFilter, int intUserID, int intWorkStation, int intError) {
            return base.Channel.GetRoomTypesAsync(strType, strFilter, intUserID, intWorkStation, intError);
        }
        
        public bool SaveSlotDuration(int intSerItemID, int intServiceID, int intSlotBased, string strSlots, int intHositalid, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveSlotDuration(intSerItemID, intServiceID, intSlotBased, strSlots, intHositalid, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSlotDurationAsync(int intSerItemID, int intServiceID, int intSlotBased, string strSlots, int intHositalid, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveSlotDurationAsync(intSerItemID, intServiceID, intSlotBased, strSlots, intHositalid, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetSlotDuration(int intServiceID, int intServiceItemID, int intTblID, int intHospitalID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetSlotDuration(intServiceID, intServiceItemID, intTblID, intHospitalID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSlotDurationAsync(int intServiceID, int intServiceItemID, int intTblID, int intHospitalID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetSlotDurationAsync(intServiceID, intServiceItemID, intTblID, intHospitalID, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveModifyDoctorSpecialisationMapping(int intEmpID, string strSpecialisationID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyDoctorSpecialisationMapping(intEmpID, strSpecialisationID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyDoctorSpecialisationMappingAsync(int intEmpID, string strSpecialisationID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyDoctorSpecialisationMappingAsync(intEmpID, strSpecialisationID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetDoctorSpecialisationMapping(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorSpecialisationMapping(intEmpID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorSpecialisationMappingAsync(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorSpecialisationMappingAsync(intEmpID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveModifyDoctorAssistanceMapping(int intEmpID, string strAssiatance, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyDoctorAssistanceMapping(intEmpID, strAssiatance, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyDoctorAssistanceMappingAsync(int intEmpID, string strAssiatance, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifyDoctorAssistanceMappingAsync(intEmpID, strAssiatance, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetGoalActivitiesMapping(int intGoalID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetGoalActivitiesMapping(intGoalID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetGoalActivitiesMappingAsync(int intGoalID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetGoalActivitiesMappingAsync(intGoalID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveModifyGoalActivitiesMapping(int intGoalID, string strActivities, int intUserID, int intworkStationID, int intError) {
            return base.Channel.SaveModifyGoalActivitiesMapping(intGoalID, strActivities, intUserID, intworkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyGoalActivitiesMappingAsync(int intGoalID, string strActivities, int intUserID, int intworkStationID, int intError) {
            return base.Channel.SaveModifyGoalActivitiesMappingAsync(intGoalID, strActivities, intUserID, intworkStationID, intError);
        }
        
        public System.Data.DataSet GetProblemgroupProblemsMapping(int intProblemGroupID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetProblemgroupProblemsMapping(intProblemGroupID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProblemgroupProblemsMappingAsync(int intProblemGroupID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetProblemgroupProblemsMappingAsync(intProblemGroupID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveModifyProblemgroupProblemsMapping(int intProblemGroupID, string strProblems, int intUserID, int intworkStationID, int intError) {
            return base.Channel.SaveModifyProblemgroupProblemsMapping(intProblemGroupID, strProblems, intUserID, intworkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyProblemgroupProblemsMappingAsync(int intProblemGroupID, string strProblems, int intUserID, int intworkStationID, int intError) {
            return base.Channel.SaveModifyProblemgroupProblemsMappingAsync(intProblemGroupID, strProblems, intUserID, intworkStationID, intError);
        }
        
        public System.Data.DataSet GetDoctorAssistanceMapping(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorAssistanceMapping(intEmpID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorAssistanceMappingAsync(int intEmpID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorAssistanceMappingAsync(intEmpID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetAllWards(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAllWards(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllWardsAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAllWardsAsync(intType, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet FetchMappedItemsList(int TypeID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchMappedItemsList(TypeID, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchMappedItemsListAsync(int TypeID, int intUserID, int intWorkStationID) {
            return base.Channel.FetchMappedItemsListAsync(TypeID, intUserID, intWorkStationID);
        }
        
        public System.Data.DataSet FetchHospitalMappedItemsList(int TypeID, int intUserID, int intWorkStationID, int HospitalID) {
            return base.Channel.FetchHospitalMappedItemsList(TypeID, intUserID, intWorkStationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchHospitalMappedItemsListAsync(int TypeID, int intUserID, int intWorkStationID, int HospitalID) {
            return base.Channel.FetchHospitalMappedItemsListAsync(TypeID, intUserID, intWorkStationID, HospitalID);
        }
        
        public System.Data.DataSet FetchMappedItems(int TypeID, string strFilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchMappedItems(TypeID, strFilter, intUserID, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchMappedItemsAsync(int TypeID, string strFilter, int intUserID, int intWorkStationID) {
            return base.Channel.FetchMappedItemsAsync(TypeID, strFilter, intUserID, intWorkStationID);
        }
        
        public int SaveMappedItems(string ParamValue, string IDValues) {
            return base.Channel.SaveMappedItems(ParamValue, IDValues);
        }
        
        public System.Threading.Tasks.Task<int> SaveMappedItemsAsync(string ParamValue, string IDValues) {
            return base.Channel.SaveMappedItemsAsync(ParamValue, IDValues);
        }
        
        public int SaveHospitalMappedItems(string ParamValue, string IDValues, int HospitalID) {
            return base.Channel.SaveHospitalMappedItems(ParamValue, IDValues, HospitalID);
        }
        
        public System.Threading.Tasks.Task<int> SaveHospitalMappedItemsAsync(string ParamValue, string IDValues, int HospitalID) {
            return base.Channel.SaveHospitalMappedItemsAsync(ParamValue, IDValues, HospitalID);
        }
        
        public bool DeleteProcedures(int intProcedureID, int intServiceID, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.DeleteProcedures(intProcedureID, intServiceID, intRevert, intUserId, intWorstationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProceduresAsync(int intProcedureID, int intServiceID, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.DeleteProceduresAsync(intProcedureID, intServiceID, intRevert, intUserId, intWorstationID, intError);
        }
        
        public System.Data.DataSet FetchTitleRules(int intType, string strFilter, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchTitleRules(intType, strFilter, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleRulesAsync(int intType, string strFilter, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchTitleRulesAsync(intType, strFilter, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet FetchTitleRulesId(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId) {
            return base.Channel.FetchTitleRulesId(intType, strFilter, intUserID, intWorkStationID, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleRulesIdAsync(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int TagId) {
            return base.Channel.FetchTitleRulesIdAsync(intType, strFilter, intUserID, intWorkStationID, intError, TagId);
        }
        
        public System.Data.DataSet FetchTitleRulesCulture(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int tagID) {
            return base.Channel.FetchTitleRulesCulture(intType, strFilter, intUserID, intWorkStationID, intError, tagID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleRulesCultureAsync(int intType, string strFilter, int intUserID, int intWorkStationID, int intError, int tagID) {
            return base.Channel.FetchTitleRulesCultureAsync(intType, strFilter, intUserID, intWorkStationID, intError, tagID);
        }
        
        public System.Data.DataSet FetchTitleDesription(int intTitleID, int intTbl, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchTitleDesription(intTitleID, intTbl, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleDesriptionAsync(int intTitleID, int intTbl, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchTitleDesriptionAsync(intTitleID, intTbl, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveTitleDescription(System.Data.DataSet dsSend) {
            return base.Channel.SaveTitleDescription(dsSend);
        }
        
        public System.Threading.Tasks.Task<bool> SaveTitleDescriptionAsync(System.Data.DataSet dsSend) {
            return base.Channel.SaveTitleDescriptionAsync(dsSend);
        }
        
        public System.Data.DataSet FetchTitleMasterDesription(int intTitleID, string strFilter, int intUserID, int intWorkStationID, int intError, int intHospitalId) {
            return base.Channel.FetchTitleMasterDesription(intTitleID, strFilter, intUserID, intWorkStationID, intError, intHospitalId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTitleMasterDesriptionAsync(int intTitleID, string strFilter, int intUserID, int intWorkStationID, int intError, int intHospitalId) {
            return base.Channel.FetchTitleMasterDesriptionAsync(intTitleID, strFilter, intUserID, intWorkStationID, intError, intHospitalId);
        }
        
        public bool DeleteBeds(int intValue, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.DeleteBeds(intValue, intRevert, intUserId, intWorstationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBedsAsync(int intValue, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.DeleteBedsAsync(intValue, intRevert, intUserId, intWorstationID, intError);
        }
        
        public long SaveConsultationTypeMaster(System.Data.DataSet dsConsTypeMaster, byte IsInsert) {
            return base.Channel.SaveConsultationTypeMaster(dsConsTypeMaster, IsInsert);
        }
        
        public System.Threading.Tasks.Task<long> SaveConsultationTypeMasterAsync(System.Data.DataSet dsConsTypeMaster, byte IsInsert) {
            return base.Channel.SaveConsultationTypeMasterAsync(dsConsTypeMaster, IsInsert);
        }
        
        public System.Data.DataSet GetTitles(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetTitles(intTitleID, intTableID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTitlesAsync(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetTitlesAsync(intTitleID, intTableID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetTitlesId(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError, int TagId) {
            return base.Channel.GetTitlesId(intTitleID, intTableID, intUserID, intWorkStationID, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTitlesIdAsync(int intTitleID, int intTableID, int intUserID, int intWorkStationID, int intError, int TagId) {
            return base.Channel.GetTitlesIdAsync(intTitleID, intTableID, intUserID, intWorkStationID, intError, TagId);
        }
        
        public bool SaveReligionWithGroup(System.Data.DataSet dsSave) {
            return base.Channel.SaveReligionWithGroup(dsSave);
        }
        
        public System.Threading.Tasks.Task<bool> SaveReligionWithGroupAsync(System.Data.DataSet dsSave) {
            return base.Channel.SaveReligionWithGroupAsync(dsSave);
        }
        
        public bool BlockReligion_new(System.Data.DataSet dsSend) {
            return base.Channel.BlockReligion_new(dsSend);
        }
        
        public System.Threading.Tasks.Task<bool> BlockReligion_newAsync(System.Data.DataSet dsSend) {
            return base.Channel.BlockReligion_newAsync(dsSend);
        }
        
        public System.Data.DataSet GetNotificationType(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetNotificationType(intType, strFilter, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNotificationTypeAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetNotificationTypeAsync(intType, strFilter, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public bool SaveSubscriber(System.Data.DataSet dsSub, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.SaveSubscriber(dsSub, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSubscriberAsync(System.Data.DataSet dsSub, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.SaveSubscriberAsync(dsSub, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Data.DataSet GetSubscriber(int ConfigID, string Tbl, int UserID, int WorkStationID, int Error, int intHospID) {
            return base.Channel.GetSubscriber(ConfigID, Tbl, UserID, WorkStationID, Error, intHospID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSubscriberAsync(int ConfigID, string Tbl, int UserID, int WorkStationID, int Error, int intHospID) {
            return base.Channel.GetSubscriberAsync(ConfigID, Tbl, UserID, WorkStationID, Error, intHospID);
        }
        
        public System.Data.DataSet FetchReportGroupData(int intReportGroupID, string strTableId, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchReportGroupData(intReportGroupID, strTableId, intUserId, intWorkStid, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchReportGroupDataAsync(int intReportGroupID, string strTableId, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchReportGroupDataAsync(intReportGroupID, strTableId, intUserId, intWorkStid, intError);
        }
        
        public bool SaveModifyReportGroup(System.Data.DataSet dsReportGroup) {
            return base.Channel.SaveModifyReportGroup(dsReportGroup);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyReportGroupAsync(System.Data.DataSet dsReportGroup) {
            return base.Channel.SaveModifyReportGroupAsync(dsReportGroup);
        }
        
        public bool BlockReportGroup(int intGroupID, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.BlockReportGroup(intGroupID, intRevert, intUserId, intWorstationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> BlockReportGroupAsync(int intGroupID, int intRevert, int intUserId, int intWorstationID, int intError) {
            return base.Channel.BlockReportGroupAsync(intGroupID, intRevert, intUserId, intWorstationID, intError);
        }
        
        public System.Data.DataSet GetCompanyDetails(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L) {
            return base.Channel.GetCompanyDetails(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L) {
            return base.Channel.GetCompanyDetailsAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L);
        }
        
        public System.Data.DataSet GetCompanyDetailsCul(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID) {
            return base.Channel.GetCompanyDetailsCul(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsCulAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID) {
            return base.Channel.GetCompanyDetailsCulAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID);
        }
        
        public bool SaveCompanyRequisition(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct) {
            return base.Channel.SaveCompanyRequisition(bModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCompanyRequisitionAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct) {
            return base.Channel.SaveCompanyRequisitionAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct);
        }
        
        public bool CommonDelete(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.CommonDelete(intIndex, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> CommonDeleteAsync(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.CommonDeleteAsync(intIndex, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet GetAdminMaster(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAdminMaster(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAdminMasterAsync(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAdminMasterCul(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID) {
            return base.Channel.GetAdminMasterCul(intType, strResult, intUserId, intWorkStationId, intError, intLanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterCulAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID) {
            return base.Channel.GetAdminMasterCulAsync(intType, strResult, intUserId, intWorkStationId, intError, intLanguageID);
        }
        
        public System.Data.DataSet GetSpecializationConfig(int intType, int intResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetSpecializationConfig(intType, intResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSpecializationConfigAsync(int intType, int intResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetSpecializationConfigAsync(intType, intResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet FetchUserPermissions(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID) {
            return base.Channel.FetchUserPermissions(intHospitalID, intWorkstationID, intUserID, strSIDTpe, strTableID, intModuleID, intFeatureID, intFunctionID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchUserPermissionsAsync(int intHospitalID, int intWorkstationID, int intUserID, string strSIDTpe, string strTableID, int intModuleID, int intFeatureID, int intFunctionID) {
            return base.Channel.FetchUserPermissionsAsync(intHospitalID, intWorkstationID, intUserID, strSIDTpe, strTableID, intModuleID, intFeatureID, intFunctionID);
        }
        
        public bool SaveCompanyHospitalRequisition(bool blnModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int intHospitalID) {
            return base.Channel.SaveCompanyHospitalRequisition(blnModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCompanyHospitalRequisitionAsync(bool blnModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int intHospitalID) {
            return base.Channel.SaveCompanyHospitalRequisitionAsync(blnModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct, intHospitalID);
        }
        
        public System.Data.DataSet GetFacilitySchedulerCount(int facilityId, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetFacilitySchedulerCount(facilityId, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFacilitySchedulerCountAsync(int facilityId, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetFacilitySchedulerCountAsync(facilityId, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveDischareFollowUpSpecialisation(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText) {
            return base.Channel.SaveDischareFollowUpSpecialisation(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, intDischargeFollowUpDays, intDischargeFollowUpLimit, blnSameDayFollowUp, NextGapTime, SpecializationReportText);
        }
        
        public System.Threading.Tasks.Task<bool> SaveDischareFollowUpSpecialisationAsync(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    bool blnSameDayFollowUp, 
                    int NextGapTime, 
                    string SpecializationReportText) {
            return base.Channel.SaveDischareFollowUpSpecialisationAsync(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, intDischargeFollowUpDays, intDischargeFollowUpLimit, blnSameDayFollowUp, NextGapTime, SpecializationReportText);
        }
        
        public System.Data.DataSet GetFacilityItemStockCount(string filter, int intUserId, int intWorkStationId) {
            return base.Channel.GetFacilityItemStockCount(filter, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetFacilityItemStockCountAsync(string filter, int intUserId, int intWorkStationId) {
            return base.Channel.GetFacilityItemStockCountAsync(filter, intUserId, intWorkStationId);
        }
        
        public bool SaveModifySurgeryConsumableMapping(int intProcID, string strItemsID, int intHospID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifySurgeryConsumableMapping(intProcID, strItemsID, intHospID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifySurgeryConsumableMappingAsync(int intProcID, string strItemsID, int intHospID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.SaveModifySurgeryConsumableMappingAsync(intProcID, strItemsID, intHospID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetSurgeryConsumablesMapping(int intProcID, int intHospID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetSurgeryConsumablesMapping(intProcID, intHospID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSurgeryConsumablesMappingAsync(int intProcID, int intHospID, int intTblID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetSurgeryConsumablesMappingAsync(intProcID, intHospID, intTblID, intUserID, intWorkStationID, intError);
        }
        
        public bool SaveDrugOrderMap(int PharmaceyID, int wardID, System.DateTime Fromtime, System.DateTime Totime) {
            return base.Channel.SaveDrugOrderMap(PharmaceyID, wardID, Fromtime, Totime);
        }
        
        public System.Threading.Tasks.Task<bool> SaveDrugOrderMapAsync(int PharmaceyID, int wardID, System.DateTime Fromtime, System.DateTime Totime) {
            return base.Channel.SaveDrugOrderMapAsync(PharmaceyID, wardID, Fromtime, Totime);
        }
        
        public System.Data.DataSet FetchDrugOrderMap(int wardID) {
            return base.Channel.FetchDrugOrderMap(wardID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDrugOrderMapAsync(int wardID) {
            return base.Channel.FetchDrugOrderMapAsync(wardID);
        }
        
        public bool SaveDoctorMarkUpPercent(int DoctorID, int SpecialiseID, decimal MarkUpPercent, System.DateTime EffectiveDate, int HospitalID, int Status, int Blocked, int intUserID, int RoutId, int intWorkStationID, int intError, int FeatureID, int FunctionId, string Callcontext) {
            return base.Channel.SaveDoctorMarkUpPercent(DoctorID, SpecialiseID, MarkUpPercent, EffectiveDate, HospitalID, Status, Blocked, intUserID, RoutId, intWorkStationID, intError, FeatureID, FunctionId, Callcontext);
        }
        
        public System.Threading.Tasks.Task<bool> SaveDoctorMarkUpPercentAsync(int DoctorID, int SpecialiseID, decimal MarkUpPercent, System.DateTime EffectiveDate, int HospitalID, int Status, int Blocked, int intUserID, int RoutId, int intWorkStationID, int intError, int FeatureID, int FunctionId, string Callcontext) {
            return base.Channel.SaveDoctorMarkUpPercentAsync(DoctorID, SpecialiseID, MarkUpPercent, EffectiveDate, HospitalID, Status, Blocked, intUserID, RoutId, intWorkStationID, intError, FeatureID, FunctionId, Callcontext);
        }
        
        public System.Data.DataSet FetchDoctorMarkUpPercent(int DoctorID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchDoctorMarkUpPercent(DoctorID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchDoctorMarkUpPercentAsync(int DoctorID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchDoctorMarkUpPercentAsync(DoctorID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet FetchAuditDetailsDoctorMarkUpPercent(int AuditID, int DoctorID, int SpecialiseID, int intUserID, int intWorkStationID, int intError, byte LanguageID, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.FetchAuditDetailsDoctorMarkUpPercent(AuditID, DoctorID, SpecialiseID, intUserID, intWorkStationID, intError, LanguageID, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAuditDetailsDoctorMarkUpPercentAsync(int AuditID, int DoctorID, int SpecialiseID, int intUserID, int intWorkStationID, int intError, byte LanguageID, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.FetchAuditDetailsDoctorMarkUpPercentAsync(AuditID, DoctorID, SpecialiseID, intUserID, intWorkStationID, intError, LanguageID, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Data.DataSet FetchAuditDoctorMarkUpPercent(int DoctorID, int intUserID, int intWorkStationID, int intError, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.FetchAuditDoctorMarkUpPercent(DoctorID, intUserID, intWorkStationID, intError, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAuditDoctorMarkUpPercentAsync(int DoctorID, int intUserID, int intWorkStationID, int intError, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.FetchAuditDoctorMarkUpPercentAsync(DoctorID, intUserID, intWorkStationID, intError, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Data.DataSet FetchfromAdvLangID(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, string strFeatureID, string strFunctionID, string strCallContext, int LangId) {
            return base.Channel.FetchfromAdvLangID(strProcedureName, strType, strFilter, intUserID, intWorkstationID, strFeatureID, strFunctionID, strCallContext, LangId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchfromAdvLangIDAsync(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, string strFeatureID, string strFunctionID, string strCallContext, int LangId) {
            return base.Channel.FetchfromAdvLangIDAsync(strProcedureName, strType, strFilter, intUserID, intWorkstationID, strFeatureID, strFunctionID, strCallContext, LangId);
        }
        
        public int SaveEmployeeMODA(System.Data.DataSet dtEmployee) {
            return base.Channel.SaveEmployeeMODA(dtEmployee);
        }
        
        public System.Threading.Tasks.Task<int> SaveEmployeeMODAAsync(System.Data.DataSet dtEmployee) {
            return base.Channel.SaveEmployeeMODAAsync(dtEmployee);
        }
        
        public bool SaveClinicCode(int EmpClinicCodeID, int intEmpId, string strCliniccode, string strClinicName, string strClinicName2L, string strDoctorCode, int intSpecialiseID, int intHospitalID, int intBlocked, int intUserId, int intWorkStationId, int intError, int IsSubClinic) {
            return base.Channel.SaveClinicCode(EmpClinicCodeID, intEmpId, strCliniccode, strClinicName, strClinicName2L, strDoctorCode, intSpecialiseID, intHospitalID, intBlocked, intUserId, intWorkStationId, intError, IsSubClinic);
        }
        
        public System.Threading.Tasks.Task<bool> SaveClinicCodeAsync(int EmpClinicCodeID, int intEmpId, string strCliniccode, string strClinicName, string strClinicName2L, string strDoctorCode, int intSpecialiseID, int intHospitalID, int intBlocked, int intUserId, int intWorkStationId, int intError, int IsSubClinic) {
            return base.Channel.SaveClinicCodeAsync(EmpClinicCodeID, intEmpId, strCliniccode, strClinicName, strClinicName2L, strDoctorCode, intSpecialiseID, intHospitalID, intBlocked, intUserId, intWorkStationId, intError, IsSubClinic);
        }
        
        public bool SaveSubSpecialisation(System.Data.DataTable dsSubSpecialisation) {
            return base.Channel.SaveSubSpecialisation(dsSubSpecialisation);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSubSpecialisationAsync(System.Data.DataTable dsSubSpecialisation) {
            return base.Channel.SaveSubSpecialisationAsync(dsSubSpecialisation);
        }
        
        public System.Data.DataSet GetDoctorsClinicDetails(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorsClinicDetails(intTblID, strFilter, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorsClinicDetailsAsync(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorsClinicDetailsAsync(intTblID, strFilter, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet FetchSpecilizationofDoctor(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchSpecilizationofDoctor(intTblID, strFilter, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchSpecilizationofDoctorAsync(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchSpecilizationofDoctorAsync(intTblID, strFilter, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public bool UpdateEmployeeMODA(System.Data.DataSet dtEmployee) {
            return base.Channel.UpdateEmployeeMODA(dtEmployee);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeMODAAsync(System.Data.DataSet dtEmployee) {
            return base.Channel.UpdateEmployeeMODAAsync(dtEmployee);
        }
        
        public bool SaveDischareFollowUpSpecialisationMODA(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    int Hospitalid, 
                    int GenderId, 
                    bool blnSameDayFollowUp) {
            return base.Channel.SaveDischareFollowUpSpecialisationMODA(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, intDischargeFollowUpDays, intDischargeFollowUpLimit, Hospitalid, GenderId, blnSameDayFollowUp);
        }
        
        public System.Threading.Tasks.Task<bool> SaveDischareFollowUpSpecialisationMODAAsync(
                    bool blnFlag, 
                    int intSpecialiseID, 
                    string strSpecialisation, 
                    string strSpeciality, 
                    string strSpecialisation2l, 
                    int intDptID, 
                    string strCode, 
                    int intFollowUpDays, 
                    int intFollowUpLimit, 
                    bool blnAllDoctors, 
                    int intUserID, 
                    int intWorkStationID, 
                    int intError, 
                    int intDischargeFollowUpDays, 
                    int intDischargeFollowUpLimit, 
                    int Hospitalid, 
                    int GenderId, 
                    bool blnSameDayFollowUp) {
            return base.Channel.SaveDischareFollowUpSpecialisationMODAAsync(blnFlag, intSpecialiseID, strSpecialisation, strSpeciality, strSpecialisation2l, intDptID, strCode, intFollowUpDays, intFollowUpLimit, blnAllDoctors, intUserID, intWorkStationID, intError, intDischargeFollowUpDays, intDischargeFollowUpLimit, Hospitalid, GenderId, blnSameDayFollowUp);
        }
        
        public bool IsEmployeeCodeExistsMODA(string empCode, string empNumber, int intWorkStationID) {
            return base.Channel.IsEmployeeCodeExistsMODA(empCode, empNumber, intWorkStationID);
        }
        
        public System.Threading.Tasks.Task<bool> IsEmployeeCodeExistsMODAAsync(string empCode, string empNumber, int intWorkStationID) {
            return base.Channel.IsEmployeeCodeExistsMODAAsync(empCode, empNumber, intWorkStationID);
        }
        
        public System.Data.DataSet GetNotificationDetails(int intNotificationID, string strTableID, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetNotificationDetails(intNotificationID, strTableID, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNotificationDetailsAsync(int intNotificationID, string strTableID, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetNotificationDetailsAsync(intNotificationID, strTableID, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public bool SaveEventMessageTemplates(string strEventMessageTemplete, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.SaveEventMessageTemplates(strEventMessageTemplete, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveEventMessageTemplatesAsync(string strEventMessageTemplete, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.SaveEventMessageTemplatesAsync(strEventMessageTemplete, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Data.DataSet GetMessageTemplate(int intNotificationID, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetMessageTemplate(intNotificationID, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMessageTemplateAsync(int intNotificationID, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetMessageTemplateAsync(intNotificationID, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Data.DataSet GetNotificationTypeSMS(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetNotificationTypeSMS(intType, strFilter, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNotificationTypeSMSAsync(int intType, string strFilter, int intUserId, int intWorkStationId, int intError, int intHospID) {
            return base.Channel.GetNotificationTypeSMSAsync(intType, strFilter, intUserId, intWorkStationId, intError, intHospID);
        }
        
        public bool SaveSsrsReportConfig(string ReportName, string ReportPath, string moduleIds, int UserID, int reportType, int intWorkStationID, int intError, int ReportID, int FeatureID, int buttonclick) {
            return base.Channel.SaveSsrsReportConfig(ReportName, ReportPath, moduleIds, UserID, reportType, intWorkStationID, intError, ReportID, FeatureID, buttonclick);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSsrsReportConfigAsync(string ReportName, string ReportPath, string moduleIds, int UserID, int reportType, int intWorkStationID, int intError, int ReportID, int FeatureID, int buttonclick) {
            return base.Channel.SaveSsrsReportConfigAsync(ReportName, ReportPath, moduleIds, UserID, reportType, intWorkStationID, intError, ReportID, FeatureID, buttonclick);
        }
        
        public bool SaveEPosterIPAddressMapping(int EPosterIPAddressID, System.Data.DataSet objDSDoctors, int UserID, int WorkStationID, int HospitalID) {
            return base.Channel.SaveEPosterIPAddressMapping(EPosterIPAddressID, objDSDoctors, UserID, WorkStationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveEPosterIPAddressMappingAsync(int EPosterIPAddressID, System.Data.DataSet objDSDoctors, int UserID, int WorkStationID, int HospitalID) {
            return base.Channel.SaveEPosterIPAddressMappingAsync(EPosterIPAddressID, objDSDoctors, UserID, WorkStationID, HospitalID);
        }
        
        public System.Data.DataSet GetEPosterIPAddressMapping(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.GetEPosterIPAddressMapping(EPosterIPAddressID, TableID, UserID, WorkStationID, HospitalID, LanguageID, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEPosterIPAddressMappingAsync(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.GetEPosterIPAddressMappingAsync(EPosterIPAddressID, TableID, UserID, WorkStationID, HospitalID, LanguageID, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Data.DataSet GetEPosterDetails(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.GetEPosterDetails(EPosterIPAddressID, TableID, UserID, WorkStationID, HospitalID, LanguageID, FeatureId, FunctionId, Callcontext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEPosterDetailsAsync(int EPosterIPAddressID, string TableID, int UserID, int WorkStationID, int HospitalID, byte LanguageID, int FeatureId, int FunctionId, string Callcontext) {
            return base.Channel.GetEPosterDetailsAsync(EPosterIPAddressID, TableID, UserID, WorkStationID, HospitalID, LanguageID, FeatureId, FunctionId, Callcontext);
        }
        
        public string MovingAppointmentsFromDoctorToAnotherDoctor(int SourceDocId, int DestDocId, string DestSpecialisation, string SourceClinicCode, string DestClinicCode, string DestDocCode, bool isSameClinic, int UserID, int WorkStationID, int HospitalID) {
            return base.Channel.MovingAppointmentsFromDoctorToAnotherDoctor(SourceDocId, DestDocId, DestSpecialisation, SourceClinicCode, DestClinicCode, DestDocCode, isSameClinic, UserID, WorkStationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<string> MovingAppointmentsFromDoctorToAnotherDoctorAsync(int SourceDocId, int DestDocId, string DestSpecialisation, string SourceClinicCode, string DestClinicCode, string DestDocCode, bool isSameClinic, int UserID, int WorkStationID, int HospitalID) {
            return base.Channel.MovingAppointmentsFromDoctorToAnotherDoctorAsync(SourceDocId, DestDocId, DestSpecialisation, SourceClinicCode, DestClinicCode, DestDocCode, isSameClinic, UserID, WorkStationID, HospitalID);
        }
        
        public bool SaveAlertsMapping(int intAlertId, int ModuleId, System.Data.DataSet dsAlertsMapping, int intUserId, int intWorkStid, int intHospitalId) {
            return base.Channel.SaveAlertsMapping(intAlertId, ModuleId, dsAlertsMapping, intUserId, intWorkStid, intHospitalId);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAlertsMappingAsync(int intAlertId, int ModuleId, System.Data.DataSet dsAlertsMapping, int intUserId, int intWorkStid, int intHospitalId) {
            return base.Channel.SaveAlertsMappingAsync(intAlertId, ModuleId, dsAlertsMapping, intUserId, intWorkStid, intHospitalId);
        }
        
        public System.Data.DataSet FetchAlertsMapping(int intAlertId, int ModuleId, int intUserId, int intWorkStid) {
            return base.Channel.FetchAlertsMapping(intAlertId, ModuleId, intUserId, intWorkStid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAlertsMappingAsync(int intAlertId, int ModuleId, int intUserId, int intWorkStid) {
            return base.Channel.FetchAlertsMappingAsync(intAlertId, ModuleId, intUserId, intWorkStid);
        }
        
        public System.Data.DataSet FetchAlertsMastered(int intUserId, int intWorkStid) {
            return base.Channel.FetchAlertsMastered(intUserId, intWorkStid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAlertsMasteredAsync(int intUserId, int intWorkStid) {
            return base.Channel.FetchAlertsMasteredAsync(intUserId, intWorkStid);
        }
        
        public int SaveFacilityServiceAndSpecialization(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID) {
            return base.Channel.SaveFacilityServiceAndSpecialization(dtFinal, intUserId, intWorkStationId, intFeatureID, intHospitalID, intFacilityID);
        }
        
        public System.Threading.Tasks.Task<int> SaveFacilityServiceAndSpecializationAsync(System.Data.DataTable dtFinal, int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID) {
            return base.Channel.SaveFacilityServiceAndSpecializationAsync(dtFinal, intUserId, intWorkStationId, intFeatureID, intHospitalID, intFacilityID);
        }
        
        public System.Data.DataTable FetchFacilityServiceAndSpecialization(int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID, int tableId) {
            return base.Channel.FetchFacilityServiceAndSpecialization(intUserId, intWorkStationId, intFeatureID, intHospitalID, intFacilityID, tableId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchFacilityServiceAndSpecializationAsync(int intUserId, int intWorkStationId, int intFeatureID, int intHospitalID, int intFacilityID, int tableId) {
            return base.Channel.FetchFacilityServiceAndSpecializationAsync(intUserId, intWorkStationId, intFeatureID, intHospitalID, intFacilityID, tableId);
        }
        
        public int SaveDoctorsCutOffTime(System.Data.DataTable dtSaveDocs, int intUserID, int intWorkStationID, string Operation) {
            return base.Channel.SaveDoctorsCutOffTime(dtSaveDocs, intUserID, intWorkStationID, Operation);
        }
        
        public System.Threading.Tasks.Task<int> SaveDoctorsCutOffTimeAsync(System.Data.DataTable dtSaveDocs, int intUserID, int intWorkStationID, string Operation) {
            return base.Channel.SaveDoctorsCutOffTimeAsync(dtSaveDocs, intUserID, intWorkStationID, Operation);
        }
    }
}
