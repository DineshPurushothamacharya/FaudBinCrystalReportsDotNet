//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reports.ContractMgmtServiceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
    [System.SerializableAttribute()]
    public partial class NextGenCustomException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorStackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorSource {
            get {
                return this.ErrorSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorSourceField, value) != true)) {
                    this.ErrorSourceField = value;
                    this.RaisePropertyChanged("ErrorSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorStackTrace {
            get {
                return this.ErrorStackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorStackTraceField, value) != true)) {
                    this.ErrorStackTraceField = value;
                    this.RaisePropertyChanged("ErrorStackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Wipro.NxG.HIS", ConfigurationName="ContractMgmtServiceClient.ContractMgmtServiceContract")]
    public interface ContractMgmtServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoverageRules", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCoverageRulesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCoverageRulesNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCoverageRules(int Isdefault, int AgreementId, int AgreementCoverageRuleID, int HospitalId, string Tbl, int intUserID, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCoverageRules", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCoverageRulesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCoverageRulesAsync(int Isdefault, int AgreementId, int AgreementCoverageRuleID, int HospitalId, string Tbl, int intUserID, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreementME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementMEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementMENextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveAgreementME(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreementME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementMEResponse")]
        System.Threading.Tasks.Task<bool> SaveAgreementMEAsync(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementConfigurationME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementConfigurationMERespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementConfigurationMENextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementConfigurationME(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementConfigurationME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementConfigurationMERespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementConfigurationMEAsync(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetailsLanguageID_ME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eID_MEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eID_MENextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetHospitalCompanyDetailsLanguageID_ME(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetailsLanguageID_ME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eID_MEResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsLanguageID_MEAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetailsME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsMEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsMENextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyDetailsME(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetailsME", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsMEResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsMEAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchCompanyGradesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchCompanyGradesNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchCompanyGrades(string GradeIDs, int intUserID, int intWorkStationID, int intError, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchCompanyGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchCompanyGradesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyGradesAsync(string GradeIDs, int intUserID, int intWorkStationID, int intError, int companyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientDefaultLOAItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPatientDefaultLOAItemsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPatientDefaultLOAItemsNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPatientDefaultLOAItems(int compantID, int gradeID, int IsCompoundCompany, int patientType, int type, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPatientDefaultLOAItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPatientDefaultLOAItemsRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientDefaultLOAItemsAsync(int compantID, int gradeID, int IsCompoundCompany, int patientType, int type, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveBulkPatientItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveBulkPatientItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveBulkPatientItemsNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveBulkPatientItems(System.Data.DataTable dtPatientItems, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveBulkPatientItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveBulkPatientItemsResponse")]
        System.Threading.Tasks.Task<string> SaveBulkPatientItemsAsync(System.Data.DataTable dtPatientItems, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeleteCompany", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/DeleteCompanyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/DeleteCompanyNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool DeleteCompany(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext, string strBlockReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeleteCompany", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/DeleteCompanyResponse")]
        System.Threading.Tasks.Task<bool> DeleteCompanyAsync(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext, string strBlockReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSavedConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSavedConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSavedConfigurationNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetSavedConfiguration(int intcompanyid, string strtbl, bool blnisinsurance, int intpatienttype, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSavedConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSavedConfigurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSavedConfigurationAsync(int intcompanyid, string strtbl, bool blnisinsurance, int intpatienttype, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyRequisitionMODA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionMODARespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionMODANextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveCompanyRequisitionMODA(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyRequisitionMODA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionMODARespon" +
            "se")]
        System.Threading.Tasks.Task<bool> SaveCompanyRequisitionMODAAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCopyCompanyConfig", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCopyCompanyConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCopyCompanyConfigNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveCopyCompanyConfig(int intFromCID, int intFromGID, int intFromGSPID, int intToCID, int intToGID, int intToGSPID, int intTypeID, int intWorkStationId, int intUserID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCopyCompanyConfig", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCopyCompanyConfigResponse")]
        System.Threading.Tasks.Task<bool> SaveCopyCompanyConfigAsync(int intFromCID, int intFromGID, int intFromGSPID, int intToCID, int intToGID, int intToGSPID, int intTypeID, int intWorkStationId, int intUserID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveInsuranceINCEXC", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveInsuranceINCEXCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveInsuranceINCEXCNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveInsuranceINCEXC(int intinscompid, System.Data.DataTable dtItems, int intPType, bool blntype, int inthospitalid, int intUserid, int intWorkstationid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveInsuranceINCEXC", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveInsuranceINCEXCResponse")]
        System.Threading.Tasks.Task<bool> SaveInsuranceINCEXCAsync(int intinscompid, System.Data.DataTable dtItems, int intPType, bool blntype, int inthospitalid, int intUserid, int intWorkstationid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementGradesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementGradesNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementGrades(int tariffId, string strTable, int intUserId, int intWorkStationId, int intError, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementGradesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementGradesAsync(int tariffId, string strTable, int intUserId, int intWorkStationId, int intError, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGradeLocation", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGradeLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGradeLocationNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveGradeLocation(System.Data.DataSet dsGrades, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGradeLocation", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGradeLocationResponse")]
        System.Threading.Tasks.Task<bool> SaveGradeLocationAsync(System.Data.DataSet dsGrades, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveEligibilitySponserMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveEligibilitySponserMappingRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveEligibilitySponserMappingNex" +
            "tGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveEligibilitySponserMapping(int eligibilityID, System.Data.DataSet dsSponsors, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveEligibilitySponserMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveEligibilitySponserMappingRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> SaveEligibilitySponserMappingAsync(int eligibilityID, System.Data.DataSet dsSponsors, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchVATConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetVATConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetVATConfigurationNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetVATConfiguration(int HospitalID, int IntUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchVATConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetVATConfigurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetVATConfigurationAsync(int HospitalID, int IntUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetVATViewDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetVATViewDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetVATViewDetailsNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetVATViewDetails(int ID, int IntUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetVATViewDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetVATViewDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetVATViewDetailsAsync(int ID, int IntUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveVATConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveVATConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveVATConfigurationNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveVATConfiguration(int ID, int PatientType, System.DateTime EffectiveDate, int HospitalID, System.Data.DataSet dsSaveConfiguration, int UserID, int WORKSTATIONID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveVATConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveVATConfigurationResponse")]
        System.Threading.Tasks.Task<bool> SaveVATConfigurationAsync(int ID, int PatientType, System.DateTime EffectiveDate, int HospitalID, System.Data.DataSet dsSaveConfiguration, int UserID, int WORKSTATIONID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Update30DaysApprovalNotRequired", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/Update30DaysApprovalNotRequiredR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/Update30DaysApprovalNotRequiredN" +
            "extGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool Update30DaysApprovalNotRequired(int CompanyID, int HospitalID, int intUserId, int intWorkStationId, int Is30DaysApprovalNotRequired);
        
        [System.ServiceModel.OperationContractAttribute(Action="Update30DaysApprovalNotRequired", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/Update30DaysApprovalNotRequiredR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> Update30DaysApprovalNotRequiredAsync(int CompanyID, int HospitalID, int intUserId, int intWorkStationId, int Is30DaysApprovalNotRequired);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchNphiesLicences", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchNphiesLicencesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchNphiesLicencesNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchNphiesLicences(int intUserId, int intWorkStationId, int intError, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchNphiesLicences", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchNphiesLicencesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchNphiesLicencesAsync(int intUserId, int intWorkStationId, int intError, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDetailsResponse")]
        void GetDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDetailsResponse")]
        System.Threading.Tasks.Task GetDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyDetails(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetHospitalCompanyDetails(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetailsByDiagIDs", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsByDiagIDsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsByDiagIDsNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyDetailsByDiagIDs(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID, string DiagnosisIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetailsByDiagIDs", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsByDiagIDsRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsByDiagIDsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID, string DiagnosisIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetailsLanguageID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsLanguageIDRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsLanguageIDNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyDetailsLanguageID(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyDetailsLanguageID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyDetailsLanguageIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsLanguageIDAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetailsLanguageID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eIDNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetHospitalCompanyDetailsLanguageID(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetailsLanguageID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsLanguageIDAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchADVProcedureDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchADVProcedureDetailsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchADVProcedureDetailsNextGenC" +
            "ustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchADVProcedureDetails(string ProcedureName, string Type, string Filter, int UserId, int WstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchADVProcedureDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchADVProcedureDetailsResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchADVProcedureDetailsAsync(string ProcedureName, string Type, string Filter, int UserId, int WstationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetailsLanguageIDMODA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eIDMODAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eIDMODANextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetHospitalCompanyDetailsLanguageIDMODA(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalCompanyDetailsLanguageIDMODA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalCompanyDetailsLanguag" +
            "eIDMODAResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsLanguageIDMODAAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPlaces", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPlacesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPlacesNextGenCustomExceptionF" +
            "ault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPlaces(string strCity, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPlaces", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPlacesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPlacesAsync(string strCity, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyRequisition", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionNextGenCus" +
            "tomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveCompanyRequisition(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyRequisition", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionResponse")]
        System.Threading.Tasks.Task<bool> SaveCompanyRequisitionAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePharmacyCollectableConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePharmacyCollectableConfigura" +
            "tionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePharmacyCollectableConfigura" +
            "tionNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SavePharmacyCollectableConfiguration(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePharmacyCollectableConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePharmacyCollectableConfigura" +
            "tionResponse")]
        System.Threading.Tasks.Task<bool> SavePharmacyCollectableConfigurationAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyRequisitionNew", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionNewRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionNewNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveCompanyRequisitionNew(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyRequisitionNew", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyRequisitionNewRespons" +
            "e")]
        System.Threading.Tasks.Task<string> SaveCompanyRequisitionNewAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveRoomRentConfigurationRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveRoomRentConfigurationNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveRoomRentConfiguration(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveRoomRentConfigurationRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> SaveRoomRentConfigurationAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveHospitalRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveHospitalRoomRentConfiguratio" +
            "nResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveHospitalRoomRentConfiguratio" +
            "nNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveHospitalRoomRentConfiguration(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveHospitalRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveHospitalRoomRentConfiguratio" +
            "nResponse")]
        System.Threading.Tasks.Task<bool> SaveHospitalRoomRentConfigurationAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetRoomRentConfigurationResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetRoomRentConfigurationNextGenC" +
            "ustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetRoomRentConfiguration(int intType, int intResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetRoomRentConfigurationResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRoomRentConfigurationAsync(int intType, int intResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalRoomRentConfiguration" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalRoomRentConfiguration" +
            "NextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetHospitalRoomRentConfiguration(int intType, int intResult, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalRoomRentConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalRoomRentConfiguration" +
            "Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalRoomRentConfigurationAsync(int intType, int intResult, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveAgreement(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementResponse")]
        System.Threading.Tasks.Task<bool> SaveAgreementAsync(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreement(int AgreementNo, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementAsync(int AgreementNo, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementType", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementTypeNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementType(int AgreementNo, string Type, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementType", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementTypeAsync(int AgreementNo, string Type, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdminMaster", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAdminMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAdminMasterNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAdminMaster(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdminMaster", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAdminMasterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdminMasterintLanguageID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAdminMasterintLanguageIDRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAdminMasterintLanguageIDNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAdminMasterintLanguageID(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdminMasterintLanguageID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAdminMasterintLanguageIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterintLanguageIDAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServicesNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServices(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServicesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServicesAsync(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServicesWithSortOption", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServicesWithSortOptionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServicesWithSortOptionNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServicesWithSortOption(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError, string strOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServicesWithSortOption", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServicesWithSortOptionRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServicesWithSortOptionAsync(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError, string strOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceType", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTypeNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int GetServiceType(string strServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceType", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTypeResponse")]
        System.Threading.Tasks.Task<int> GetServiceTypeAsync(string strServiceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTypesNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceTypes(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTypesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceTypesAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackage", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SavePackage(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackage", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageResponse")]
        System.Threading.Tasks.Task<bool> SavePackageAsync(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackage", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPackage(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, string strHospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackage", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPackageAsync(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, string strHospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackageTagId", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageTagIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageTagIdNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPackageTagId(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackageTagId", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageTagIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPackageTagIdAsync(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int TagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemsNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceItems(int intType, string strResult, int intLanguageID, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemsAsync(int intType, string strResult, int intLanguageID, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceList", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceListNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPriceList(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceList", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPriceListAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyPriceList", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyPriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyPriceListNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveModifyPriceList(bool bModify, int intHospitalID, int intTariffID, string strPrice, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyPriceList", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyPriceListResponse")]
        System.Threading.Tasks.Task<bool> SaveModifyPriceListAsync(bool bModify, int intHospitalID, int intTariffID, string strPrice, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyPriceListDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyPriceListDetailsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyPriceListDetailsNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveModifyPriceListDetails(bool bModify, int intHospitalID, int intTariffID, System.Data.DataSet dsPrice, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyPriceListDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyPriceListDetailsRespon" +
            "se")]
        System.Threading.Tasks.Task<int> SaveModifyPriceListDetailsAsync(bool bModify, int intHospitalID, int intTariffID, System.Data.DataSet dsPrice, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSlotDuration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSlotDurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSlotDurationNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetSlotDuration(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSlotDuration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSlotDurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSlotDurationAsync(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalSlotDuration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalSlotDurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalSlotDurationNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetHospitalSlotDuration(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetHospitalSlotDuration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetHospitalSlotDurationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalSlotDurationAsync(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyPriceListWithCode", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListWithCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListWithCodeNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool CopyPriceListWithCode(System.Data.DataSet dsSaveCopyPricelist, bool blnCode, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyPriceListWithCode", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListWithCodeResponse")]
        System.Threading.Tasks.Task<bool> CopyPriceListWithCodeAsync(System.Data.DataSet dsSaveCopyPricelist, bool blnCode, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPrices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceItemPrices(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPrices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetICUServiceItemPrices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetICUServiceItemPricesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetICUServiceItemPricesNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetICUServiceItemPrices(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int statusICU);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetICUServiceItemPrices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetICUServiceItemPricesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetICUServiceItemPricesAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int statusICU);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPricesLangId", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesLangIdRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesLangIdNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceItemPricesLangId(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPricesLangId", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesLangIdRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesLangIdAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPricesByPatientType", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesByPatientTyp" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesByPatientTyp" +
            "eNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceItemPricesByPatientType(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId, int intPatientType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPricesByPatientType", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesByPatientTyp" +
            "eResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesByPatientTypeAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId, int intPatientType);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveServiceDependency", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveServiceDependencyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveServiceDependencyNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveServiceDependency(int intTariffID, System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveServiceDependency", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveServiceDependencyResponse")]
        System.Threading.Tasks.Task<bool> SaveServiceDependencyAsync(int intTariffID, System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceDependency", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceDependencyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceDependencyNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceDependency(int intTariffId, int intTableId, int intUserId, int intWorkStationId, int intError, int intLanguageId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceDependency", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceDependencyResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceDependencyAsync(int intTariffId, int intTableId, int intUserId, int intWorkStationId, int intError, int intLanguageId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLOAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLOANextGenCustomExceptionFau" +
            "lt", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveLOA(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLOAResponse")]
        System.Threading.Tasks.Task<bool> SaveLOAAsync(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveHospitalLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveHospitalLOAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveHospitalLOANextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveHospitalLOA(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveHospitalLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveHospitalLOAResponse")]
        System.Threading.Tasks.Task<bool> SaveHospitalLOAAsync(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveLOAOPPacakge", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLOAOPPacakgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLOAOPPacakgeNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveLOAOPPacakge(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int PackageId, int BillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveLOAOPPacakge", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLOAOPPacakgeResponse")]
        System.Threading.Tasks.Task<bool> SaveLOAOPPacakgeAsync(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int PackageId, int BillID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOANextGenCustomExceptionFaul" +
            "t", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetLOA(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLOAAsync(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOAHospital", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAHospitalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAHospitalNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetLOAHospital(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOAHospital", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAHospitalResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLOAHospitalAsync(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSavingStructure", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSavingStructureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSavingStructureNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetSavingStructure();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSavingStructure", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetSavingStructureResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSavingStructureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetOrganizationDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetOrganizationDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetOrganizationDetailsNextGenCus" +
            "tomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetOrganizationDetails(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetOrganizationDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetOrganizationDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetOrganizationDetailsAsync(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementConfigurationRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementConfigurationNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementConfiguration(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementConfigurationRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementConfigurationAsync(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetApprovalStatus", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetApprovalStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetApprovalStatusNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetApprovalStatus(System.Data.DataSet dsApproval);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetApprovalStatus", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetApprovalStatusResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetApprovalStatusAsync(System.Data.DataSet dsApproval);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceMaster", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceMasterNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceMaster(string strType, string strFilter, int intLanguageID, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceMaster", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceMasterResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceMasterAsync(string strType, string strFilter, int intLanguageID, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTariffPriceDependecies", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveTariffPriceDependeciesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveTariffPriceDependeciesNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveTariffPriceDependecies(int intTariffID, int intBedTypeID, string strPrice, int intUserID, int intWorkstationID, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTariffPriceDependecies", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveTariffPriceDependeciesRespon" +
            "se")]
        System.Threading.Tasks.Task<int> SaveTariffPriceDependeciesAsync(int intTariffID, int intBedTypeID, string strPrice, int intUserID, int intWorkstationID, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceTariffDependenciesHospitalWise", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesHospit" +
            "alWiseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesHospit" +
            "alWiseNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPriceTariffDependenciesHospitalWise(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceTariffDependenciesHospitalWise", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesHospit" +
            "alWiseResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPriceTariffDependenciesHospitalWiseAsync(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceTariffDependenciesLangID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesLangID" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesLangID" +
            "NextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPriceTariffDependenciesLangID(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceTariffDependenciesLangID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesLangID" +
            "Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPriceTariffDependenciesLangIDAsync(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceTariffDependencies", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPriceTariffDependencies(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPriceTariffDependencies", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPriceTariffDependenciesRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPriceTariffDependenciesAsync(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllPackagesPrice", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAllPackagesPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAllPackagesPriceNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAllPackagesPrice(int intSerID, string strPkgID, string strHospID, string strTariffID, string strBdID, string strOrdrID, int intTblID, int intUserid, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAllPackagesPrice", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAllPackagesPriceResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllPackagesPriceAsync(int intSerID, string strPkgID, string strHospID, string strTariffID, string strBdID, string strOrdrID, int intTblID, int intUserid, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementBedTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementBedTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementBedTypesNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementBedTypes(int intAgreementID, int intServiceID, int intServiceItemID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkstationID, int intError, int statusICU);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementBedTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementBedTypesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementBedTypesAsync(int intAgreementID, int intServiceID, int intServiceItemID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkstationID, int intError, int statusICU);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementServices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServicesNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementServices(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementServices", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServicesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementServicesAsync(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementServiceItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServiceItemsResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServiceItemsNextGenC" +
            "ustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementServiceItems(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementServiceItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServiceItemsResponse" +
            "")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementServiceItemsAsync(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyPriceListByDataBase", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListByDataBaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListByDataBaseNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool CopyPriceListByDataBase(System.Data.DataSet dsSave);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyPriceListByDataBase", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListByDataBaseResponse")]
        System.Threading.Tasks.Task<bool> CopyPriceListByDataBaseAsync(System.Data.DataSet dsSave);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPricesReport", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesReportRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesReportNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceItemPricesReport(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, string strOrdertypeID, int intTble, string strBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceItemPricesReport", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceItemPricesReportRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesReportAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, string strOrdertypeID, int intTble, string strBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementSpecialisations", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementSpecialisationsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementSpecialisationsNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementSpecialisations(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementSpecialisations", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementSpecialisationsRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementSpecialisationsAsync(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveServiceTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveServiceTaxConfigurationRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveServiceTaxConfigurationNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveServiceTaxConfiguration(System.Data.DataSet dsSendToSave, int intHospitalID, int intFeatureId, int intFunctionId, int intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveServiceTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveServiceTaxConfigurationRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> SaveServiceTaxConfigurationAsync(System.Data.DataSet dsSendToSave, int intHospitalID, int intFeatureId, int intFunctionId, int intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTaxConfigurationRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTaxConfigurationNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceTaxConfiguration(string strTblID, int intArgeemenID, int intBedTypeID, string strServiceID, string strSpecialiseID, int intUserID, int intWorkStationID, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceTaxConfigurationRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceTaxConfigurationAsync(string strTblID, int intArgeemenID, int intBedTypeID, string strServiceID, string strSpecialiseID, int intUserID, int intWorkStationID, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDiscountCategory", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDiscountCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDiscountCategoryNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetDiscountCategory(int intUserId, int intworkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDiscountCategory", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDiscountCategoryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDiscountCategoryAsync(int intUserId, int intworkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyDiscount", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyDiscountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyDiscountNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveModifyDiscount(System.Data.DataSet dsSaveDiscount);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveModifyDiscount", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveModifyDiscountResponse")]
        System.Threading.Tasks.Task<bool> SaveModifyDiscountAsync(System.Data.DataSet dsSaveDiscount);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDiscount", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDiscountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDiscountNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetDiscount(int intDiscountID, string strTbl, int intFeatureID, int intfunctionID, string strCallcontext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDiscount", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDiscountResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDiscountAsync(int intDiscountID, string strTbl, int intFeatureID, int intfunctionID, string strCallcontext, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOACloserData", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOACloserDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOACloserDataNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetLOACloserData(int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOACloserData", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOACloserDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLOACloserDataAsync(int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="LOAForceCloser", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/LOAForceCloserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/LOAForceCloserNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool LOAForceCloser(System.Data.DataSet dsLOACloser);
        
        [System.ServiceModel.OperationContractAttribute(Action="LOAForceCloser", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/LOAForceCloserResponse")]
        System.Threading.Tasks.Task<bool> LOAForceCloserAsync(System.Data.DataSet dsLOACloser);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOAForceCloser", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAForceCloserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAForceCloserNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetLOAForceCloser(int intTableID, string strFilter, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOAForceCloser", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAForceCloserResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLOAForceCloserAsync(int intTableID, string strFilter, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="CommonDeleteInt", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CommonDeleteIntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CommonDeleteIntNextGenCustomExce" +
            "ptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool CommonDeleteInt(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="CommonDeleteInt", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CommonDeleteIntResponse")]
        System.Threading.Tasks.Task<bool> CommonDeleteIntAsync(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePINBlock", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePINBlockResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePINBlockNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SavePINBlock(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePINBlock", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePINBlockResponse")]
        System.Threading.Tasks.Task<bool> SavePINBlockAsync(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdatePINBlock", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/UpdatePINBlockResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/UpdatePINBlockNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool UpdatePINBlock(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdatePINBlock", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/UpdatePINBlockResponse")]
        System.Threading.Tasks.Task<bool> UpdatePINBlockAsync(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPINBlockDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINBlockDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINBlockDetailsNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPINBlockDetails(string strFilter, string strOrder, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPINBlockDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINBlockDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPINBlockDetailsAsync(string strFilter, string strOrder, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPINBlockDetail", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINBlockDetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINBlockDetailNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPINBlockDetail(string PatientID, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPINBlockDetail", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINBlockDetailResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPINBlockDetailAsync(string PatientID, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPINMessages", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINMessagesNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetPINMessages(string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPINMessages", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetPINMessagesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPINMessagesAsync(string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyPriceList", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool CopyPriceList(System.Data.DataSet dsSaveCopyPricelist, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyPriceList", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyPriceListResponse")]
        System.Threading.Tasks.Task<bool> CopyPriceListAsync(System.Data.DataSet dsSaveCopyPricelist, int intLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDoctorWithSpecialisation", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDoctorWithSpecialisationRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDoctorWithSpecialisationNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetDoctorWithSpecialisation(int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDoctorWithSpecialisation", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetDoctorWithSpecialisationRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorWithSpecialisationAsync(int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreementGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementGradesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementGradesNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveAgreementGrades(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, string strTariffName2l, string strTariffCode, bool blnBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreementGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementGradesResponse")]
        System.Threading.Tasks.Task<bool> SaveAgreementGradesAsync(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, string strTariffName2l, string strTariffCode, bool blnBlocked, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyAgreementGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyAgreementGradesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyAgreementGradesNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool CopyAgreementGrades(int SourceTariffID, int TargetTariffID, int SourceGradeID, int TargetGradeID, int fromPatientType, int toPatientType, int workstation, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="CopyAgreementGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CopyAgreementGradesResponse")]
        System.Threading.Tasks.Task<bool> CopyAgreementGradesAsync(int SourceTariffID, int TargetTariffID, int SourceGradeID, int TargetGradeID, int fromPatientType, int toPatientType, int workstation, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTariffGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchTariffGradesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchTariffGradesNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchTariffGrades(int intTariffID, string strTableID, int intUserID, int intWorkstationID, int intLangID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTariffGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchTariffGradesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchTariffGradesAsync(int intTariffID, string strTableID, int intUserID, int intWorkstationID, int intLangID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGeneralExclusions", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGeneralExclusionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGeneralExclusionsNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveGeneralExclusions(System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGeneralExclusions", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGeneralExclusionsResponse")]
        System.Threading.Tasks.Task<bool> SaveGeneralExclusionsAsync(System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveClaimStatusReasons", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveClaimStatusReasonsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveClaimStatusReasonsNextGenCus" +
            "tomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveClaimStatusReasons(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveClaimStatusReasons", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveClaimStatusReasonsResponse")]
        System.Threading.Tasks.Task<bool> SaveClaimStatusReasonsAsync(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchfromAdv", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchfromAdvResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchfromAdvNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchfromAdv(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, System.Nullable<int> intFeatureID, System.Nullable<int> intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchfromAdv", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchfromAdvResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchfromAdvAsync(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, System.Nullable<int> intFeatureID, System.Nullable<int> intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchfromAdvLangID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchfromAdvLangIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchfromAdvLangIDNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchfromAdvLangID(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchfromAdvLangID", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchfromAdvLangIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchfromAdvLangIDAsync(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int LangId);
        
        [System.ServiceModel.OperationContractAttribute(Action="CommonDelete", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CommonDeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CommonDeleteNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool CommonDelete(string strPrName, string strIDFieldName, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="CommonDelete", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/CommonDeleteResponse")]
        System.Threading.Tasks.Task<bool> CommonDeleteAsync(string strPrName, string strIDFieldName, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOAGradeBedTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAGradeBedTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAGradeBedTypesNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetLOAGradeBedTypes(int intCompanyID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLOAGradeBedTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLOAGradeBedTypesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLOAGradeBedTypesAsync(int intCompanyID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchClinicalConditions", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchClinicalConditionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchClinicalConditionsNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchClinicalConditions(int CaseSheetID, string CSTemplateType, string CaseSheetType, string strType, int intUserID, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchClinicalConditions", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchClinicalConditionsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchClinicalConditionsAsync(int CaseSheetID, string CSTemplateType, string CaseSheetType, string strType, int intUserID, int intWorkstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveReferenceCodes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveReferenceCodesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveReferenceCodesNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveReferenceCodes(int intTariffID, System.Data.DataSet dsSave, int UserId, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveReferenceCodes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveReferenceCodesResponse")]
        System.Threading.Tasks.Task<bool> SaveReferenceCodesAsync(int intTariffID, System.Data.DataSet dsSave, int UserId, int WorkStationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMaxCollectable", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetMaxCollectableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetMaxCollectableNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        decimal GetMaxCollectable(System.DateTime dtFromdate, System.DateTime dtToDate, int intPatientID, int intGradeID, int intCompanyID, int intSpecialisationID, int intLOAID, string strtbl, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionId, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetMaxCollectable", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetMaxCollectableResponse")]
        System.Threading.Tasks.Task<decimal> GetMaxCollectableAsync(System.DateTime dtFromdate, System.DateTime dtToDate, int intPatientID, int intGradeID, int intCompanyID, int intSpecialisationID, int intLOAID, string strtbl, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionId, string strCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyGradesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyGradesNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCompanyGrades(string GradeIDs, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCompanyGrades", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCompanyGradesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyGradesAsync(string GradeIDs, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetConsultants", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetConsultantsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetConsultantsNextGenCustomExcep" +
            "tionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetConsultants(int intServiceId, byte btIsMedical, byte btMedicalType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetConsultants", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetConsultantsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetConsultantsAsync(int intServiceId, byte btIsMedical, byte btMedicalType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementService", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServiceNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetAgreementService(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAgreementService", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetAgreementServiceResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementServiceAsync(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBedTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetBedTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetBedTypesNextGenCustomExceptio" +
            "nFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetBedTypes(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetBedTypes", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetBedTypesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBedTypesAsync(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchEmployeedata", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchEmployeedataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchEmployeedataNextGenCustomEx" +
            "ceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchEmployeedata(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchEmployeedata", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchEmployeedataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchSpecialization", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSpecializationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSpecializationNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchSpecialization(string strType, string strFilter, int intUserID, int intWorkstationID, int LangId, string strOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchSpecialization", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSpecializationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchSpecializationAsync(string strType, string strFilter, int intUserID, int intWorkstationID, int LangId, string strOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackages", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackagesNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchPackages(string strType, int intPatientType, int intServiceID, int intPackageID, int intUserID, int intWorkstationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackages", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackagesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPackagesAsync(string strType, int intPatientType, int intServiceID, int intPackageID, int intUserID, int intWorkstationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackageHospital", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageHospitalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageHospitalNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SavePackageHospital(int intPackageID, System.Data.DataTable dsPackage, int intServiceID, int intUserId, int intWorkStationId, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackageHospital", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageHospitalResponse")]
        System.Threading.Tasks.Task<bool> SavePackageHospitalAsync(int intPackageID, System.Data.DataTable dsPackage, int intServiceID, int intUserId, int intWorkStationId, int intError, int intHospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyMappedDocuments", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyMappedDocumentsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyMappedDocumentsNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        int SaveCompanyMappedDocuments(int intCompanyID, int intDocumentID, System.Data.DataSet dsMappedDoc, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveCompanyMappedDocuments", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveCompanyMappedDocumentsRespon" +
            "se")]
        System.Threading.Tasks.Task<int> SaveCompanyMappedDocumentsAsync(int intCompanyID, int intDocumentID, System.Data.DataSet dsMappedDoc, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchMappedCompanyDocuments", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchMappedCompanyDocumentsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchMappedCompanyDocumentsNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchMappedCompanyDocuments(int intCompanyID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchMappedCompanyDocuments", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchMappedCompanyDocumentsRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchMappedCompanyDocumentsAsync(int intCompanyID, int intUserId, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackage_Partone", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackage_PartoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackage_PartoneNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SavePackage_Partone(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext, 
                    string packagecode, 
                    string strRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackage_Partone", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackage_PartoneResponse")]
        System.Threading.Tasks.Task<string> SavePackage_PartoneAsync(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext, 
                    string packagecode, 
                    string strRemarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGenericICDMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGenericICDMappingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGenericICDMappingNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveGenericICDMapping(System.Data.DataSet objDS, int GenericID, int intUserID, int intWorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGenericICDMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGenericICDMappingResponse")]
        System.Threading.Tasks.Task<string> SaveGenericICDMappingAsync(System.Data.DataSet objDS, int GenericID, int intUserID, int intWorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGenericICDMappingbyCode", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGenericICDMappingbyCodeRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGenericICDMappingbyCodeNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveGenericICDMappingbyCode(System.Data.DataSet objDS, string GenericCode, int intUserID, int intWorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveGenericICDMappingbyCode", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveGenericICDMappingbyCodeRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> SaveGenericICDMappingbyCodeAsync(System.Data.DataSet objDS, string GenericCode, int intUserID, int intWorkStationID, int HospitalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchGenericDiseaseDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchGenericDiseaseDetailsRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchGenericDiseaseDetailsNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchGenericDiseaseDetails(int GenericItemID, int intUserId, int intWorkStId, int intHospitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchGenericDiseaseDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchGenericDiseaseDetailsRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchGenericDiseaseDetailsAsync(int GenericItemID, int intUserId, int intWorkStId, int intHospitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchAllGenericDiseaseDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchAllGenericDiseaseDetailsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchAllGenericDiseaseDetailsNex" +
            "tGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchAllGenericDiseaseDetails(int intUserId, int intWorkStId, int intHospitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchAllGenericDiseaseDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchAllGenericDiseaseDetailsRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchAllGenericDiseaseDetailsAsync(int intUserId, int intWorkStId, int intHospitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchGenericItemsWithDiseaseMap", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchGenericItemsWithDiseaseMapR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchGenericItemsWithDiseaseMapN" +
            "extGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchGenericItemsWithDiseaseMap(string diseaseids, int intUserId, int intWorkStId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchGenericItemsWithDiseaseMap", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchGenericItemsWithDiseaseMapR" +
            "esponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchGenericItemsWithDiseaseMapAsync(string diseaseids, int intUserId, int intWorkStId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackage_Parttwo", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackage_ParttwoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackage_ParttwoNextGenCustom" +
            "ExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SavePackage_Parttwo(long lngPackageId, System.Data.DataSet dsPackages, int intPatientType, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, int intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackage_Parttwo", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackage_ParttwoResponse")]
        System.Threading.Tasks.Task<bool> SavePackage_ParttwoAsync(long lngPackageId, System.Data.DataSet dsPackages, int intPatientType, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, int intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetICUConfig", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetICUConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetICUConfigNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string GetICUConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetICUConfig", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetICUConfigResponse")]
        System.Threading.Tasks.Task<string> GetICUConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategorys", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategorysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategorysNextGenCustomExcepti" +
            "onFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCategorys(int Type, string FilterCondition, int UserId, int WorkStationId, int intError, int LanguageID, int FeatureID, int FunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategorys", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategorysResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategorysAsync(int Type, string FilterCondition, int UserId, int WorkStationId, int intError, int LanguageID, int FeatureID, int FunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategoryItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoryItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoryItemsNextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCategoryItems(int CategoryID, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategoryItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoryItemsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryItemsAsync(int CategoryID, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategoryItems_Pharma", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoryItems_PharmaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoryItems_PharmaNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCategoryItems_Pharma(string CategoryIDs, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategoryItems_Pharma", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoryItems_PharmaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryItems_PharmaAsync(string CategoryIDs, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveMappedCategoryItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveMappedCategoryItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveMappedCategoryItemsNextGenCu" +
            "stomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveMappedCategoryItems(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int ServiceID, int UserID, int WorkStationID, bool Blocked, int Error, int HospDeptID, int SpecialiseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveMappedCategoryItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveMappedCategoryItemsResponse")]
        System.Threading.Tasks.Task<bool> SaveMappedCategoryItemsAsync(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int ServiceID, int UserID, int WorkStationID, bool Blocked, int Error, int HospDeptID, int SpecialiseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveMultipleSvcCategoryItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveMultipleSvcCategoryItemsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveMultipleSvcCategoryItemsNext" +
            "GenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveMultipleSvcCategoryItems(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int UserID, int WorkStationID, bool Blocked, int Error);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveMultipleSvcCategoryItems", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveMultipleSvcCategoryItemsResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> SaveMultipleSvcCategoryItemsAsync(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int UserID, int WorkStationID, bool Blocked, int Error);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategories", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoriesNextGenCustomExcept" +
            "ionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetCategories(string tablename, string filter, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCategories", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetCategoriesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync(string tablename, string filter, int intWorkStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveLuxuryTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLuxuryTaxConfigurationRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLuxuryTaxConfigurationNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveLuxuryTaxConfiguration(int LuxuryTaxConfigurationId, decimal CAPAmount, decimal Tax, bool LuxuryTaxRequired, int HospitalID, int UserID, int WorkStationID, int Error);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveLuxuryTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveLuxuryTaxConfigurationRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> SaveLuxuryTaxConfigurationAsync(int LuxuryTaxConfigurationId, decimal CAPAmount, decimal Tax, bool LuxuryTaxRequired, int HospitalID, int UserID, int WorkStationID, int Error);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLuxuryTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLuxuryTaxConfigurationRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLuxuryTaxConfigurationNextGen" +
            "CustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetLuxuryTaxConfiguration(int Type, string FilterCondition, int UserId, int WorkStationId, int Error, int LanguageID, int FeatureID, int FunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetLuxuryTaxConfiguration", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetLuxuryTaxConfigurationRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLuxuryTaxConfigurationAsync(int Type, string FilterCondition, int UserId, int WorkStationId, int Error, int LanguageID, int FeatureID, int FunctionID, string CallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="BlockExistingLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/BlockExistingLOAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/BlockExistingLOANextGenCustomExc" +
            "eptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool BlockExistingLOA(string strCondition, int intWorkStationId, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="BlockExistingLOA", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/BlockExistingLOAResponse")]
        System.Threading.Tasks.Task<bool> BlockExistingLOAAsync(string strCondition, int intWorkStationId, int HospitalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTariffSurgConfigMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveTariffSurgConfigMappingRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveTariffSurgConfigMappingNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        bool SaveTariffSurgConfigMapping(int Tariffid, int facilityid, string Configid, int userID, int WorkStationID, int locationID, int billtypeid, int error);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveTariffSurgConfigMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveTariffSurgConfigMappingRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> SaveTariffSurgConfigMappingAsync(int Tariffid, int facilityid, string Configid, int userID, int WorkStationID, int locationID, int billtypeid, int error);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchSurgeryConfig", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSurgeryConfigResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSurgeryConfigNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchSurgeryConfig(string Configid);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchSurgeryConfig", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSurgeryConfigResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchSurgeryConfigAsync(string Configid);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveSurgeryConfigs", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveSurgeryConfigsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveSurgeryConfigsNextGenCustomE" +
            "xceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveSurgeryConfigs(string strSurgConfigs, string strConfigid, int intUserID, int intWorkstationID, int intError, int intHospid);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveSurgeryConfigs", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveSurgeryConfigsResponse")]
        System.Threading.Tasks.Task<string> SaveSurgeryConfigsAsync(string strSurgConfigs, string strConfigid, int intUserID, int intWorkstationID, int intError, int intHospid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/ServiceContract1/FetchSurgeryConfigurations", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSurgeryConfigurationsTariff" +
            "WiseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSurgeryConfigurationsTariff" +
            "WiseNextGenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet FetchSurgeryConfigurationsTariffWise(int intTariffid, int intBilltype, int intFacilityid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Wipro.NXG/ServiceContract1/FetchSurgeryConfigurations", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchSurgeryConfigurationsTariff" +
            "WiseResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchSurgeryConfigurationsTariffWiseAsync(int intTariffid, int intBilltype, int intFacilityid);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPriceForPackages", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPriceForPackagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPriceForPackagesNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string FetchPriceForPackages(int intPackageID, int intTariffid, int intBedTypeid, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPriceForPackages", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPriceForPackagesResponse")]
        System.Threading.Tasks.Task<string> FetchPriceForPackagesAsync(int intPackageID, int intTariffid, int intBedTypeid, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTariffSurgConfigMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchTariffSurgConfigMappingResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchTariffSurgConfigMappingNext" +
            "GenCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string FetchTariffSurgConfigMapping(int intTariffID, int intFacilityTypeID, int intBillType);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchTariffSurgConfigMapping", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchTariffSurgConfigMappingResp" +
            "onse")]
        System.Threading.Tasks.Task<string> FetchTariffSurgConfigMappingAsync(int intTariffID, int intFacilityTypeID, int intBillType);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceWiseTariffDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceWiseTariffDetailsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceWiseTariffDetailsNextG" +
            "enCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetServiceWiseTariffDetails(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, int HospitalID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetServiceWiseTariffDetails", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetServiceWiseTariffDetailsRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetServiceWiseTariffDetailsAsync(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, int HospitalID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTariffUpdateReport", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetTariffUpdateReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetTariffUpdateReportNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataSet GetTariffUpdateReport(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, string TBL, int HospitalID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTariffUpdateReport", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/GetTariffUpdateReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTariffUpdateReportAsync(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, string TBL, int HospitalID, int intUserID, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackageAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageAgreementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageAgreementNextGenCusto" +
            "mExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SavePackageAgreement(int intPackageID, int intLocationID, string strXML, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SavePackageAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SavePackageAgreementResponse")]
        System.Threading.Tasks.Task<string> SavePackageAgreementAsync(int intPackageID, int intLocationID, string strXML, int intUserID, int intWorkstationID, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackageAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageAgreementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageAgreementNextGenCust" +
            "omExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        System.Data.DataTable FetchPackageAgreement(int intPackageID, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="FetchPackageAgreement", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/FetchPackageAgreementResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> FetchPackageAgreementAsync(int intPackageID, int intUserId, int intWorkStationId, int intError);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreementCoverageRules", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementCoverageRulesRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Reports.ContractMgmtServiceClient.NextGenCustomException), Action="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementCoverageRulesNextGe" +
            "nCustomExceptionFault", Name="NextGenCustomException", Namespace="http://schemas.datacontract.org/2004/07/HIS.CustomException")]
        string SaveAgreementCoverageRules(int Isdefault, int AgreementId, string strXML, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, string intCallContext);
        
        [System.ServiceModel.OperationContractAttribute(Action="SaveAgreementCoverageRules", ReplyAction="http://Wipro.NxG.HIS/ContractMgmtServiceContract/SaveAgreementCoverageRulesRespon" +
            "se")]
        System.Threading.Tasks.Task<string> SaveAgreementCoverageRulesAsync(int Isdefault, int AgreementId, string strXML, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, string intCallContext);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ContractMgmtServiceContractChannel : Reports.ContractMgmtServiceClient.ContractMgmtServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractMgmtServiceContractClient : System.ServiceModel.ClientBase<Reports.ContractMgmtServiceClient.ContractMgmtServiceContract>, Reports.ContractMgmtServiceClient.ContractMgmtServiceContract {
        
        public ContractMgmtServiceContractClient() {
        }
        
        public ContractMgmtServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractMgmtServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractMgmtServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractMgmtServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCoverageRules(int Isdefault, int AgreementId, int AgreementCoverageRuleID, int HospitalId, string Tbl, int intUserID, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.GetCoverageRules(Isdefault, AgreementId, AgreementCoverageRuleID, HospitalId, Tbl, intUserID, intWorkStationId, intError, FeatureId, FunctionId, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCoverageRulesAsync(int Isdefault, int AgreementId, int AgreementCoverageRuleID, int HospitalId, string Tbl, int intUserID, int intWorkStationId, int intError, int FeatureId, int FunctionId, string CallContext) {
            return base.Channel.GetCoverageRulesAsync(Isdefault, AgreementId, AgreementCoverageRuleID, HospitalId, Tbl, intUserID, intWorkStationId, intError, FeatureId, FunctionId, CallContext);
        }
        
        public bool SaveAgreementME(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveAgreementME(intTariffID, dsAgreement, strTariffName, blnBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAgreementMEAsync(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveAgreementMEAsync(intTariffID, dsAgreement, strTariffName, blnBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAgreementConfigurationME(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementConfigurationME(intAgreementID, strType, intPatientType, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementConfigurationMEAsync(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementConfigurationMEAsync(intAgreementID, strType, intPatientType, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetHospitalCompanyDetailsLanguageID_ME(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsLanguageID_ME(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsLanguageID_MEAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsLanguageID_MEAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID, HospitalID);
        }
        
        public System.Data.DataSet GetCompanyDetailsME(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L) {
            return base.Channel.GetCompanyDetailsME(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsMEAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L) {
            return base.Channel.GetCompanyDetailsMEAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L);
        }
        
        public System.Data.DataSet FetchCompanyGrades(string GradeIDs, int intUserID, int intWorkStationID, int intError, int companyID) {
            return base.Channel.FetchCompanyGrades(GradeIDs, intUserID, intWorkStationID, intError, companyID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchCompanyGradesAsync(string GradeIDs, int intUserID, int intWorkStationID, int intError, int companyID) {
            return base.Channel.FetchCompanyGradesAsync(GradeIDs, intUserID, intWorkStationID, intError, companyID);
        }
        
        public System.Data.DataSet FetchPatientDefaultLOAItems(int compantID, int gradeID, int IsCompoundCompany, int patientType, int type, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchPatientDefaultLOAItems(compantID, gradeID, IsCompoundCompany, patientType, type, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPatientDefaultLOAItemsAsync(int compantID, int gradeID, int IsCompoundCompany, int patientType, int type, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.FetchPatientDefaultLOAItemsAsync(compantID, gradeID, IsCompoundCompany, patientType, type, intUserID, intWorkStationID, intError);
        }
        
        public string SaveBulkPatientItems(System.Data.DataTable dtPatientItems, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveBulkPatientItems(dtPatientItems, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<string> SaveBulkPatientItemsAsync(System.Data.DataTable dtPatientItems, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveBulkPatientItemsAsync(dtPatientItems, intUserId, intWorkStationId, intError);
        }
        
        public bool DeleteCompany(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext, string strBlockReason) {
            return base.Channel.DeleteCompany(intIndex, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext, strBlockReason);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCompanyAsync(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext, string strBlockReason) {
            return base.Channel.DeleteCompanyAsync(intIndex, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext, strBlockReason);
        }
        
        public System.Data.DataSet GetSavedConfiguration(int intcompanyid, string strtbl, bool blnisinsurance, int intpatienttype, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetSavedConfiguration(intcompanyid, strtbl, blnisinsurance, intpatienttype, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSavedConfigurationAsync(int intcompanyid, string strtbl, bool blnisinsurance, int intpatienttype, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetSavedConfigurationAsync(intcompanyid, strtbl, blnisinsurance, intpatienttype, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveCompanyRequisitionMODA(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID) {
            return base.Channel.SaveCompanyRequisitionMODA(bModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCompanyRequisitionMODAAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID) {
            return base.Channel.SaveCompanyRequisitionMODAAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct, HospitalID);
        }
        
        public bool SaveCopyCompanyConfig(int intFromCID, int intFromGID, int intFromGSPID, int intToCID, int intToGID, int intToGSPID, int intTypeID, int intWorkStationId, int intUserID, int intError) {
            return base.Channel.SaveCopyCompanyConfig(intFromCID, intFromGID, intFromGSPID, intToCID, intToGID, intToGSPID, intTypeID, intWorkStationId, intUserID, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCopyCompanyConfigAsync(int intFromCID, int intFromGID, int intFromGSPID, int intToCID, int intToGID, int intToGSPID, int intTypeID, int intWorkStationId, int intUserID, int intError) {
            return base.Channel.SaveCopyCompanyConfigAsync(intFromCID, intFromGID, intFromGSPID, intToCID, intToGID, intToGSPID, intTypeID, intWorkStationId, intUserID, intError);
        }
        
        public bool SaveInsuranceINCEXC(int intinscompid, System.Data.DataTable dtItems, int intPType, bool blntype, int inthospitalid, int intUserid, int intWorkstationid, int intError) {
            return base.Channel.SaveInsuranceINCEXC(intinscompid, dtItems, intPType, blntype, inthospitalid, intUserid, intWorkstationid, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveInsuranceINCEXCAsync(int intinscompid, System.Data.DataTable dtItems, int intPType, bool blntype, int inthospitalid, int intUserid, int intWorkstationid, int intError) {
            return base.Channel.SaveInsuranceINCEXCAsync(intinscompid, dtItems, intPType, blntype, inthospitalid, intUserid, intWorkstationid, intError);
        }
        
        public System.Data.DataSet GetAgreementGrades(int tariffId, string strTable, int intUserId, int intWorkStationId, int intError, int LanguageID) {
            return base.Channel.GetAgreementGrades(tariffId, strTable, intUserId, intWorkStationId, intError, LanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementGradesAsync(int tariffId, string strTable, int intUserId, int intWorkStationId, int intError, int LanguageID) {
            return base.Channel.GetAgreementGradesAsync(tariffId, strTable, intUserId, intWorkStationId, intError, LanguageID);
        }
        
        public bool SaveGradeLocation(System.Data.DataSet dsGrades, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveGradeLocation(dsGrades, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveGradeLocationAsync(System.Data.DataSet dsGrades, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveGradeLocationAsync(dsGrades, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveEligibilitySponserMapping(int eligibilityID, System.Data.DataSet dsSponsors, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveEligibilitySponserMapping(eligibilityID, dsSponsors, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveEligibilitySponserMappingAsync(int eligibilityID, System.Data.DataSet dsSponsors, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveEligibilitySponserMappingAsync(eligibilityID, dsSponsors, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetVATConfiguration(int HospitalID, int IntUserId, int intWorkStationId, int intError) {
            return base.Channel.GetVATConfiguration(HospitalID, IntUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetVATConfigurationAsync(int HospitalID, int IntUserId, int intWorkStationId, int intError) {
            return base.Channel.GetVATConfigurationAsync(HospitalID, IntUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetVATViewDetails(int ID, int IntUserId, int intWorkStationId, int intError) {
            return base.Channel.GetVATViewDetails(ID, IntUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetVATViewDetailsAsync(int ID, int IntUserId, int intWorkStationId, int intError) {
            return base.Channel.GetVATViewDetailsAsync(ID, IntUserId, intWorkStationId, intError);
        }
        
        public bool SaveVATConfiguration(int ID, int PatientType, System.DateTime EffectiveDate, int HospitalID, System.Data.DataSet dsSaveConfiguration, int UserID, int WORKSTATIONID) {
            return base.Channel.SaveVATConfiguration(ID, PatientType, EffectiveDate, HospitalID, dsSaveConfiguration, UserID, WORKSTATIONID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveVATConfigurationAsync(int ID, int PatientType, System.DateTime EffectiveDate, int HospitalID, System.Data.DataSet dsSaveConfiguration, int UserID, int WORKSTATIONID) {
            return base.Channel.SaveVATConfigurationAsync(ID, PatientType, EffectiveDate, HospitalID, dsSaveConfiguration, UserID, WORKSTATIONID);
        }
        
        public bool Update30DaysApprovalNotRequired(int CompanyID, int HospitalID, int intUserId, int intWorkStationId, int Is30DaysApprovalNotRequired) {
            return base.Channel.Update30DaysApprovalNotRequired(CompanyID, HospitalID, intUserId, intWorkStationId, Is30DaysApprovalNotRequired);
        }
        
        public System.Threading.Tasks.Task<bool> Update30DaysApprovalNotRequiredAsync(int CompanyID, int HospitalID, int intUserId, int intWorkStationId, int Is30DaysApprovalNotRequired) {
            return base.Channel.Update30DaysApprovalNotRequiredAsync(CompanyID, HospitalID, intUserId, intWorkStationId, Is30DaysApprovalNotRequired);
        }
        
        public System.Data.DataSet FetchNphiesLicences(int intUserId, int intWorkStationId, int intError, int intLanguageID) {
            return base.Channel.FetchNphiesLicences(intUserId, intWorkStationId, intError, intLanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchNphiesLicencesAsync(int intUserId, int intWorkStationId, int intError, int intLanguageID) {
            return base.Channel.FetchNphiesLicencesAsync(intUserId, intWorkStationId, intError, intLanguageID);
        }
        
        public void GetDetails() {
            base.Channel.GetDetails();
        }
        
        public System.Threading.Tasks.Task GetDetailsAsync() {
            return base.Channel.GetDetailsAsync();
        }
        
        public System.Data.DataSet GetCompanyDetails(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L) {
            return base.Channel.GetCompanyDetails(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L) {
            return base.Channel.GetCompanyDetailsAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L);
        }
        
        public System.Data.DataSet GetHospitalCompanyDetails(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetails(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, HospitalID);
        }
        
        public System.Data.DataSet GetCompanyDetailsByDiagIDs(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID, string DiagnosisIDs) {
            return base.Channel.GetCompanyDetailsByDiagIDs(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, HospitalID, DiagnosisIDs);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsByDiagIDsAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int HospitalID, string DiagnosisIDs) {
            return base.Channel.GetCompanyDetailsByDiagIDsAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, HospitalID, DiagnosisIDs);
        }
        
        public System.Data.DataSet GetCompanyDetailsLanguageID(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID) {
            return base.Channel.GetCompanyDetailsLanguageID(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyDetailsLanguageIDAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID) {
            return base.Channel.GetCompanyDetailsLanguageIDAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID);
        }
        
        public System.Data.DataSet GetHospitalCompanyDetailsLanguageID(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsLanguageID(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsLanguageIDAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsLanguageIDAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID, HospitalID);
        }
        
        public System.Data.DataSet FetchADVProcedureDetails(string ProcedureName, string Type, string Filter, int UserId, int WstationId, int intError) {
            return base.Channel.FetchADVProcedureDetails(ProcedureName, Type, Filter, UserId, WstationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchADVProcedureDetailsAsync(string ProcedureName, string Type, string Filter, int UserId, int WstationId, int intError) {
            return base.Channel.FetchADVProcedureDetailsAsync(ProcedureName, Type, Filter, UserId, WstationId, intError);
        }
        
        public System.Data.DataSet GetHospitalCompanyDetailsLanguageIDMODA(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsLanguageIDMODA(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalCompanyDetailsLanguageIDMODAAsync(int intCompanyID, string strCompanyName, string strCompanyType, string strTable, int intUserId, int intWorkStationId, int intError, string strCompanyName2L, int LanguageID, int HospitalID) {
            return base.Channel.GetHospitalCompanyDetailsLanguageIDMODAAsync(intCompanyID, strCompanyName, strCompanyType, strTable, intUserId, intWorkStationId, intError, strCompanyName2L, LanguageID, HospitalID);
        }
        
        public System.Data.DataSet GetPlaces(string strCity, int intUserId, int intWorkStationId) {
            return base.Channel.GetPlaces(strCity, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPlacesAsync(string strCity, int intUserId, int intWorkStationId) {
            return base.Channel.GetPlacesAsync(strCity, intUserId, intWorkStationId);
        }
        
        public bool SaveCompanyRequisition(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID) {
            return base.Channel.SaveCompanyRequisition(bModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCompanyRequisitionAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, System.Data.DataSet dsSave, System.Data.DataSet dsDeduct, int HospitalID) {
            return base.Channel.SaveCompanyRequisitionAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError, dsSave, dsDeduct, HospitalID);
        }
        
        public bool SavePharmacyCollectableConfiguration(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SavePharmacyCollectableConfiguration(bModify, dsRequisition, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SavePharmacyCollectableConfigurationAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SavePharmacyCollectableConfigurationAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public string SaveCompanyRequisitionNew(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveCompanyRequisitionNew(bModify, dsRequisition, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<string> SaveCompanyRequisitionNewAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveCompanyRequisitionNewAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public bool SaveRoomRentConfiguration(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveRoomRentConfiguration(bModify, dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRoomRentConfigurationAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveRoomRentConfigurationAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveHospitalRoomRentConfiguration(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveHospitalRoomRentConfiguration(bModify, dsRequisition, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveHospitalRoomRentConfigurationAsync(bool bModify, System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveHospitalRoomRentConfigurationAsync(bModify, dsRequisition, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Data.DataSet GetRoomRentConfiguration(int intType, int intResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetRoomRentConfiguration(intType, intResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRoomRentConfigurationAsync(int intType, int intResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetRoomRentConfigurationAsync(intType, intResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetHospitalRoomRentConfiguration(int intType, int intResult, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.GetHospitalRoomRentConfiguration(intType, intResult, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalRoomRentConfigurationAsync(int intType, int intResult, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.GetHospitalRoomRentConfigurationAsync(intType, intResult, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public bool SaveAgreement(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveAgreement(intTariffID, dsAgreement, strTariffName, blnBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAgreementAsync(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, bool blnBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveAgreementAsync(intTariffID, dsAgreement, strTariffName, blnBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAgreement(int AgreementNo, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreement(AgreementNo, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementAsync(int AgreementNo, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementAsync(AgreementNo, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetAgreementType(int AgreementNo, string Type, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementType(AgreementNo, Type, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementTypeAsync(int AgreementNo, string Type, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementTypeAsync(AgreementNo, Type, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetAdminMaster(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAdminMaster(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetAdminMasterAsync(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAdminMasterintLanguageID(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID) {
            return base.Channel.GetAdminMasterintLanguageID(intType, strResult, intUserId, intWorkStationId, intError, intLanguageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdminMasterintLanguageIDAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError, int intLanguageID) {
            return base.Channel.GetAdminMasterintLanguageIDAsync(intType, strResult, intUserId, intWorkStationId, intError, intLanguageID);
        }
        
        public System.Data.DataSet GetServices(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServices(intTableId, strFilter, IntUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServicesAsync(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServicesAsync(intTableId, strFilter, IntUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetServicesWithSortOption(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError, string strOrder) {
            return base.Channel.GetServicesWithSortOption(intTableId, strFilter, IntUserId, intWorkStationId, intError, strOrder);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServicesWithSortOptionAsync(int intTableId, string strFilter, int IntUserId, int intWorkStationId, int intError, string strOrder) {
            return base.Channel.GetServicesWithSortOptionAsync(intTableId, strFilter, IntUserId, intWorkStationId, intError, strOrder);
        }
        
        public int GetServiceType(string strServiceType) {
            return base.Channel.GetServiceType(strServiceType);
        }
        
        public System.Threading.Tasks.Task<int> GetServiceTypeAsync(string strServiceType) {
            return base.Channel.GetServiceTypeAsync(strServiceType);
        }
        
        public System.Data.DataSet GetServiceTypes(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceTypes(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceTypesAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceTypesAsync(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public bool SavePackage(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext) {
            return base.Channel.SavePackage(lngPackageId, strPackageName, strPackageName2L, blnNoDayLimit, intMaxdays, intStartBefore, strWithEffectDate, strEndDate, blnIsDOA, intTariffID, dsPackages, blnBlocked, intPatientType, intUserId, intWorkStationId, intError, intGradeID, strHospId, intFeatureId, intFunctionId, intCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> SavePackageAsync(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext) {
            return base.Channel.SavePackageAsync(lngPackageId, strPackageName, strPackageName2L, blnNoDayLimit, intMaxdays, intStartBefore, strWithEffectDate, strEndDate, blnIsDOA, intTariffID, dsPackages, blnBlocked, intPatientType, intUserId, intWorkStationId, intError, intGradeID, strHospId, intFeatureId, intFunctionId, intCallContext);
        }
        
        public System.Data.DataSet FetchPackage(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, string strHospitalId) {
            return base.Channel.FetchPackage(lngPackageId, intId, intLevel, strTableId, intUserId, intWorkStationId, intError, strHospitalId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPackageAsync(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, string strHospitalId) {
            return base.Channel.FetchPackageAsync(lngPackageId, intId, intLevel, strTableId, intUserId, intWorkStationId, intError, strHospitalId);
        }
        
        public System.Data.DataSet FetchPackageTagId(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.FetchPackageTagId(lngPackageId, intId, intLevel, strTableId, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPackageTagIdAsync(long lngPackageId, int intId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int TagId) {
            return base.Channel.FetchPackageTagIdAsync(lngPackageId, intId, intLevel, strTableId, intUserId, intWorkStationId, intError, TagId);
        }
        
        public System.Data.DataSet GetServiceItems(int intType, string strResult, int intLanguageID, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceItems(intType, strResult, intLanguageID, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemsAsync(int intType, string strResult, int intLanguageID, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceItemsAsync(intType, strResult, intLanguageID, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetPriceList(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetPriceList(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPriceListAsync(int intType, string strResult, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetPriceListAsync(intType, strResult, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveModifyPriceList(bool bModify, int intHospitalID, int intTariffID, string strPrice, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveModifyPriceList(bModify, intHospitalID, intTariffID, strPrice, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyPriceListAsync(bool bModify, int intHospitalID, int intTariffID, string strPrice, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveModifyPriceListAsync(bModify, intHospitalID, intTariffID, strPrice, intUserId, intWorkStationId, intError);
        }
        
        public int SaveModifyPriceListDetails(bool bModify, int intHospitalID, int intTariffID, System.Data.DataSet dsPrice, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveModifyPriceListDetails(bModify, intHospitalID, intTariffID, dsPrice, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<int> SaveModifyPriceListDetailsAsync(bool bModify, int intHospitalID, int intTariffID, System.Data.DataSet dsPrice, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveModifyPriceListDetailsAsync(bModify, intHospitalID, intTariffID, dsPrice, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetSlotDuration(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError) {
            return base.Channel.GetSlotDuration(intServiceID, intServiceItemID, intTblID, intUserID, intWorkStation, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSlotDurationAsync(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError) {
            return base.Channel.GetSlotDurationAsync(intServiceID, intServiceItemID, intTblID, intUserID, intWorkStation, intError);
        }
        
        public System.Data.DataSet GetHospitalSlotDuration(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError, int HospitalID) {
            return base.Channel.GetHospitalSlotDuration(intServiceID, intServiceItemID, intTblID, intUserID, intWorkStation, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHospitalSlotDurationAsync(int intServiceID, int intServiceItemID, int intTblID, int intUserID, int intWorkStation, int intError, int HospitalID) {
            return base.Channel.GetHospitalSlotDurationAsync(intServiceID, intServiceItemID, intTblID, intUserID, intWorkStation, intError, HospitalID);
        }
        
        public bool CopyPriceListWithCode(System.Data.DataSet dsSaveCopyPricelist, bool blnCode, int intLanguageID) {
            return base.Channel.CopyPriceListWithCode(dsSaveCopyPricelist, blnCode, intLanguageID);
        }
        
        public System.Threading.Tasks.Task<bool> CopyPriceListWithCodeAsync(System.Data.DataSet dsSaveCopyPricelist, bool blnCode, int intLanguageID) {
            return base.Channel.CopyPriceListWithCodeAsync(dsSaveCopyPricelist, blnCode, intLanguageID);
        }
        
        public System.Data.DataSet GetServiceItemPrices(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceItemPrices(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceItemPricesAsync(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetICUServiceItemPrices(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int statusICU) {
            return base.Channel.GetICUServiceItemPrices(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError, statusICU);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetICUServiceItemPricesAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int statusICU) {
            return base.Channel.GetICUServiceItemPricesAsync(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError, statusICU);
        }
        
        public System.Data.DataSet GetServiceItemPricesLangId(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId) {
            return base.Channel.GetServiceItemPricesLangId(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError, LangId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesLangIdAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId) {
            return base.Channel.GetServiceItemPricesLangIdAsync(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError, LangId);
        }
        
        public System.Data.DataSet GetServiceItemPricesByPatientType(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId, int intPatientType) {
            return base.Channel.GetServiceItemPricesByPatientType(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError, LangId, intPatientType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesByPatientTypeAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, int intTble, int intUserId, int intWorkStationId, int intError, int LangId, int intPatientType) {
            return base.Channel.GetServiceItemPricesByPatientTypeAsync(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, intTble, intUserId, intWorkStationId, intError, LangId, intPatientType);
        }
        
        public bool SaveServiceDependency(int intTariffID, System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intError, int intHospitalID) {
            return base.Channel.SaveServiceDependency(intTariffID, dsConfig, intUserId, intWorkStationId, intError, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveServiceDependencyAsync(int intTariffID, System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intError, int intHospitalID) {
            return base.Channel.SaveServiceDependencyAsync(intTariffID, dsConfig, intUserId, intWorkStationId, intError, intHospitalID);
        }
        
        public System.Data.DataSet GetServiceDependency(int intTariffId, int intTableId, int intUserId, int intWorkStationId, int intError, int intLanguageId, int intHospitalID) {
            return base.Channel.GetServiceDependency(intTariffId, intTableId, intUserId, intWorkStationId, intError, intLanguageId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceDependencyAsync(int intTariffId, int intTableId, int intUserId, int intWorkStationId, int intError, int intLanguageId, int intHospitalID) {
            return base.Channel.GetServiceDependencyAsync(intTariffId, intTableId, intUserId, intWorkStationId, intError, intLanguageId, intHospitalID);
        }
        
        public bool SaveLOA(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveLOA(dsLOA, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveLOAAsync(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveLOAAsync(dsLOA, intUserId, intWorkStationId, intError);
        }
        
        public bool SaveHospitalLOA(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveHospitalLOA(dsLOA, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveHospitalLOAAsync(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int HospitalID) {
            return base.Channel.SaveHospitalLOAAsync(dsLOA, intUserId, intWorkStationId, intError, HospitalID);
        }
        
        public bool SaveLOAOPPacakge(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int PackageId, int BillID) {
            return base.Channel.SaveLOAOPPacakge(dsLOA, intUserId, intWorkStationId, intError, PackageId, BillID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveLOAOPPacakgeAsync(System.Data.DataSet dsLOA, int intUserId, int intWorkStationId, int intError, int PackageId, int BillID) {
            return base.Channel.SaveLOAOPPacakgeAsync(dsLOA, intUserId, intWorkStationId, intError, PackageId, BillID);
        }
        
        public System.Data.DataSet GetLOA(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.GetLOA(intLetterId, intLevel, strTableId, intUserId, intWorkStationId, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLOAAsync(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.GetLOAAsync(intLetterId, intLevel, strTableId, intUserId, intWorkStationId, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet GetLOAHospital(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext, int HospitalID) {
            return base.Channel.GetLOAHospital(intLetterId, intLevel, strTableId, intUserId, intWorkStationId, intError, intFeatureID, intFunctionID, strCallContext, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLOAHospitalAsync(int intLetterId, int intLevel, string strTableId, int intUserId, int intWorkStationId, int intError, int intFeatureID, int intFunctionID, string strCallContext, int HospitalID) {
            return base.Channel.GetLOAHospitalAsync(intLetterId, intLevel, strTableId, intUserId, intWorkStationId, intError, intFeatureID, intFunctionID, strCallContext, HospitalID);
        }
        
        public System.Data.DataSet GetSavingStructure() {
            return base.Channel.GetSavingStructure();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSavingStructureAsync() {
            return base.Channel.GetSavingStructureAsync();
        }
        
        public System.Data.DataSet GetOrganizationDetails(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetOrganizationDetails(intTableId, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetOrganizationDetailsAsync(int intTableId, string strFilter, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetOrganizationDetailsAsync(intTableId, strFilter, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAgreementConfiguration(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementConfiguration(intAgreementID, strType, intPatientType, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementConfigurationAsync(int intAgreementID, string strType, int intPatientType, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetAgreementConfigurationAsync(intAgreementID, strType, intPatientType, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetApprovalStatus(System.Data.DataSet dsApproval) {
            return base.Channel.GetApprovalStatus(dsApproval);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetApprovalStatusAsync(System.Data.DataSet dsApproval) {
            return base.Channel.GetApprovalStatusAsync(dsApproval);
        }
        
        public System.Data.DataSet GetServiceMaster(string strType, string strFilter, int intLanguageID, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceMaster(strType, strFilter, intLanguageID, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceMasterAsync(string strType, string strFilter, int intLanguageID, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceMasterAsync(strType, strFilter, intLanguageID, intUserId, intWorkStationId, intError);
        }
        
        public int SaveTariffPriceDependecies(int intTariffID, int intBedTypeID, string strPrice, int intUserID, int intWorkstationID, int intError, int intHospitalID) {
            return base.Channel.SaveTariffPriceDependecies(intTariffID, intBedTypeID, strPrice, intUserID, intWorkstationID, intError, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<int> SaveTariffPriceDependeciesAsync(int intTariffID, int intBedTypeID, string strPrice, int intUserID, int intWorkstationID, int intError, int intHospitalID) {
            return base.Channel.SaveTariffPriceDependeciesAsync(intTariffID, intBedTypeID, strPrice, intUserID, intWorkstationID, intError, intHospitalID);
        }
        
        public System.Data.DataSet GetPriceTariffDependenciesHospitalWise(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID, int intHospitalID) {
            return base.Channel.GetPriceTariffDependenciesHospitalWise(strTariffID, strBedTypeID, strParentTariffID, strParentBedTypeID, intUserID, intWorkstationID, intError, languageID, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPriceTariffDependenciesHospitalWiseAsync(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID, int intHospitalID) {
            return base.Channel.GetPriceTariffDependenciesHospitalWiseAsync(strTariffID, strBedTypeID, strParentTariffID, strParentBedTypeID, intUserID, intWorkstationID, intError, languageID, intHospitalID);
        }
        
        public System.Data.DataSet GetPriceTariffDependenciesLangID(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID) {
            return base.Channel.GetPriceTariffDependenciesLangID(strTariffID, strBedTypeID, strParentTariffID, strParentBedTypeID, intUserID, intWorkstationID, intError, languageID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPriceTariffDependenciesLangIDAsync(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError, int languageID) {
            return base.Channel.GetPriceTariffDependenciesLangIDAsync(strTariffID, strBedTypeID, strParentTariffID, strParentBedTypeID, intUserID, intWorkstationID, intError, languageID);
        }
        
        public System.Data.DataSet GetPriceTariffDependencies(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.GetPriceTariffDependencies(strTariffID, strBedTypeID, strParentTariffID, strParentBedTypeID, intUserID, intWorkstationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPriceTariffDependenciesAsync(string strTariffID, string strBedTypeID, string strParentTariffID, string strParentBedTypeID, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.GetPriceTariffDependenciesAsync(strTariffID, strBedTypeID, strParentTariffID, strParentBedTypeID, intUserID, intWorkstationID, intError);
        }
        
        public System.Data.DataSet GetAllPackagesPrice(int intSerID, string strPkgID, string strHospID, string strTariffID, string strBdID, string strOrdrID, int intTblID, int intUserid, int intWorkStationId, int intError) {
            return base.Channel.GetAllPackagesPrice(intSerID, strPkgID, strHospID, strTariffID, strBdID, strOrdrID, intTblID, intUserid, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllPackagesPriceAsync(int intSerID, string strPkgID, string strHospID, string strTariffID, string strBdID, string strOrdrID, int intTblID, int intUserid, int intWorkStationId, int intError) {
            return base.Channel.GetAllPackagesPriceAsync(intSerID, strPkgID, strHospID, strTariffID, strBdID, strOrdrID, intTblID, intUserid, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAgreementBedTypes(int intAgreementID, int intServiceID, int intServiceItemID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkstationID, int intError, int statusICU) {
            return base.Channel.GetAgreementBedTypes(intAgreementID, intServiceID, intServiceItemID, intPatientType, intLocationID, intLanguageID, intUserID, intWorkstationID, intError, statusICU);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementBedTypesAsync(int intAgreementID, int intServiceID, int intServiceItemID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkstationID, int intError, int statusICU) {
            return base.Channel.GetAgreementBedTypesAsync(intAgreementID, intServiceID, intServiceItemID, intPatientType, intLocationID, intLanguageID, intUserID, intWorkstationID, intError, statusICU);
        }
        
        public System.Data.DataSet GetAgreementServices(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementServices(intAgreementID, intPatientType, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementServicesAsync(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementServicesAsync(intAgreementID, intPatientType, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAgreementServiceItems(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementServiceItems(intAgreementID, intServiceID, intPatientType, intLocationID, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementServiceItemsAsync(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementServiceItemsAsync(intAgreementID, intServiceID, intPatientType, intLocationID, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public bool CopyPriceListByDataBase(System.Data.DataSet dsSave) {
            return base.Channel.CopyPriceListByDataBase(dsSave);
        }
        
        public System.Threading.Tasks.Task<bool> CopyPriceListByDataBaseAsync(System.Data.DataSet dsSave) {
            return base.Channel.CopyPriceListByDataBaseAsync(dsSave);
        }
        
        public System.Data.DataSet GetServiceItemPricesReport(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, string strOrdertypeID, int intTble, string strBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceItemPricesReport(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, strOrdertypeID, intTble, strBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceItemPricesReportAsync(int intServiceID, string strServiceItemID, int intHospitalID, int intTariffId, string strBedTypeID, string strOrdertypeID, int intTble, string strBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.GetServiceItemPricesReportAsync(intServiceID, strServiceItemID, intHospitalID, intTariffId, strBedTypeID, strOrdertypeID, intTble, strBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetAgreementSpecialisations(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementSpecialisations(intAgreementID, intServiceID, intPatientType, intLocationID, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementSpecialisationsAsync(int intAgreementID, int intServiceID, int intPatientType, int intLocationID, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementSpecialisationsAsync(intAgreementID, intServiceID, intPatientType, intLocationID, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public bool SaveServiceTaxConfiguration(System.Data.DataSet dsSendToSave, int intHospitalID, int intFeatureId, int intFunctionId, int intCallContext) {
            return base.Channel.SaveServiceTaxConfiguration(dsSendToSave, intHospitalID, intFeatureId, intFunctionId, intCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> SaveServiceTaxConfigurationAsync(System.Data.DataSet dsSendToSave, int intHospitalID, int intFeatureId, int intFunctionId, int intCallContext) {
            return base.Channel.SaveServiceTaxConfigurationAsync(dsSendToSave, intHospitalID, intFeatureId, intFunctionId, intCallContext);
        }
        
        public System.Data.DataSet GetServiceTaxConfiguration(string strTblID, int intArgeemenID, int intBedTypeID, string strServiceID, string strSpecialiseID, int intUserID, int intWorkStationID, int intError, int intHospitalID) {
            return base.Channel.GetServiceTaxConfiguration(strTblID, intArgeemenID, intBedTypeID, strServiceID, strSpecialiseID, intUserID, intWorkStationID, intError, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceTaxConfigurationAsync(string strTblID, int intArgeemenID, int intBedTypeID, string strServiceID, string strSpecialiseID, int intUserID, int intWorkStationID, int intError, int intHospitalID) {
            return base.Channel.GetServiceTaxConfigurationAsync(strTblID, intArgeemenID, intBedTypeID, strServiceID, strSpecialiseID, intUserID, intWorkStationID, intError, intHospitalID);
        }
        
        public System.Data.DataSet GetDiscountCategory(int intUserId, int intworkStationID, int intError) {
            return base.Channel.GetDiscountCategory(intUserId, intworkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDiscountCategoryAsync(int intUserId, int intworkStationID, int intError) {
            return base.Channel.GetDiscountCategoryAsync(intUserId, intworkStationID, intError);
        }
        
        public bool SaveModifyDiscount(System.Data.DataSet dsSaveDiscount) {
            return base.Channel.SaveModifyDiscount(dsSaveDiscount);
        }
        
        public System.Threading.Tasks.Task<bool> SaveModifyDiscountAsync(System.Data.DataSet dsSaveDiscount) {
            return base.Channel.SaveModifyDiscountAsync(dsSaveDiscount);
        }
        
        public System.Data.DataSet GetDiscount(int intDiscountID, string strTbl, int intFeatureID, int intfunctionID, string strCallcontext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDiscount(intDiscountID, strTbl, intFeatureID, intfunctionID, strCallcontext, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDiscountAsync(int intDiscountID, string strTbl, int intFeatureID, int intfunctionID, string strCallcontext, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDiscountAsync(intDiscountID, strTbl, intFeatureID, intfunctionID, strCallcontext, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetLOACloserData(int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetLOACloserData(intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLOACloserDataAsync(int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetLOACloserDataAsync(intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public bool LOAForceCloser(System.Data.DataSet dsLOACloser) {
            return base.Channel.LOAForceCloser(dsLOACloser);
        }
        
        public System.Threading.Tasks.Task<bool> LOAForceCloserAsync(System.Data.DataSet dsLOACloser) {
            return base.Channel.LOAForceCloserAsync(dsLOACloser);
        }
        
        public System.Data.DataSet GetLOAForceCloser(int intTableID, string strFilter, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetLOAForceCloser(intTableID, strFilter, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLOAForceCloserAsync(int intTableID, string strFilter, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetLOAForceCloserAsync(intTableID, strFilter, intUserID, intWorkStationID, intError);
        }
        
        public bool CommonDeleteInt(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.CommonDeleteInt(intIndex, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> CommonDeleteIntAsync(short intIndex, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.CommonDeleteIntAsync(intIndex, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public bool SavePINBlock(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SavePINBlock(dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SavePINBlockAsync(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SavePINBlockAsync(dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public bool UpdatePINBlock(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.UpdatePINBlock(dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePINBlockAsync(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.UpdatePINBlockAsync(dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetPINBlockDetails(string strFilter, string strOrder, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext) {
            return base.Channel.GetPINBlockDetails(strFilter, strOrder, intUserId, intWorkStationId, intError, intFeatureId, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPINBlockDetailsAsync(string strFilter, string strOrder, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext) {
            return base.Channel.GetPINBlockDetailsAsync(strFilter, strOrder, intUserId, intWorkStationId, intError, intFeatureId, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet GetPINBlockDetail(string PatientID, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext) {
            return base.Channel.GetPINBlockDetail(PatientID, intUserId, intWorkStationId, intError, intFeatureId, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPINBlockDetailAsync(string PatientID, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionID, string strCallContext) {
            return base.Channel.GetPINBlockDetailAsync(PatientID, intUserId, intWorkStationId, intError, intFeatureId, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet GetPINMessages(string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.GetPINMessages(strFilter, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPINMessagesAsync(string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.GetPINMessagesAsync(strFilter, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public bool CopyPriceList(System.Data.DataSet dsSaveCopyPricelist, int intLanguageID) {
            return base.Channel.CopyPriceList(dsSaveCopyPricelist, intLanguageID);
        }
        
        public System.Threading.Tasks.Task<bool> CopyPriceListAsync(System.Data.DataSet dsSaveCopyPricelist, int intLanguageID) {
            return base.Channel.CopyPriceListAsync(dsSaveCopyPricelist, intLanguageID);
        }
        
        public System.Data.DataSet GetDoctorWithSpecialisation(int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorWithSpecialisation(intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDoctorWithSpecialisationAsync(int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetDoctorWithSpecialisationAsync(intUserID, intWorkStationID, intError);
        }
        
        public bool SaveAgreementGrades(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, string strTariffName2l, string strTariffCode, bool blnBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveAgreementGrades(intTariffID, dsAgreement, strTariffName, strTariffName2l, strTariffCode, blnBlocked, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAgreementGradesAsync(int intTariffID, System.Data.DataSet dsAgreement, string strTariffName, string strTariffName2l, string strTariffCode, bool blnBlocked, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveAgreementGradesAsync(intTariffID, dsAgreement, strTariffName, strTariffName2l, strTariffCode, blnBlocked, intUserId, intWorkStationId, intError);
        }
        
        public bool CopyAgreementGrades(int SourceTariffID, int TargetTariffID, int SourceGradeID, int TargetGradeID, int fromPatientType, int toPatientType, int workstation, int userid) {
            return base.Channel.CopyAgreementGrades(SourceTariffID, TargetTariffID, SourceGradeID, TargetGradeID, fromPatientType, toPatientType, workstation, userid);
        }
        
        public System.Threading.Tasks.Task<bool> CopyAgreementGradesAsync(int SourceTariffID, int TargetTariffID, int SourceGradeID, int TargetGradeID, int fromPatientType, int toPatientType, int workstation, int userid) {
            return base.Channel.CopyAgreementGradesAsync(SourceTariffID, TargetTariffID, SourceGradeID, TargetGradeID, fromPatientType, toPatientType, workstation, userid);
        }
        
        public System.Data.DataSet FetchTariffGrades(int intTariffID, string strTableID, int intUserID, int intWorkstationID, int intLangID) {
            return base.Channel.FetchTariffGrades(intTariffID, strTableID, intUserID, intWorkstationID, intLangID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchTariffGradesAsync(int intTariffID, string strTableID, int intUserID, int intWorkstationID, int intLangID) {
            return base.Channel.FetchTariffGradesAsync(intTariffID, strTableID, intUserID, intWorkstationID, intLangID);
        }
        
        public bool SaveGeneralExclusions(System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SaveGeneralExclusions(dsConfig, intUserId, intWorkStationId, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveGeneralExclusionsAsync(System.Data.DataSet dsConfig, int intUserId, int intWorkStationId, int intHospitalID) {
            return base.Channel.SaveGeneralExclusionsAsync(dsConfig, intUserId, intWorkStationId, intHospitalID);
        }
        
        public bool SaveClaimStatusReasons(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveClaimStatusReasons(dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<bool> SaveClaimStatusReasonsAsync(System.Data.DataSet dsRequisition, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.SaveClaimStatusReasonsAsync(dsRequisition, intUserId, intWorkStationId, intError);
        }
        
        public System.Data.DataSet FetchfromAdv(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, System.Nullable<int> intFeatureID, System.Nullable<int> intFunctionID, string strCallContext) {
            return base.Channel.FetchfromAdv(strProcedureName, strType, strFilter, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchfromAdvAsync(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, System.Nullable<int> intFeatureID, System.Nullable<int> intFunctionID, string strCallContext) {
            return base.Channel.FetchfromAdvAsync(strProcedureName, strType, strFilter, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet FetchfromAdvLangID(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int LangId) {
            return base.Channel.FetchfromAdvLangID(strProcedureName, strType, strFilter, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext, LangId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchfromAdvLangIDAsync(string strProcedureName, string strType, string strFilter, int intUserID, int intWorkstationID, int intFeatureID, int intFunctionID, string strCallContext, int LangId) {
            return base.Channel.FetchfromAdvLangIDAsync(strProcedureName, strType, strFilter, intUserID, intWorkstationID, intFeatureID, intFunctionID, strCallContext, LangId);
        }
        
        public bool CommonDelete(string strPrName, string strIDFieldName, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.CommonDelete(strPrName, strIDFieldName, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> CommonDeleteAsync(string strPrName, string strIDFieldName, int intIDValue, bool blnBit, int intUserID, int intWorkStation, int intError, int intFeatureID, int intFunctionID, string strCallContext) {
            return base.Channel.CommonDeleteAsync(strPrName, strIDFieldName, intIDValue, blnBit, intUserID, intWorkStation, intError, intFeatureID, intFunctionID, strCallContext);
        }
        
        public System.Data.DataSet GetLOAGradeBedTypes(int intCompanyID, int intUserId, int intWorkStationId) {
            return base.Channel.GetLOAGradeBedTypes(intCompanyID, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLOAGradeBedTypesAsync(int intCompanyID, int intUserId, int intWorkStationId) {
            return base.Channel.GetLOAGradeBedTypesAsync(intCompanyID, intUserId, intWorkStationId);
        }
        
        public System.Data.DataSet FetchClinicalConditions(int CaseSheetID, string CSTemplateType, string CaseSheetType, string strType, int intUserID, int intWorkstationID) {
            return base.Channel.FetchClinicalConditions(CaseSheetID, CSTemplateType, CaseSheetType, strType, intUserID, intWorkstationID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchClinicalConditionsAsync(int CaseSheetID, string CSTemplateType, string CaseSheetType, string strType, int intUserID, int intWorkstationID) {
            return base.Channel.FetchClinicalConditionsAsync(CaseSheetID, CSTemplateType, CaseSheetType, strType, intUserID, intWorkstationID);
        }
        
        public bool SaveReferenceCodes(int intTariffID, System.Data.DataSet dsSave, int UserId, int WorkStationID) {
            return base.Channel.SaveReferenceCodes(intTariffID, dsSave, UserId, WorkStationID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveReferenceCodesAsync(int intTariffID, System.Data.DataSet dsSave, int UserId, int WorkStationID) {
            return base.Channel.SaveReferenceCodesAsync(intTariffID, dsSave, UserId, WorkStationID);
        }
        
        public decimal GetMaxCollectable(System.DateTime dtFromdate, System.DateTime dtToDate, int intPatientID, int intGradeID, int intCompanyID, int intSpecialisationID, int intLOAID, string strtbl, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionId, string strCallContext) {
            return base.Channel.GetMaxCollectable(dtFromdate, dtToDate, intPatientID, intGradeID, intCompanyID, intSpecialisationID, intLOAID, strtbl, intUserId, intWorkStationId, intError, intFeatureId, intFunctionId, strCallContext);
        }
        
        public System.Threading.Tasks.Task<decimal> GetMaxCollectableAsync(System.DateTime dtFromdate, System.DateTime dtToDate, int intPatientID, int intGradeID, int intCompanyID, int intSpecialisationID, int intLOAID, string strtbl, int intUserId, int intWorkStationId, int intError, int intFeatureId, int intFunctionId, string strCallContext) {
            return base.Channel.GetMaxCollectableAsync(dtFromdate, dtToDate, intPatientID, intGradeID, intCompanyID, intSpecialisationID, intLOAID, strtbl, intUserId, intWorkStationId, intError, intFeatureId, intFunctionId, strCallContext);
        }
        
        public System.Data.DataSet GetCompanyGrades(string GradeIDs, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetCompanyGrades(GradeIDs, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCompanyGradesAsync(string GradeIDs, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetCompanyGradesAsync(GradeIDs, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet GetConsultants(int intServiceId, byte btIsMedical, byte btMedicalType) {
            return base.Channel.GetConsultants(intServiceId, btIsMedical, btMedicalType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetConsultantsAsync(int intServiceId, byte btIsMedical, byte btMedicalType) {
            return base.Channel.GetConsultantsAsync(intServiceId, btIsMedical, btMedicalType);
        }
        
        public System.Data.DataSet GetAgreementService(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementService(intAgreementID, intPatientType, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAgreementServiceAsync(int intAgreementID, int intPatientType, int intLanguageID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetAgreementServiceAsync(intAgreementID, intPatientType, intLanguageID, intUserID, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetBedTypes(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetBedTypes(intTblID, strFilter, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBedTypesAsync(int intTblID, string strFilter, int intLanguageID, int intUserID, int intWorkStationID, int intError) {
            return base.Channel.GetBedTypesAsync(intTblID, strFilter, intLanguageID, intUserID, intWorkStationID, intError);
        }
        
        public System.Data.DataSet FetchEmployeedata(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchEmployeedata(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchEmployeedataAsync(string strEmpId, string strEmpno, string strTable, string intDeleted, int intUserId, int intWorkStid, int intError) {
            return base.Channel.FetchEmployeedataAsync(strEmpId, strEmpno, strTable, intDeleted, intUserId, intWorkStid, intError);
        }
        
        public System.Data.DataSet FetchSpecialization(string strType, string strFilter, int intUserID, int intWorkstationID, int LangId, string strOrder) {
            return base.Channel.FetchSpecialization(strType, strFilter, intUserID, intWorkstationID, LangId, strOrder);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchSpecializationAsync(string strType, string strFilter, int intUserID, int intWorkstationID, int LangId, string strOrder) {
            return base.Channel.FetchSpecializationAsync(strType, strFilter, intUserID, intWorkstationID, LangId, strOrder);
        }
        
        public System.Data.DataSet FetchPackages(string strType, int intPatientType, int intServiceID, int intPackageID, int intUserID, int intWorkstationID, int HospitalID) {
            return base.Channel.FetchPackages(strType, intPatientType, intServiceID, intPackageID, intUserID, intWorkstationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPackagesAsync(string strType, int intPatientType, int intServiceID, int intPackageID, int intUserID, int intWorkstationID, int HospitalID) {
            return base.Channel.FetchPackagesAsync(strType, intPatientType, intServiceID, intPackageID, intUserID, intWorkstationID, HospitalID);
        }
        
        public bool SavePackageHospital(int intPackageID, System.Data.DataTable dsPackage, int intServiceID, int intUserId, int intWorkStationId, int intError, int intHospitalID) {
            return base.Channel.SavePackageHospital(intPackageID, dsPackage, intServiceID, intUserId, intWorkStationId, intError, intHospitalID);
        }
        
        public System.Threading.Tasks.Task<bool> SavePackageHospitalAsync(int intPackageID, System.Data.DataTable dsPackage, int intServiceID, int intUserId, int intWorkStationId, int intError, int intHospitalID) {
            return base.Channel.SavePackageHospitalAsync(intPackageID, dsPackage, intServiceID, intUserId, intWorkStationId, intError, intHospitalID);
        }
        
        public int SaveCompanyMappedDocuments(int intCompanyID, int intDocumentID, System.Data.DataSet dsMappedDoc, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.SaveCompanyMappedDocuments(intCompanyID, intDocumentID, dsMappedDoc, intUserID, intWorkstationID, intError);
        }
        
        public System.Threading.Tasks.Task<int> SaveCompanyMappedDocumentsAsync(int intCompanyID, int intDocumentID, System.Data.DataSet dsMappedDoc, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.SaveCompanyMappedDocumentsAsync(intCompanyID, intDocumentID, dsMappedDoc, intUserID, intWorkstationID, intError);
        }
        
        public System.Data.DataSet FetchMappedCompanyDocuments(int intCompanyID, int intUserId, int intWorkStationId) {
            return base.Channel.FetchMappedCompanyDocuments(intCompanyID, intUserId, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchMappedCompanyDocumentsAsync(int intCompanyID, int intUserId, int intWorkStationId) {
            return base.Channel.FetchMappedCompanyDocumentsAsync(intCompanyID, intUserId, intWorkStationId);
        }
        
        public string SavePackage_Partone(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext, 
                    string packagecode, 
                    string strRemarks) {
            return base.Channel.SavePackage_Partone(lngPackageId, strPackageName, strPackageName2L, blnNoDayLimit, intMaxdays, intStartBefore, strWithEffectDate, strEndDate, blnIsDOA, intTariffID, dsPackages, blnBlocked, intPatientType, intUserId, intWorkStationId, intError, intGradeID, strHospId, intFeatureId, intFunctionId, intCallContext, packagecode, strRemarks);
        }
        
        public System.Threading.Tasks.Task<string> SavePackage_PartoneAsync(
                    long lngPackageId, 
                    string strPackageName, 
                    string strPackageName2L, 
                    bool blnNoDayLimit, 
                    int intMaxdays, 
                    int intStartBefore, 
                    string strWithEffectDate, 
                    string strEndDate, 
                    bool blnIsDOA, 
                    int intTariffID, 
                    System.Data.DataSet dsPackages, 
                    bool blnBlocked, 
                    int intPatientType, 
                    int intUserId, 
                    int intWorkStationId, 
                    int intError, 
                    int intGradeID, 
                    int strHospId, 
                    int intFeatureId, 
                    int intFunctionId, 
                    int intCallContext, 
                    string packagecode, 
                    string strRemarks) {
            return base.Channel.SavePackage_PartoneAsync(lngPackageId, strPackageName, strPackageName2L, blnNoDayLimit, intMaxdays, intStartBefore, strWithEffectDate, strEndDate, blnIsDOA, intTariffID, dsPackages, blnBlocked, intPatientType, intUserId, intWorkStationId, intError, intGradeID, strHospId, intFeatureId, intFunctionId, intCallContext, packagecode, strRemarks);
        }
        
        public string SaveGenericICDMapping(System.Data.DataSet objDS, int GenericID, int intUserID, int intWorkStationID, int HospitalID) {
            return base.Channel.SaveGenericICDMapping(objDS, GenericID, intUserID, intWorkStationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<string> SaveGenericICDMappingAsync(System.Data.DataSet objDS, int GenericID, int intUserID, int intWorkStationID, int HospitalID) {
            return base.Channel.SaveGenericICDMappingAsync(objDS, GenericID, intUserID, intWorkStationID, HospitalID);
        }
        
        public string SaveGenericICDMappingbyCode(System.Data.DataSet objDS, string GenericCode, int intUserID, int intWorkStationID, int HospitalID) {
            return base.Channel.SaveGenericICDMappingbyCode(objDS, GenericCode, intUserID, intWorkStationID, HospitalID);
        }
        
        public System.Threading.Tasks.Task<string> SaveGenericICDMappingbyCodeAsync(System.Data.DataSet objDS, string GenericCode, int intUserID, int intWorkStationID, int HospitalID) {
            return base.Channel.SaveGenericICDMappingbyCodeAsync(objDS, GenericCode, intUserID, intWorkStationID, HospitalID);
        }
        
        public System.Data.DataSet FetchGenericDiseaseDetails(int GenericItemID, int intUserId, int intWorkStId, int intHospitId) {
            return base.Channel.FetchGenericDiseaseDetails(GenericItemID, intUserId, intWorkStId, intHospitId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchGenericDiseaseDetailsAsync(int GenericItemID, int intUserId, int intWorkStId, int intHospitId) {
            return base.Channel.FetchGenericDiseaseDetailsAsync(GenericItemID, intUserId, intWorkStId, intHospitId);
        }
        
        public System.Data.DataSet FetchAllGenericDiseaseDetails(int intUserId, int intWorkStId, int intHospitId) {
            return base.Channel.FetchAllGenericDiseaseDetails(intUserId, intWorkStId, intHospitId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchAllGenericDiseaseDetailsAsync(int intUserId, int intWorkStId, int intHospitId) {
            return base.Channel.FetchAllGenericDiseaseDetailsAsync(intUserId, intWorkStId, intHospitId);
        }
        
        public System.Data.DataSet FetchGenericItemsWithDiseaseMap(string diseaseids, int intUserId, int intWorkStId) {
            return base.Channel.FetchGenericItemsWithDiseaseMap(diseaseids, intUserId, intWorkStId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchGenericItemsWithDiseaseMapAsync(string diseaseids, int intUserId, int intWorkStId) {
            return base.Channel.FetchGenericItemsWithDiseaseMapAsync(diseaseids, intUserId, intWorkStId);
        }
        
        public bool SavePackage_Parttwo(long lngPackageId, System.Data.DataSet dsPackages, int intPatientType, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, int intCallContext) {
            return base.Channel.SavePackage_Parttwo(lngPackageId, dsPackages, intPatientType, intUserId, intWorkStationId, intError, strHospId, intFeatureId, intFunctionId, intCallContext);
        }
        
        public System.Threading.Tasks.Task<bool> SavePackage_ParttwoAsync(long lngPackageId, System.Data.DataSet dsPackages, int intPatientType, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, int intCallContext) {
            return base.Channel.SavePackage_ParttwoAsync(lngPackageId, dsPackages, intPatientType, intUserId, intWorkStationId, intError, strHospId, intFeatureId, intFunctionId, intCallContext);
        }
        
        public string GetICUConfig() {
            return base.Channel.GetICUConfig();
        }
        
        public System.Threading.Tasks.Task<string> GetICUConfigAsync() {
            return base.Channel.GetICUConfigAsync();
        }
        
        public System.Data.DataSet GetCategorys(int Type, string FilterCondition, int UserId, int WorkStationId, int intError, int LanguageID, int FeatureID, int FunctionID, string CallContext) {
            return base.Channel.GetCategorys(Type, FilterCondition, UserId, WorkStationId, intError, LanguageID, FeatureID, FunctionID, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategorysAsync(int Type, string FilterCondition, int UserId, int WorkStationId, int intError, int LanguageID, int FeatureID, int FunctionID, string CallContext) {
            return base.Channel.GetCategorysAsync(Type, FilterCondition, UserId, WorkStationId, intError, LanguageID, FeatureID, FunctionID, CallContext);
        }
        
        public System.Data.DataSet GetCategoryItems(int CategoryID, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError) {
            return base.Channel.GetCategoryItems(CategoryID, intUserId, intWorkStationId, FeatureID, FunctionID, CallContext, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryItemsAsync(int CategoryID, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError) {
            return base.Channel.GetCategoryItemsAsync(CategoryID, intUserId, intWorkStationId, FeatureID, FunctionID, CallContext, intError);
        }
        
        public System.Data.DataSet GetCategoryItems_Pharma(string CategoryIDs, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError) {
            return base.Channel.GetCategoryItems_Pharma(CategoryIDs, intUserId, intWorkStationId, FeatureID, FunctionID, CallContext, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryItems_PharmaAsync(string CategoryIDs, int intUserId, int intWorkStationId, int FeatureID, int FunctionID, string CallContext, int intError) {
            return base.Channel.GetCategoryItems_PharmaAsync(CategoryIDs, intUserId, intWorkStationId, FeatureID, FunctionID, CallContext, intError);
        }
        
        public bool SaveMappedCategoryItems(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int ServiceID, int UserID, int WorkStationID, bool Blocked, int Error, int HospDeptID, int SpecialiseID) {
            return base.Channel.SaveMappedCategoryItems(GroupName, GroupID, dtCategoryItems, ServiceID, UserID, WorkStationID, Blocked, Error, HospDeptID, SpecialiseID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMappedCategoryItemsAsync(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int ServiceID, int UserID, int WorkStationID, bool Blocked, int Error, int HospDeptID, int SpecialiseID) {
            return base.Channel.SaveMappedCategoryItemsAsync(GroupName, GroupID, dtCategoryItems, ServiceID, UserID, WorkStationID, Blocked, Error, HospDeptID, SpecialiseID);
        }
        
        public bool SaveMultipleSvcCategoryItems(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int UserID, int WorkStationID, bool Blocked, int Error) {
            return base.Channel.SaveMultipleSvcCategoryItems(GroupName, GroupID, dtCategoryItems, UserID, WorkStationID, Blocked, Error);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMultipleSvcCategoryItemsAsync(string GroupName, int GroupID, System.Data.DataTable dtCategoryItems, int UserID, int WorkStationID, bool Blocked, int Error) {
            return base.Channel.SaveMultipleSvcCategoryItemsAsync(GroupName, GroupID, dtCategoryItems, UserID, WorkStationID, Blocked, Error);
        }
        
        public System.Data.DataSet GetCategories(string tablename, string filter, int intWorkStationId) {
            return base.Channel.GetCategories(tablename, filter, intWorkStationId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync(string tablename, string filter, int intWorkStationId) {
            return base.Channel.GetCategoriesAsync(tablename, filter, intWorkStationId);
        }
        
        public bool SaveLuxuryTaxConfiguration(int LuxuryTaxConfigurationId, decimal CAPAmount, decimal Tax, bool LuxuryTaxRequired, int HospitalID, int UserID, int WorkStationID, int Error) {
            return base.Channel.SaveLuxuryTaxConfiguration(LuxuryTaxConfigurationId, CAPAmount, Tax, LuxuryTaxRequired, HospitalID, UserID, WorkStationID, Error);
        }
        
        public System.Threading.Tasks.Task<bool> SaveLuxuryTaxConfigurationAsync(int LuxuryTaxConfigurationId, decimal CAPAmount, decimal Tax, bool LuxuryTaxRequired, int HospitalID, int UserID, int WorkStationID, int Error) {
            return base.Channel.SaveLuxuryTaxConfigurationAsync(LuxuryTaxConfigurationId, CAPAmount, Tax, LuxuryTaxRequired, HospitalID, UserID, WorkStationID, Error);
        }
        
        public System.Data.DataSet GetLuxuryTaxConfiguration(int Type, string FilterCondition, int UserId, int WorkStationId, int Error, int LanguageID, int FeatureID, int FunctionID, string CallContext) {
            return base.Channel.GetLuxuryTaxConfiguration(Type, FilterCondition, UserId, WorkStationId, Error, LanguageID, FeatureID, FunctionID, CallContext);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLuxuryTaxConfigurationAsync(int Type, string FilterCondition, int UserId, int WorkStationId, int Error, int LanguageID, int FeatureID, int FunctionID, string CallContext) {
            return base.Channel.GetLuxuryTaxConfigurationAsync(Type, FilterCondition, UserId, WorkStationId, Error, LanguageID, FeatureID, FunctionID, CallContext);
        }
        
        public bool BlockExistingLOA(string strCondition, int intWorkStationId, int HospitalId) {
            return base.Channel.BlockExistingLOA(strCondition, intWorkStationId, HospitalId);
        }
        
        public System.Threading.Tasks.Task<bool> BlockExistingLOAAsync(string strCondition, int intWorkStationId, int HospitalId) {
            return base.Channel.BlockExistingLOAAsync(strCondition, intWorkStationId, HospitalId);
        }
        
        public bool SaveTariffSurgConfigMapping(int Tariffid, int facilityid, string Configid, int userID, int WorkStationID, int locationID, int billtypeid, int error) {
            return base.Channel.SaveTariffSurgConfigMapping(Tariffid, facilityid, Configid, userID, WorkStationID, locationID, billtypeid, error);
        }
        
        public System.Threading.Tasks.Task<bool> SaveTariffSurgConfigMappingAsync(int Tariffid, int facilityid, string Configid, int userID, int WorkStationID, int locationID, int billtypeid, int error) {
            return base.Channel.SaveTariffSurgConfigMappingAsync(Tariffid, facilityid, Configid, userID, WorkStationID, locationID, billtypeid, error);
        }
        
        public System.Data.DataSet FetchSurgeryConfig(string Configid) {
            return base.Channel.FetchSurgeryConfig(Configid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchSurgeryConfigAsync(string Configid) {
            return base.Channel.FetchSurgeryConfigAsync(Configid);
        }
        
        public string SaveSurgeryConfigs(string strSurgConfigs, string strConfigid, int intUserID, int intWorkstationID, int intError, int intHospid) {
            return base.Channel.SaveSurgeryConfigs(strSurgConfigs, strConfigid, intUserID, intWorkstationID, intError, intHospid);
        }
        
        public System.Threading.Tasks.Task<string> SaveSurgeryConfigsAsync(string strSurgConfigs, string strConfigid, int intUserID, int intWorkstationID, int intError, int intHospid) {
            return base.Channel.SaveSurgeryConfigsAsync(strSurgConfigs, strConfigid, intUserID, intWorkstationID, intError, intHospid);
        }
        
        public System.Data.DataSet FetchSurgeryConfigurationsTariffWise(int intTariffid, int intBilltype, int intFacilityid) {
            return base.Channel.FetchSurgeryConfigurationsTariffWise(intTariffid, intBilltype, intFacilityid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchSurgeryConfigurationsTariffWiseAsync(int intTariffid, int intBilltype, int intFacilityid) {
            return base.Channel.FetchSurgeryConfigurationsTariffWiseAsync(intTariffid, intBilltype, intFacilityid);
        }
        
        public string FetchPriceForPackages(int intPackageID, int intTariffid, int intBedTypeid, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchPriceForPackages(intPackageID, intTariffid, intBedTypeid, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<string> FetchPriceForPackagesAsync(int intPackageID, int intTariffid, int intBedTypeid, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchPriceForPackagesAsync(intPackageID, intTariffid, intBedTypeid, intUserId, intWorkStationId, intError);
        }
        
        public string FetchTariffSurgConfigMapping(int intTariffID, int intFacilityTypeID, int intBillType) {
            return base.Channel.FetchTariffSurgConfigMapping(intTariffID, intFacilityTypeID, intBillType);
        }
        
        public System.Threading.Tasks.Task<string> FetchTariffSurgConfigMappingAsync(int intTariffID, int intFacilityTypeID, int intBillType) {
            return base.Channel.FetchTariffSurgConfigMappingAsync(intTariffID, intFacilityTypeID, intBillType);
        }
        
        public System.Data.DataSet GetServiceWiseTariffDetails(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, int HospitalID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetServiceWiseTariffDetails(intTariffID, strServiceID, strBedTypeIDs, strSelectedDate, HospitalID, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetServiceWiseTariffDetailsAsync(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, int HospitalID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetServiceWiseTariffDetailsAsync(intTariffID, strServiceID, strBedTypeIDs, strSelectedDate, HospitalID, intUserID, intWorkStationId, intError);
        }
        
        public System.Data.DataSet GetTariffUpdateReport(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, string TBL, int HospitalID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetTariffUpdateReport(intTariffID, strServiceID, strBedTypeIDs, strSelectedDate, TBL, HospitalID, intUserID, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTariffUpdateReportAsync(int intTariffID, string strServiceID, string strBedTypeIDs, string strSelectedDate, string TBL, int HospitalID, int intUserID, int intWorkStationId, int intError) {
            return base.Channel.GetTariffUpdateReportAsync(intTariffID, strServiceID, strBedTypeIDs, strSelectedDate, TBL, HospitalID, intUserID, intWorkStationId, intError);
        }
        
        public string SavePackageAgreement(int intPackageID, int intLocationID, string strXML, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.SavePackageAgreement(intPackageID, intLocationID, strXML, intUserID, intWorkstationID, intError);
        }
        
        public System.Threading.Tasks.Task<string> SavePackageAgreementAsync(int intPackageID, int intLocationID, string strXML, int intUserID, int intWorkstationID, int intError) {
            return base.Channel.SavePackageAgreementAsync(intPackageID, intLocationID, strXML, intUserID, intWorkstationID, intError);
        }
        
        public System.Data.DataTable FetchPackageAgreement(int intPackageID, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchPackageAgreement(intPackageID, intUserId, intWorkStationId, intError);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> FetchPackageAgreementAsync(int intPackageID, int intUserId, int intWorkStationId, int intError) {
            return base.Channel.FetchPackageAgreementAsync(intPackageID, intUserId, intWorkStationId, intError);
        }
        
        public string SaveAgreementCoverageRules(int Isdefault, int AgreementId, string strXML, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, string intCallContext) {
            return base.Channel.SaveAgreementCoverageRules(Isdefault, AgreementId, strXML, intUserId, intWorkStationId, intError, strHospId, intFeatureId, intFunctionId, intCallContext);
        }
        
        public System.Threading.Tasks.Task<string> SaveAgreementCoverageRulesAsync(int Isdefault, int AgreementId, string strXML, int intUserId, int intWorkStationId, int intError, int strHospId, int intFeatureId, int intFunctionId, string intCallContext) {
            return base.Channel.SaveAgreementCoverageRulesAsync(Isdefault, AgreementId, strXML, intUserId, intWorkStationId, intError, strHospId, intFeatureId, intFunctionId, intCallContext);
        }
    }
}
